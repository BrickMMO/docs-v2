{"pageProps":{"userLanguage":"en","componentsApiDescriptions":{"Dropdown":{"en":{"componentDescription":"","propDescriptions":{"defaultOpen":{"description":"If <code>true</code>, the dropdown is initially open."},"onOpenChange":{"description":"Callback fired when the component requests to be opened or closed."},"open":{"description":"Allows to control whether the dropdown is open. This is a controlled counterpart of <code>defaultOpen</code>."}},"classDescriptions":{}}},"Menu":{"en":{"componentDescription":"","propDescriptions":{"actions":{"description":"A ref with imperative actions that can be performed on the menu."},"anchor":{"description":"The element based on which the menu is positioned."},"onItemsChange":{"description":"Function called when the items displayed in the menu change."},"slotProps":{"description":"The props used for each slot inside the Menu."},"slots":{"description":"The components used for each slot inside the Menu. Either a string to use a HTML element or a component."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"listbox":{"description":"Class name applied to {{nodeName}}.","nodeName":"the listbox element"},"expanded":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>open={true}</code>"}},"slotDescriptions":{"root":"The component that renders the popup element.","listbox":"The component that renders the listbox."}}},"MenuButton":{"en":{"componentDescription":"","propDescriptions":{"className":{"description":"Class name applied to the root element."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"focusableWhenDisabled":{"description":"If <code>true</code>, allows a disabled button to receive focus."},"label":{"description":"Label of the button"},"slotProps":{"description":"The components used for each slot inside the MenuButton. Either a string to use a HTML element or a component."},"slots":{"description":"The props used for each slot inside the MenuButton."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"active":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>active={true}</code>"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code>"},"expanded":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"the associated menu is open"}},"slotDescriptions":{"root":"The component that renders the root."}}},"MenuItem":{"en":{"componentDescription":"","propDescriptions":{"label":{"description":"A text representation of the menu item&#39;s content. Used for keyboard text navigation matching."},"slotProps":{"description":"The props used for each slot inside the MenuItem."},"slots":{"description":"The components used for each slot inside the MenuItem. Either a string to use a HTML element or a component."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element","conditions":"<code>disabled={true}</code>"},"focusVisible":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element","conditions":"<code>focusVisible={true}</code>"}},"slotDescriptions":{"root":"The component that renders the root."}}}},"componentsApiPageContents":{"Dropdown":{"props":{"defaultOpen":{"type":{"name":"bool"}},"onOpenChange":{"type":{"name":"func"}},"open":{"type":{"name":"bool"}}},"name":"Dropdown","imports":["import { Dropdown } from '@mui/base/Dropdown';","import { Dropdown } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"spread":false,"themeDefaultProps":null,"muiName":"MuiDropdown","filename":"/packages/mui-base/src/Dropdown/Dropdown.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-menu/\">Menu</a></li></ul>","cssComponent":false},"Menu":{"props":{"actions":{"type":{"name":"custom","description":"ref"}},"anchor":{"type":{"name":"union","description":"HTML element<br>&#124;&nbsp;object<br>&#124;&nbsp;func"}},"onItemsChange":{"type":{"name":"func"}},"slotProps":{"type":{"name":"shape","description":"{ listbox?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ listbox?: elementType, root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}}},"name":"Menu","imports":["import { Menu } from '@mui/base/Menu';","import { Menu } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"slots":[{"name":"root","description":"The component that renders the popup element.","default":"'div'","class":".MuiMenu-root"},{"name":"listbox","description":"The component that renders the listbox.","default":"'ul'","class":".MuiMenu-listbox"}],"classes":{"classes":["expanded"],"globalClasses":{"expanded":"Mui-expanded"}},"spread":true,"muiName":"MuiMenu","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-base/src/Menu/Menu.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-menu/\">Menu</a></li></ul>","cssComponent":false},"MenuButton":{"props":{"className":{"type":{"name":"string"}},"disabled":{"type":{"name":"bool"},"default":"false"},"focusableWhenDisabled":{"type":{"name":"bool"},"default":"false"},"label":{"type":{"name":"string"}},"slotProps":{"type":{"name":"shape","description":"{ root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}}},"name":"MenuButton","imports":["import { MenuButton } from '@mui/base/MenuButton';","import { MenuButton } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"slots":[{"name":"root","description":"The component that renders the root.","default":"'button'","class":".MuiMenuButton-root"}],"classes":{"classes":["active","disabled","expanded"],"globalClasses":{"active":"Mui-active","disabled":"Mui-disabled","expanded":"Mui-expanded"}},"spread":true,"muiName":"MuiMenuButton","forwardsRefTo":"HTMLButtonElement","filename":"/packages/mui-base/src/MenuButton/MenuButton.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-menu/\">Menu</a></li></ul>","cssComponent":false},"MenuItem":{"props":{"label":{"type":{"name":"string"}},"slotProps":{"type":{"name":"shape","description":"{ root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}}},"name":"MenuItem","imports":["import { MenuItem } from '@mui/base/MenuItem';","import { MenuItem } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"slots":[{"name":"root","description":"The component that renders the root.","default":"'li'","class":".MuiMenuItem-root"}],"classes":{"classes":["disabled","focusVisible"],"globalClasses":{"disabled":"Mui-disabled","focusVisible":"Mui-focusVisible"}},"spread":true,"muiName":"MuiMenuItem","forwardsRefTo":"HTMLLIElement","filename":"/packages/mui-base/src/MenuItem/MenuItem.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-menu/\">Menu</a></li></ul>","cssComponent":false}},"hooksApiDescriptions":{"useDropdown":{"en":{"hookDescription":"","parametersDescriptions":{"defaultOpen":{"description":"If <code>true</code>, the dropdown is initially open."},"onOpenChange":{"description":"Callback fired when the component requests to be opened or closed."},"open":{"description":"Allows to control whether the dropdown is open. This is a controlled counterpart of <code>defaultOpen</code>."}},"returnValueDescriptions":{"contextValue":{"description":"The value to be passed into the DropdownContext provider."},"open":{"description":"If <code>true</code>, the dropdown is open."}}}},"useMenu":{"en":{"hookDescription":"","parametersDescriptions":{"disabledItemsFocusable":{"description":"If <code>true</code>, it will be possible to highlight disabled items."},"disableListWrap":{"description":"If <code>true</code>, the highlight will not wrap around the list if arrow keys are used."},"id":{"description":"The id of the menu. If not provided, it will be generated."},"listboxRef":{"description":"The ref to the menu&#39;s listbox node."},"onItemsChange":{"description":"Callback fired when the menu items change."}},"returnValueDescriptions":{"contextValue":{"description":"The value to be passed into the MenuProvider."},"dispatch":{"description":"Action dispatcher for the menu component. Allows to programmatically control the menu."},"getListboxProps":{"description":"Resolver for the listbox slot&#39;s props."},"highlightedValue":{"description":"The highlighted option in the menu listbox."},"listboxRef":{"description":"The ref to the menu&#39;s listbox node."},"menuItems":{"description":"Items in the menu listbox."},"open":{"description":"If <code>true</code>, the menu is open."},"triggerElement":{"description":"An element that triggers the visibility of the menu."}}}},"useMenuButton":{"en":{"hookDescription":"","parametersDescriptions":{"disabled":{"description":"If <code>true</code>, the component is disabled."},"focusableWhenDisabled":{"description":"If <code>true</code>, allows a disabled button to receive focus."},"rootRef":{"description":"The ref to the root element."}},"returnValueDescriptions":{"active":{"description":"If <code>true</code>, the component is active (pressed)."},"getRootProps":{"description":"Resolver for the root slot&#39;s props."},"rootRef":{"description":"The ref to the root element."}}}},"useMenuItem":{"en":{"hookDescription":"","parametersDescriptions":{},"returnValueDescriptions":{"disabled":{"description":"If <code>true</code>, the component is disabled."},"focusVisible":{"description":"If <code>true</code>, the component is being focused using keyboard."},"getRootProps":{"description":"Resolver for the root slot&#39;s props."},"highlighted":{"description":"If <code>true</code>, the component is being highlighted."},"index":{"description":"0-based index of the item in the menu."},"rootRef":{"description":"The ref to the component&#39;s root DOM element."},"totalItemCount":{"description":"Total number of items in the menu."}}}}},"hooksApiPageContents":{"useDropdown":{"parameters":{"defaultOpen":{"type":{"name":"boolean","description":"boolean"}},"onOpenChange":{"type":{"name":"(event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent | null, open: boolean) =&gt; void","description":"(event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent | null, open: boolean) =&gt; void"}},"open":{"type":{"name":"boolean","description":"boolean"}}},"returnValue":{"contextValue":{"type":{"name":"DropdownContextValue","description":"DropdownContextValue"},"required":true},"open":{"type":{"name":"boolean","description":"boolean"},"required":true}},"name":"useDropdown","filename":"/packages/mui-base/src/useDropdown/useDropdown.ts","imports":["import { useDropdown } from '@mui/base/useDropdown';","import { useDropdown } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-menu/#hooks\">Menu</a></li></ul>"},"useMenu":{"parameters":{"disabledItemsFocusable":{"type":{"name":"boolean","description":"boolean"},"default":"true"},"disableListWrap":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"id":{"type":{"name":"string","description":"string"}},"listboxRef":{"type":{"name":"React.Ref&lt;Element&gt;","description":"React.Ref&lt;Element&gt;"}},"onItemsChange":{"type":{"name":"(items: string[]) =&gt; void","description":"(items: string[]) =&gt; void"}}},"returnValue":{"contextValue":{"type":{"name":"MenuProviderValue","description":"MenuProviderValue"},"required":true},"dispatch":{"type":{"name":"(action: ListAction&lt;string&gt;) =&gt; void","description":"(action: ListAction&lt;string&gt;) =&gt; void"},"required":true},"getListboxProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseMenuListboxSlotProps","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseMenuListboxSlotProps"},"required":true},"highlightedValue":{"type":{"name":"string | null","description":"string | null"},"required":true},"listboxRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true},"menuItems":{"type":{"name":"Map&lt;string, MenuItemMetadata&gt;","description":"Map&lt;string, MenuItemMetadata&gt;"},"required":true},"open":{"type":{"name":"boolean","description":"boolean"},"required":true},"triggerElement":{"type":{"name":"HTMLElement | null","description":"HTMLElement | null"},"required":true}},"name":"useMenu","filename":"/packages/mui-base/src/useMenu/useMenu.ts","imports":["import { useMenu } from '@mui/base/useMenu';","import { useMenu } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-menu/#hooks\">Menu</a></li></ul>"},"useMenuButton":{"parameters":{"disabled":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"focusableWhenDisabled":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"rootRef":{"type":{"name":"React.Ref&lt;HTMLElement&gt;","description":"React.Ref&lt;HTMLElement&gt;"}}},"returnValue":{"active":{"type":{"name":"boolean","description":"boolean"},"required":true},"getRootProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseMenuButtonRootSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseMenuButtonRootSlotProps&lt;ExternalProps&gt;"},"required":true},"open":{"type":{"name":"boolean","description":"boolean"},"required":true},"rootRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true}},"name":"useMenuButton","filename":"/packages/mui-base/src/useMenuButton/useMenuButton.ts","imports":["import { useMenuButton } from '@mui/base/useMenuButton';","import { useMenuButton } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-menu/#hooks\">Menu</a></li></ul>"},"useMenuItem":{"parameters":{"rootRef":{"type":{"name":"React.Ref&lt;Element&gt;","description":"React.Ref&lt;Element&gt;"},"required":true},"disabled":{"type":{"name":"boolean","description":"boolean"}},"id":{"type":{"name":"string","description":"string"}},"label":{"type":{"name":"string","description":"string"}},"onClick":{"type":{"name":"React.MouseEventHandler&lt;any&gt;","description":"React.MouseEventHandler&lt;any&gt;"}}},"returnValue":{"disabled":{"type":{"name":"boolean","description":"boolean"},"required":true},"focusVisible":{"type":{"name":"boolean","description":"boolean"},"required":true},"getRootProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseMenuItemRootSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseMenuItemRootSlotProps&lt;ExternalProps&gt;"},"required":true},"highlighted":{"type":{"name":"boolean","description":"boolean"},"required":true},"index":{"type":{"name":"number","description":"number"},"required":true},"rootRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true},"totalItemCount":{"type":{"name":"number","description":"number"},"required":true}},"name":"useMenuItem","filename":"/packages/mui-base/src/useMenuItem/useMenuItem.ts","imports":["import { useMenuItem } from '@mui/base/useMenuItem';","import { useMenuItem } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-menu/#hooks\">Menu</a></li></ul>"}}},"__N_SSG":true}