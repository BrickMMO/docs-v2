{"pageProps":{"userLanguage":"en","componentsApiDescriptions":{"Popup":{"en":{"componentDescription":"","propDescriptions":{"anchor":{"description":"An HTML element, <a href=\"https://floating-ui.com/docs/virtual-elements\">virtual element</a>, or a function that returns either. It&#39;s used to set the position of the popup."},"container":{"description":"An HTML element or function that returns one. The container will have the portal children appended to it. By default, it uses the body of the top-level document object, so it&#39;s <code>document.body</code> in these cases."},"disablePortal":{"description":"If <code>true</code>, the popup will be rendered where it is defined, without the use of portals."},"keepMounted":{"description":"If <code>true</code>, the popup will exist in the DOM even if it&#39;s closed. Its visibility will be controlled by the <code>display</code> CSS property.<br>Otherwise, a closed popup will be removed from the DOM."},"middleware":{"description":"Collection of Floating UI middleware to use when positioning the popup. If not provided, the <a href=\"https://floating-ui.com/docs/offset\"><code>offset</code></a> and <a href=\"https://floating-ui.com/docs/flip\"><code>flip</code></a> functions will be used."},"offset":{"description":"Distance between a popup and the trigger element. This prop is ignored when custom <code>middleware</code> is provided."},"open":{"description":"If <code>true</code>, the popup is visible."},"placement":{"description":"Determines where to place the popup relative to the trigger element."},"slotProps":{"description":"The props used for each slot inside the Popup."},"slots":{"description":"The components used for each slot inside the Popup. Either a string to use a HTML element or a component."},"strategy":{"description":"The type of CSS position property to use (absolute or fixed)."},"withTransition":{"description":"If <code>true</code>, the popup will not disappear immediately when it needs to be closed but wait until the exit transition has finished. In such a case, a function form of <code>children</code> must be used and <code>onExited</code> callback function must be called when the transition or animation finish."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"open":{"description":"Class name applied to {{nodeName}} when {{conditions}}.","nodeName":"the root element","conditions":"the popup is open"}},"slotDescriptions":{"root":"The component that renders the root."}}}},"componentsApiPageContents":{"Popup":{"props":{"anchor":{"type":{"name":"union","description":"HTML element<br>&#124;&nbsp;object<br>&#124;&nbsp;func"}},"container":{"type":{"name":"union","description":"HTML element<br>&#124;&nbsp;func"}},"disablePortal":{"type":{"name":"bool"},"default":"false"},"keepMounted":{"type":{"name":"bool"},"default":"false"},"middleware":{"type":{"name":"arrayOf","description":"Array&lt;false<br>&#124;&nbsp;{ fn: func, name: string, options?: any }&gt;"}},"offset":{"type":{"name":"union","description":"func<br>&#124;&nbsp;number<br>&#124;&nbsp;{ alignmentAxis?: number, crossAxis?: number, mainAxis?: number }"},"default":"0"},"open":{"type":{"name":"bool"},"default":"false"},"placement":{"type":{"name":"enum","description":"'bottom-end'<br>&#124;&nbsp;'bottom-start'<br>&#124;&nbsp;'bottom'<br>&#124;&nbsp;'left-end'<br>&#124;&nbsp;'left-start'<br>&#124;&nbsp;'left'<br>&#124;&nbsp;'right-end'<br>&#124;&nbsp;'right-start'<br>&#124;&nbsp;'right'<br>&#124;&nbsp;'top-end'<br>&#124;&nbsp;'top-start'<br>&#124;&nbsp;'top'"},"default":"'bottom'"},"slotProps":{"type":{"name":"shape","description":"{ root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"strategy":{"type":{"name":"enum","description":"'absolute'<br>&#124;&nbsp;'fixed'"},"default":"'absolute'"},"withTransition":{"type":{"name":"bool"},"default":"false"}},"name":"Popup","imports":["import { Unstable_Popup as Popup } from '@mui/base/Unstable_Popup';","import { Unstable_Popup as Popup } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"slots":[{"name":"root","description":"The component that renders the root.","default":"'div'","class":".MuiPopup-root"}],"classes":{"classes":["open"],"globalClasses":{"open":"Mui-open"}},"spread":true,"muiName":"MuiPopup","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-base/src/Unstable_Popup/Popup.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-popup/\">Popup</a></li></ul>","cssComponent":false}},"hooksApiDescriptions":{},"hooksApiPageContents":{}},"__N_SSG":true}