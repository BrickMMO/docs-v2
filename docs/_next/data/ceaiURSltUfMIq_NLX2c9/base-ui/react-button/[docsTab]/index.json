{"pageProps":{"userLanguage":"en","componentsApiDescriptions":{"Button":{"en":{"componentDescription":"<p>The foundation for building custom-styled buttons.</p>\n","propDescriptions":{"action":{"description":"A ref for imperative actions. It currently only supports <code>focusVisible()</code> action."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"focusableWhenDisabled":{"description":"If <code>true</code>, allows a disabled button to receive focus."},"slotProps":{"description":"The props used for each slot inside the Button."},"slots":{"description":"The components used for each slot inside the Button. Either a string to use a HTML element or a component."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"active":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element","conditions":"<code>active={true}</code>"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element","conditions":"<code>disabled={true}</code>"},"focusVisible":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element","conditions":"<code>focusVisible={true}</code>"}},"slotDescriptions":{"root":"The component that renders the root."},"componentDescriptionToc":[]}}},"componentsApiPageContents":{"Button":{"props":{"action":{"type":{"name":"union","description":"func<br>&#124;&nbsp;{ current?: { focusVisible: func } }"}},"disabled":{"type":{"name":"bool"},"default":"false"},"focusableWhenDisabled":{"type":{"name":"bool"},"default":"false"},"slotProps":{"type":{"name":"shape","description":"{ root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}}},"name":"Button","imports":["import { Button } from '@mui/base/Button';","import { Button } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"slots":[{"name":"root","description":"The component that renders the root.","default":"props.href || props.to ? 'a' : 'button'","class":".MuiButton-root"}],"classes":{"classes":["active","disabled","focusVisible"],"globalClasses":{"active":"Mui-active","disabled":"Mui-disabled","focusVisible":"Mui-focusVisible"}},"spread":true,"muiName":"MuiButton","forwardsRefTo":"HTMLButtonElement","filename":"/packages/mui-base/src/Button/Button.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-button/\">Button</a></li></ul>","cssComponent":false}},"hooksApiDescriptions":{"useButton":{"en":{"hookDescription":"","parametersDescriptions":{"disabled":{"description":"If <code>true</code>, the component is disabled."},"focusableWhenDisabled":{"description":"If <code>true</code>, allows a disabled button to receive focus."},"type":{"description":"Type attribute applied when the <code>component</code> is <code>button</code>."}},"returnValueDescriptions":{"active":{"description":"If <code>true</code>, the component is active (pressed)."},"focusVisible":{"description":"If <code>true</code>, the component is being focused using keyboard."},"getRootProps":{"description":"Resolver for the root slot&#39;s props."},"rootRef":{"description":"A ref to the component&#39;s root DOM element."},"setFocusVisible":{"description":"Callback for setting the <code>focusVisible</code> param."}}}}},"hooksApiPageContents":{"useButton":{"parameters":{"disabled":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"focusableWhenDisabled":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"href":{"type":{"name":"string","description":"string"}},"onFocusVisible":{"type":{"name":"React.FocusEventHandler","description":"React.FocusEventHandler"}},"rootRef":{"type":{"name":"React.Ref&lt;Element&gt;","description":"React.Ref&lt;Element&gt;"}},"tabIndex":{"type":{"name":"NonNullable&lt;React.HTMLAttributes&lt;any&gt;[&#39;tabIndex&#39;]&gt;","description":"NonNullable&lt;React.HTMLAttributes&lt;any&gt;[&#39;tabIndex&#39;]&gt;"}},"to":{"type":{"name":"string","description":"string"}},"type":{"type":{"name":"React.ButtonHTMLAttributes&lt;HTMLButtonElement&gt;[&#39;type&#39;]","description":"React.ButtonHTMLAttributes&lt;HTMLButtonElement&gt;[&#39;type&#39;]"},"default":"'button'"}},"returnValue":{"active":{"type":{"name":"boolean","description":"boolean"},"required":true},"focusVisible":{"type":{"name":"boolean","description":"boolean"},"required":true},"getRootProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, any&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseButtonRootSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, any&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseButtonRootSlotProps&lt;ExternalProps&gt;"},"required":true},"rootRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true},"setFocusVisible":{"type":{"name":"React.Dispatch&lt;React.SetStateAction&lt;boolean&gt;&gt;","description":"React.Dispatch&lt;React.SetStateAction&lt;boolean&gt;&gt;"},"required":true}},"name":"useButton","filename":"/packages/mui-base/src/useButton/useButton.ts","imports":["import { useButton } from '@mui/base/useButton';","import { useButton } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-button/#hook\">Button</a></li></ul>"}}},"__N_SSG":true}