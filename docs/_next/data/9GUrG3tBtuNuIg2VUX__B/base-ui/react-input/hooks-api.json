{"pageProps":{"userLanguage":"en","componentsApiDescriptions":{"Input":{"en":{"componentDescription":"","propDescriptions":{"autoComplete":{"description":"This prop helps users to fill forms faster, especially on mobile devices. The name can be confusing, as it&#39;s more like an autofill. You can learn more about it <a href=\"https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\">following the specification</a>."},"autoFocus":{"description":"If <code>true</code>, the <code>input</code> element is focused during the first mount."},"className":{"description":"Class name applied to the root element."},"defaultValue":{"description":"The default value. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."},"endAdornment":{"description":"Trailing adornment for this input."},"error":{"description":"If <code>true</code>, the <code>input</code> will indicate an error by setting the <code>aria-invalid</code> attribute on the input and the <code>Mui-error</code> class on the root element. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."},"id":{"description":"The id of the <code>input</code> element."},"maxRows":{"description":"Maximum number of rows to display when multiline option is set to true."},"minRows":{"description":"Minimum number of rows to display when multiline option is set to true."},"multiline":{"description":"If <code>true</code>, a <code>textarea</code> element is rendered."},"name":{"description":"Name attribute of the <code>input</code> element."},"placeholder":{"description":"The short hint displayed in the <code>input</code> before the user enters a value."},"readOnly":{"description":"It prevents the user from changing the value of the field (not from interacting with the field)."},"required":{"description":"If <code>true</code>, the <code>input</code> element is required. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."},"rows":{"description":"Number of rows to display when multiline option is set to true."},"slotProps":{"description":"The props used for each slot inside the Input."},"slots":{"description":"The components used for each slot inside the InputBase. Either a string to use a HTML element or a component."},"startAdornment":{"description":"Leading adornment for this input."},"type":{"description":"Type of the <code>input</code> element. It should be <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\">a valid HTML5 input type</a>."},"value":{"description":"The value of the <code>input</code> element, required for a controlled component."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"formControl":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"the component is a descendant of <code>FormControl</code>"},"adornedStart":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>startAdornment</code> is provided"},"adornedEnd":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>endAdornment</code> is provided"},"focused":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"the component is focused"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code>"},"error":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>error={true}</code>"},"multiline":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>multiline={true}</code>"},"input":{"description":"Class name applied to {{nodeName}}.","nodeName":"the input element"},"inputMultiline":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the input element","conditions":"<code>multiline={true}</code>"},"inputTypeSearch":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the input element","conditions":"<code>type=\"search\"</code>"}},"slotDescriptions":{"root":"The component that renders the root.","input":"The component that renders the input.","textarea":"The component that renders the textarea."}}}},"componentsApiPageContents":{"Input":{"props":{"autoComplete":{"type":{"name":"string"}},"autoFocus":{"type":{"name":"bool"}},"className":{"type":{"name":"string"}},"defaultValue":{"type":{"name":"any"}},"disabled":{"type":{"name":"bool"}},"endAdornment":{"type":{"name":"node"}},"error":{"type":{"name":"bool"}},"id":{"type":{"name":"string"}},"maxRows":{"type":{"name":"number"}},"minRows":{"type":{"name":"number"}},"multiline":{"type":{"name":"bool"},"default":"false"},"name":{"type":{"name":"string"}},"placeholder":{"type":{"name":"string"}},"readOnly":{"type":{"name":"bool"}},"required":{"type":{"name":"bool"}},"rows":{"type":{"name":"number"}},"slotProps":{"type":{"name":"shape","description":"{ input?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ input?: elementType, root?: elementType, textarea?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"startAdornment":{"type":{"name":"node"}},"type":{"type":{"name":"enum","description":"'button'<br>&#124;&nbsp;'checkbox'<br>&#124;&nbsp;'color'<br>&#124;&nbsp;'date'<br>&#124;&nbsp;'datetime-local'<br>&#124;&nbsp;'email'<br>&#124;&nbsp;'file'<br>&#124;&nbsp;'hidden'<br>&#124;&nbsp;'image'<br>&#124;&nbsp;'month'<br>&#124;&nbsp;'number'<br>&#124;&nbsp;'password'<br>&#124;&nbsp;'radio'<br>&#124;&nbsp;'range'<br>&#124;&nbsp;'reset'<br>&#124;&nbsp;'search'<br>&#124;&nbsp;'submit'<br>&#124;&nbsp;'tel'<br>&#124;&nbsp;'text'<br>&#124;&nbsp;'time'<br>&#124;&nbsp;'url'<br>&#124;&nbsp;'week'"},"default":"'text'"},"value":{"type":{"name":"any"}}},"name":"Input","imports":["import { Input } from '@mui/base/Input';","import { Input } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"slots":[{"name":"root","description":"The component that renders the root.","default":"'div'","class":".MuiInput-root"},{"name":"input","description":"The component that renders the input.","default":"'input'","class":".MuiInput-input"},{"name":"textarea","description":"The component that renders the textarea.","default":"'textarea'","class":null}],"classes":{"classes":["adornedEnd","adornedStart","disabled","error","focused","formControl","inputMultiline","inputTypeSearch","multiline"],"globalClasses":{"focused":"Mui-focused","disabled":"Mui-disabled","error":"Mui-error"}},"spread":true,"muiName":"MuiInput","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-base/src/Input/Input.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-input/\">Input</a></li></ul>","cssComponent":false}},"hooksApiDescriptions":{"useInput":{"en":{"hookDescription":"","parametersDescriptions":{"defaultValue":{"description":"The default value. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."},"error":{"description":"If <code>true</code>, the <code>input</code> will indicate an error by setting the <code>aria-invalid</code> attribute. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."},"required":{"description":"If <code>true</code>, the <code>input</code> element is required. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."}},"returnValueDescriptions":{"disabled":{"description":"If <code>true</code>, the component will be disabled."},"error":{"description":"If <code>true</code>, the <code>input</code> will indicate an error by setting the <code>aria-invalid</code> attribute."},"focused":{"description":"If <code>true</code>, the <code>input</code> will be focused."},"formControlContext":{"description":"Return value from the <code>useFormControlContext</code> hook."},"getInputProps":{"description":"Resolver for the input slot&#39;s props."},"getRootProps":{"description":"Resolver for the root slot&#39;s props."},"required":{"description":"If <code>true</code>, the <code>input</code> will indicate that it&#39;s required."},"value":{"description":"The <code>value</code> of the <code>input</code> element."}}}}},"hooksApiPageContents":{"useInput":{"parameters":{"defaultValue":{"type":{"name":"unknown","description":"unknown"}},"disabled":{"type":{"name":"boolean","description":"boolean"}},"error":{"type":{"name":"boolean","description":"boolean"}},"inputRef":{"type":{"name":"React.Ref&lt;HTMLInputElement | HTMLTextAreaElement&gt;","description":"React.Ref&lt;HTMLInputElement | HTMLTextAreaElement&gt;"}},"onBlur":{"type":{"name":"React.FocusEventHandler&lt;HTMLInputElement | HTMLTextAreaElement&gt;","description":"React.FocusEventHandler&lt;HTMLInputElement | HTMLTextAreaElement&gt;"}},"onChange":{"type":{"name":"React.ChangeEventHandler&lt;HTMLInputElement | HTMLTextAreaElement&gt;","description":"React.ChangeEventHandler&lt;HTMLInputElement | HTMLTextAreaElement&gt;"}},"onClick":{"type":{"name":"React.MouseEventHandler","description":"React.MouseEventHandler"}},"onFocus":{"type":{"name":"React.FocusEventHandler&lt;HTMLInputElement | HTMLTextAreaElement&gt;","description":"React.FocusEventHandler&lt;HTMLInputElement | HTMLTextAreaElement&gt;"}},"required":{"type":{"name":"boolean","description":"boolean"}},"value":{"type":{"name":"unknown","description":"unknown"}}},"returnValue":{"disabled":{"type":{"name":"boolean","description":"boolean"},"required":true},"error":{"type":{"name":"boolean","description":"boolean"},"required":true},"focused":{"type":{"name":"boolean","description":"boolean"},"required":true},"formControlContext":{"type":{"name":"FormControlState | undefined","description":"FormControlState | undefined"},"required":true},"getInputProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, any&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseInputInputSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, any&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseInputInputSlotProps&lt;ExternalProps&gt;"},"required":true},"getRootProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, any&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseInputRootSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, any&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseInputRootSlotProps&lt;ExternalProps&gt;"},"required":true},"inputRef":{"type":{"name":"React.RefCallback&lt;HTMLInputElement | HTMLTextAreaElement&gt; | null","description":"React.RefCallback&lt;HTMLInputElement | HTMLTextAreaElement&gt; | null"},"required":true},"required":{"type":{"name":"boolean","description":"boolean"},"required":true},"value":{"type":{"name":"unknown","description":"unknown"},"required":true}},"name":"useInput","filename":"/packages/mui-base/src/useInput/useInput.ts","imports":["import { useInput } from '@mui/base/useInput';","import { useInput } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-input/#hook\">Input</a></li></ul>"}}},"__N_SSG":true}