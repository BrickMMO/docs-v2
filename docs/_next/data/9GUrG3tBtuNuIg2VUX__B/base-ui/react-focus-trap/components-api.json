{"pageProps":{"userLanguage":"en","componentsApiDescriptions":{"FocusTrap":{"en":{"componentDescription":"<p>Utility component that locks focus inside the component.</p>\n","propDescriptions":{"children":{"description":"A single child content element.","requiresRef":true},"disableAutoFocus":{"description":"If <code>true</code>, the focus trap will not automatically shift focus to itself when it opens, and replace it to the last focused element when it closes. This also works correctly with any focus trap children that have the <code>disableAutoFocus</code> prop.<br>Generally this should never be set to <code>true</code> as it makes the focus trap less accessible to assistive technologies, like screen readers."},"disableEnforceFocus":{"description":"If <code>true</code>, the focus trap will not prevent focus from leaving the focus trap while open.<br>Generally this should never be set to <code>true</code> as it makes the focus trap less accessible to assistive technologies, like screen readers."},"disableRestoreFocus":{"description":"If <code>true</code>, the focus trap will not restore focus to previously focused element once focus trap is hidden or unmounted."},"getTabbable":{"description":"Returns an array of ordered tabbable nodes (i.e. in tab order) within the root. For instance, you can provide the &quot;tabbable&quot; npm dependency."},"isEnabled":{"description":"This prop extends the <code>open</code> prop. It allows to toggle the open state without having to wait for a rerender when changing the <code>open</code> prop. This prop should be memoized. It can be used to support multiple focus trap mounted at the same time."},"open":{"description":"If <code>true</code>, focus is locked."}},"classDescriptions":{},"componentDescriptionToc":[]}}},"componentsApiPageContents":{"FocusTrap":{"props":{"open":{"type":{"name":"bool"},"required":true},"children":{"type":{"name":"custom","description":"element"}},"disableAutoFocus":{"type":{"name":"bool"},"default":"false"},"disableEnforceFocus":{"type":{"name":"bool"},"default":"false"},"disableRestoreFocus":{"type":{"name":"bool"},"default":"false"},"getTabbable":{"type":{"name":"func"},"signature":{"type":"function(root: HTMLElement) => void","describedArgs":[]}},"isEnabled":{"type":{"name":"func"},"default":"function defaultIsEnabled(): boolean {\n  return true;\n}"}},"name":"FocusTrap","imports":["import { FocusTrap } from '@mui/base/FocusTrap';","import { FocusTrap } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"spread":false,"themeDefaultProps":null,"muiName":"MuiFocusTrap","filename":"/packages/mui-base/src/FocusTrap/FocusTrap.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-focus-trap/\">Focus Trap</a></li></ul>","cssComponent":false}},"hooksApiDescriptions":{},"hooksApiPageContents":{}},"__N_SSG":true}