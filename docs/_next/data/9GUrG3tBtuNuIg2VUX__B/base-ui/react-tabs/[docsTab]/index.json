{"pageProps":{"userLanguage":"en","componentsApiDescriptions":{"Tab":{"en":{"componentDescription":"","propDescriptions":{"action":{"description":"A ref for imperative actions. It currently only supports <code>focusVisible()</code> action."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"onChange":{"description":"Callback invoked when new value is being set."},"slotProps":{"description":"The props used for each slot inside the Tab."},"slots":{"description":"The components used for each slot inside the Tab. Either a string to use a HTML element or a component."},"value":{"description":"You can provide your own value. Otherwise, it falls back to the child position index."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"selected":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element","conditions":"<code>selected={true}</code>"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element","conditions":"<code>disabled={true}</code>"}},"slotDescriptions":{"root":"The component that renders the root."}}},"TabPanel":{"en":{"componentDescription":"","propDescriptions":{"children":{"description":"The content of the component."},"slotProps":{"description":"The props used for each slot inside the TabPanel."},"slots":{"description":"The components used for each slot inside the TabPanel. Either a string to use a HTML element or a component."},"value":{"description":"The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected. If not provided, it will fall back to the index of the panel. It is recommended to explicitly provide it, as it&#39;s required for the tab panel to be rendered on the server."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"hidden":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>div</code> element","conditions":"<code>hidden={true}</code>"}},"slotDescriptions":{"root":"The component that renders the root."}}},"Tabs":{"en":{"componentDescription":"","propDescriptions":{"children":{"description":"The content of the component."},"defaultValue":{"description":"The default value. Use when the component is not controlled."},"direction":{"description":"The direction of the text."},"onChange":{"description":"Callback invoked when new value is being set."},"orientation":{"description":"The component orientation (layout flow direction)."},"selectionFollowsFocus":{"description":"If <code>true</code> the selected tab changes on focus. Otherwise it only changes on activation."},"slotProps":{"description":"The props used for each slot inside the Tabs."},"slots":{"description":"The components used for each slot inside the Tabs. Either a string to use a HTML element or a component."},"value":{"description":"The value of the currently selected <code>Tab</code>. If you don&#39;t want any selected <code>Tab</code>, you can set this prop to <code>null</code>."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"horizontal":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>orientation='horizontal'</code>"},"vertical":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>orientation='vertical'</code>"}},"slotDescriptions":{"root":"The component that renders the root."}}},"TabsList":{"en":{"componentDescription":"","propDescriptions":{"children":{"description":"The content of the component."},"slotProps":{"description":"The props used for each slot inside the TabsList."},"slots":{"description":"The components used for each slot inside the TabsList. Either a string to use a HTML element or a component."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"horizontal":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>orientation='horizontal'</code>"},"vertical":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>orientation='vertical'</code>"}},"slotDescriptions":{"root":"The component that renders the root."}}}},"componentsApiPageContents":{"Tab":{"props":{"action":{"type":{"name":"union","description":"func<br>&#124;&nbsp;{ current?: { focusVisible: func } }"}},"disabled":{"type":{"name":"bool"},"default":"false"},"onChange":{"type":{"name":"func"}},"slotProps":{"type":{"name":"shape","description":"{ root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"value":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}}},"name":"Tab","imports":["import { Tab } from '@mui/base/Tab';","import { Tab } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"slots":[{"name":"root","description":"The component that renders the root.","default":"'button'","class":".MuiTab-root"}],"classes":{"classes":["disabled","selected"],"globalClasses":{"selected":"Mui-selected","disabled":"Mui-disabled"}},"spread":true,"muiName":"MuiTab","forwardsRefTo":"HTMLButtonElement","filename":"/packages/mui-base/src/Tab/Tab.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-tabs/\">Tabs</a></li></ul>","cssComponent":false},"TabPanel":{"props":{"children":{"type":{"name":"node"}},"slotProps":{"type":{"name":"shape","description":"{ root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"value":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}}},"name":"TabPanel","imports":["import { TabPanel } from '@mui/base/TabPanel';","import { TabPanel } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"slots":[{"name":"root","description":"The component that renders the root.","default":"'div'","class":".MuiTabPanel-root"}],"classes":{"classes":["hidden"],"globalClasses":{}},"spread":true,"muiName":"MuiTabPanel","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-base/src/TabPanel/TabPanel.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-tabs/\">Tabs</a></li></ul>","cssComponent":false},"Tabs":{"props":{"children":{"type":{"name":"node"}},"defaultValue":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}},"direction":{"type":{"name":"enum","description":"'ltr'<br>&#124;&nbsp;'rtl'"},"default":"'ltr'"},"onChange":{"type":{"name":"func"}},"orientation":{"type":{"name":"enum","description":"'horizontal'<br>&#124;&nbsp;'vertical'"},"default":"'horizontal'"},"selectionFollowsFocus":{"type":{"name":"bool"}},"slotProps":{"type":{"name":"shape","description":"{ root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"value":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}}},"name":"Tabs","imports":["import { Tabs } from '@mui/base/Tabs';","import { Tabs } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"slots":[{"name":"root","description":"The component that renders the root.","default":"'div'","class":".MuiTabs-root"}],"classes":{"classes":["horizontal","vertical"],"globalClasses":{}},"spread":true,"muiName":"MuiTabs","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-base/src/Tabs/Tabs.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-tabs/\">Tabs</a></li></ul>","cssComponent":false},"TabsList":{"props":{"children":{"type":{"name":"node"}},"slotProps":{"type":{"name":"shape","description":"{ root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}}},"name":"TabsList","imports":["import { TabsList } from '@mui/base/TabsList';","import { TabsList } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"slots":[{"name":"root","description":"The component that renders the root.","default":"'div'","class":".MuiTabsList-root"}],"classes":{"classes":["horizontal","vertical"],"globalClasses":{}},"spread":true,"muiName":"MuiTabsList","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-base/src/TabsList/TabsList.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-tabs/\">Tabs</a></li></ul>","cssComponent":false}},"hooksApiDescriptions":{"useTab":{"en":{"hookDescription":"","parametersDescriptions":{"disabled":{"description":"If <code>true</code>, the tab will be disabled."},"id":{"description":"The id of the tab. If not provided, it will be automatically generated."},"onChange":{"description":"If <code>true</code>, the tab will be disabled."},"onClick":{"description":"Callback fired when the tab is clicked."},"rootRef":{"description":"Ref to the root slot&#39;s DOM element."},"value":{"description":"The value of the tab. It&#39;s used to associate the tab with a tab panel(s) with the same value. If the value is not provided, it falls back to the position index."}},"returnValueDescriptions":{"active":{"description":"If <code>true</code>, the tab is active (as in <code>:active</code> pseudo-class; in other words, pressed)."},"focusVisible":{"description":"If <code>true</code>, the tab has visible focus. This is a workaround for browsers that do not support this feature natively."},"getRootProps":{"description":"Resolver for the root slot&#39;s props."},"highlighted":{"description":"If <code>true</code>, the tab is highlighted."},"index":{"description":"0-based index of the tab in the list of tabs."},"rootRef":{"description":"Ref to the root slot&#39;s DOM element."},"selected":{"description":"If <code>true</code>, the tab is selected."},"setFocusVisible":{"description":"Sets the focus-visible state of the tab. This is a workaround for browsers that do not support this feature natively."},"totalTabsCount":{"description":"Total number of tabs in the nearest parent TabsList. This can be used to determine if the tab is the last one to style it accordingly."}}}},"useTabPanel":{"en":{"hookDescription":"","parametersDescriptions":{"id":{"description":"The id of the TabPanel."},"rootRef":{"description":"The ref of the TabPanel."},"value":{"description":"The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected."}},"returnValueDescriptions":{"getRootProps":{"description":"Resolver for the root slot&#39;s props."},"hidden":{"description":"If <code>true</code>, it indicates that the tab panel will be hidden."}}}},"useTabs":{"en":{"hookDescription":"","parametersDescriptions":{"defaultValue":{"description":"The default value. Use when the component is not controlled."},"direction":{"description":"The direction of the text."},"onChange":{"description":"Callback invoked when new value is being set."},"orientation":{"description":"The component orientation (layout flow direction)."},"selectionFollowsFocus":{"description":"If <code>true</code> the selected tab changes on focus. Otherwise it only changes on activation."},"value":{"description":"The value of the currently selected <code>Tab</code>. If you don&#39;t want any selected <code>Tab</code>, you can set this prop to <code>false</code>."}},"returnValueDescriptions":{"contextValue":{"description":"Returns the values to be passed to the tabs provider."}}}},"useTabsList":{"en":{"hookDescription":"","parametersDescriptions":{"rootRef":{"description":"Ref to the root element."}},"returnValueDescriptions":{"contextValue":{"description":"The value to be passed to the TabListProvider above all the tabs."},"dispatch":{"description":"Action dispatcher for the tabs list component. Allows to programmatically control the tabs list."},"getRootProps":{"description":"Resolver for the root slot&#39;s props."},"highlightedValue":{"description":"The value of the currently highlighted tab."},"isRtl":{"description":"If <code>true</code>, it will indicate that the text&#39;s direction in right-to-left."},"orientation":{"description":"The component orientation (layout flow direction)."},"selectedValue":{"description":"The value of the currently selected tab."}}}}},"hooksApiPageContents":{"useTab":{"parameters":{"disabled":{"type":{"name":"boolean","description":"boolean"}},"id":{"type":{"name":"string","description":"string"}},"onChange":{"type":{"name":"(event: React.SyntheticEvent, value: number | string) =&gt; void","description":"(event: React.SyntheticEvent, value: number | string) =&gt; void"}},"onClick":{"type":{"name":"React.MouseEventHandler","description":"React.MouseEventHandler"}},"rootRef":{"type":{"name":"React.Ref&lt;Element&gt;","description":"React.Ref&lt;Element&gt;"}},"value":{"type":{"name":"number | string","description":"number | string"}}},"returnValue":{"active":{"type":{"name":"boolean","description":"boolean"},"required":true},"focusVisible":{"type":{"name":"boolean","description":"boolean"},"required":true},"getRootProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseTabRootSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseTabRootSlotProps&lt;ExternalProps&gt;"},"required":true},"highlighted":{"type":{"name":"boolean","description":"boolean"},"required":true},"index":{"type":{"name":"number","description":"number"},"required":true},"rootRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true},"selected":{"type":{"name":"boolean","description":"boolean"},"required":true},"setFocusVisible":{"type":{"name":"React.Dispatch&lt;React.SetStateAction&lt;boolean&gt;&gt;","description":"React.Dispatch&lt;React.SetStateAction&lt;boolean&gt;&gt;"},"required":true},"totalTabsCount":{"type":{"name":"number","description":"number"},"required":true}},"name":"useTab","filename":"/packages/mui-base/src/useTab/useTab.ts","imports":["import { useTab } from '@mui/base/useTab';","import { useTab } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-tabs/#hooks\">Tabs</a></li></ul>"},"useTabPanel":{"parameters":{"id":{"type":{"name":"string","description":"string"}},"rootRef":{"type":{"name":"React.Ref&lt;HTMLElement&gt;","description":"React.Ref&lt;HTMLElement&gt;"}},"value":{"type":{"name":"number | string","description":"number | string"}}},"returnValue":{"getRootProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseTabPanelRootSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseTabPanelRootSlotProps&lt;ExternalProps&gt;"},"required":true},"hidden":{"type":{"name":"boolean","description":"boolean"},"required":true},"rootRef":{"type":{"name":"React.Ref&lt;HTMLElement&gt;","description":"React.Ref&lt;HTMLElement&gt;"},"required":true}},"name":"useTabPanel","filename":"/packages/mui-base/src/useTabPanel/useTabPanel.ts","imports":["import { useTabPanel } from '@mui/base/useTabPanel';","import { useTabPanel } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-tabs/#hooks\">Tabs</a></li></ul>"},"useTabs":{"parameters":{"defaultValue":{"type":{"name":"string | number | null","description":"string | number | null"}},"direction":{"type":{"name":"&#39;ltr&#39; | &#39;rtl&#39;","description":"&#39;ltr&#39; | &#39;rtl&#39;"},"default":"'ltr'"},"onChange":{"type":{"name":"(event: React.SyntheticEvent | null, value: number | string | null) =&gt; void","description":"(event: React.SyntheticEvent | null, value: number | string | null) =&gt; void"}},"orientation":{"type":{"name":"&#39;horizontal&#39; | &#39;vertical&#39;","description":"&#39;horizontal&#39; | &#39;vertical&#39;"},"default":"'horizontal'"},"selectionFollowsFocus":{"type":{"name":"boolean","description":"boolean"}},"value":{"type":{"name":"string | number | null","description":"string | number | null"}}},"returnValue":{"contextValue":{"type":{"name":"TabsProviderValue","description":"TabsProviderValue"},"required":true}},"name":"useTabs","filename":"/packages/mui-base/src/useTabs/useTabs.ts","imports":["import { useTabs } from '@mui/base/useTabs';","import { useTabs } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-tabs/#hooks\">Tabs</a></li></ul>"},"useTabsList":{"parameters":{"rootRef":{"type":{"name":"React.Ref&lt;Element&gt;","description":"React.Ref&lt;Element&gt;"},"required":true}},"returnValue":{"contextValue":{"type":{"name":"TabsListProviderValue","description":"TabsListProviderValue"},"required":true},"dispatch":{"type":{"name":"(action: ListAction&lt;string | number&gt;) =&gt; void","description":"(action: ListAction&lt;string | number&gt;) =&gt; void"},"required":true},"getRootProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseTabsListRootSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseTabsListRootSlotProps&lt;ExternalProps&gt;"},"required":true},"highlightedValue":{"type":{"name":"string | number | null","description":"string | number | null"},"required":true},"isRtl":{"type":{"name":"boolean","description":"boolean"},"required":true},"orientation":{"type":{"name":"&#39;horizontal&#39; | &#39;vertical&#39;","description":"&#39;horizontal&#39; | &#39;vertical&#39;"},"required":true},"rootRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true},"selectedValue":{"type":{"name":"string | number | null","description":"string | number | null"},"required":true}},"name":"useTabsList","filename":"/packages/mui-base/src/useTabsList/useTabsList.ts","imports":["import { useTabsList } from '@mui/base/useTabsList';","import { useTabsList } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-tabs/#hooks\">Tabs</a></li></ul>"}}},"__N_SSG":true}