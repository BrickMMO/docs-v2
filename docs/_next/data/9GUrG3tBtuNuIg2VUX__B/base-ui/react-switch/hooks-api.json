{"pageProps":{"userLanguage":"en","componentsApiDescriptions":{"Switch":{"en":{"componentDescription":"<p>The foundation for building custom-styled switches.</p>\n","propDescriptions":{"checked":{"description":"If <code>true</code>, the component is checked."},"className":{"description":"Class name applied to the root element."},"defaultChecked":{"description":"The default checked state. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"onChange":{"description":"Callback fired when the state is changed.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string). You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean)."}},"readOnly":{"description":"If <code>true</code>, the component is read only."},"required":{"description":"If <code>true</code>, the <code>input</code> element is required."},"slotProps":{"description":"The props used for each slot inside the Switch."},"slots":{"description":"The components used for each slot inside the Switch. Either a string to use a HTML element or a component."}},"classDescriptions":{"root":{"description":"Class applied to the root element."},"input":{"description":"Class applied to the internal input element"},"track":{"description":"Class applied to the track element"},"thumb":{"description":"Class applied to the thumb element"},"checked":{"description":"State class applied to the root element if the switch is checked"},"disabled":{"description":"State class applied to the root element if the switch is disabled"},"focusVisible":{"description":"State class applied to the root element if the switch has visible focus"},"readOnly":{"description":"Class applied to the root element if the switch is read-only"}},"slotDescriptions":{"root":"The component that renders the root.","input":"The component that renders the input.","thumb":"The component that renders the thumb.","track":"The component that renders the track."},"componentDescriptionToc":[]}}},"componentsApiPageContents":{"Switch":{"props":{"checked":{"type":{"name":"bool"}},"className":{"type":{"name":"string"}},"defaultChecked":{"type":{"name":"bool"}},"disabled":{"type":{"name":"bool"}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.ChangeEvent<HTMLInputElement>) => void","describedArgs":["event"]}},"readOnly":{"type":{"name":"bool"}},"required":{"type":{"name":"bool"}},"slotProps":{"type":{"name":"shape","description":"{ input?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object, thumb?: func<br>&#124;&nbsp;object, track?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ input?: elementType, root?: elementType, thumb?: elementType, track?: elementType<br>&#124;&nbsp;null }"},"default":"{}","additionalInfo":{"slotsApi":true}}},"name":"Switch","imports":["import { Switch } from '@mui/base/Switch';","import { Switch } from '@mui/base';"],"styles":{"classes":[],"globalClasses":{},"name":null},"slots":[{"name":"root","description":"The component that renders the root.","default":"'span'","class":".MuiSwitch-root"},{"name":"input","description":"The component that renders the input.","default":"'input'","class":".MuiSwitch-input"},{"name":"thumb","description":"The component that renders the thumb.","default":"'span'","class":".MuiSwitch-thumb"},{"name":"track","description":"The component that renders the track.","default":"'span'","class":".MuiSwitch-track"}],"classes":{"classes":["checked","disabled","focusVisible","readOnly"],"globalClasses":{"checked":"Mui-checked","disabled":"Mui-disabled","focusVisible":"Mui-focusVisible","readOnly":"Mui-readOnly"}},"spread":true,"muiName":"MuiSwitch","forwardsRefTo":"HTMLSpanElement","filename":"/packages/mui-base/src/Switch/Switch.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-switch/\">Switch</a></li></ul>","cssComponent":false}},"hooksApiDescriptions":{"useSwitch":{"en":{"hookDescription":"The basic building block for creating custom switches.","parametersDescriptions":{"checked":{"description":"If <code>true</code>, the component is checked."},"defaultChecked":{"description":"The default checked state. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"onChange":{"description":"Callback fired when the state is changed."},"readOnly":{"description":"If <code>true</code>, the component is read only."},"required":{"description":"If <code>true</code>, the <code>input</code> element is required."}},"returnValueDescriptions":{"checked":{"description":"If <code>true</code>, the component will be checked."},"disabled":{"description":"If <code>true</code>, the component will be disabled."},"focusVisible":{"description":"If <code>true</code>, it indicates that the component is being focused using keyboard."},"getInputProps":{"description":"Resolver for the input slot&#39;s props."},"inputRef":{"description":"Ref to the input slot&#39;s DOM node."},"readOnly":{"description":"If <code>true</code>, the component will be read only."}}}}},"hooksApiPageContents":{"useSwitch":{"parameters":{"checked":{"type":{"name":"boolean","description":"boolean"}},"defaultChecked":{"type":{"name":"boolean","description":"boolean"}},"disabled":{"type":{"name":"boolean","description":"boolean"}},"onBlur":{"type":{"name":"React.FocusEventHandler","description":"React.FocusEventHandler"}},"onChange":{"type":{"name":"React.ChangeEventHandler&lt;HTMLInputElement&gt;","description":"React.ChangeEventHandler&lt;HTMLInputElement&gt;"}},"onFocus":{"type":{"name":"React.FocusEventHandler","description":"React.FocusEventHandler"}},"onFocusVisible":{"type":{"name":"React.FocusEventHandler","description":"React.FocusEventHandler"}},"readOnly":{"type":{"name":"boolean","description":"boolean"}},"required":{"type":{"name":"boolean","description":"boolean"}}},"returnValue":{"checked":{"type":{"name":"boolean","description":"boolean"},"required":true},"disabled":{"type":{"name":"boolean","description":"boolean"},"required":true},"focusVisible":{"type":{"name":"boolean","description":"boolean"},"required":true},"getInputProps":{"type":{"name":"(externalProps?: React.HTMLAttributes&lt;HTMLInputElement&gt;) =&gt; UseSwitchInputSlotProps","description":"(externalProps?: React.HTMLAttributes&lt;HTMLInputElement&gt;) =&gt; UseSwitchInputSlotProps"},"required":true},"inputRef":{"type":{"name":"React.RefCallback&lt;HTMLInputElement&gt; | null","description":"React.RefCallback&lt;HTMLInputElement&gt; | null"},"required":true},"readOnly":{"type":{"name":"boolean","description":"boolean"},"required":true}},"name":"useSwitch","filename":"/packages/mui-base/src/useSwitch/useSwitch.ts","imports":["import { useSwitch } from '@mui/base/useSwitch';","import { useSwitch } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-switch/#hook\">Switch</a></li></ul>"}}},"__N_SSG":true}