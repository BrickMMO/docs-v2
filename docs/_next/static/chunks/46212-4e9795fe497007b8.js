"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[46212],{37325:function(n,e,o){o.d(e,{N:function(){return x}});var t=o(163804),r=o(648611),a=o(80117),s=o(378149),l=o.n(s),i=o(667294),c=o(245232),d=o(141445),u=o(151911),p=o(315412),m=o(829624),f=o(555918),h=o(785893),C=["defaultValue","children","disabled","error","onChange","required","slotProps","slots","value"],x=i.forwardRef(function(n,e){var o,s,x,b,g,y,k=n.defaultValue,v=n.children,F=n.disabled,w=void 0!==F&&F,D=n.error,N=void 0!==D&&D,M=n.onChange,j=n.required,B=void 0!==j&&j,R=n.slotProps,E=n.slots,q=n.value,I=(0,a.Z)(n,C),S=(0,c.Z)({controlled:q,default:k,name:"FormControl",state:"value"}),A=(0,r.Z)(S,2),T=A[0],z=A[1],H=null!=T&&!(l()(T)&&0===T.length)&&""!==T,Z=i.useState(!1),P=(0,r.Z)(Z,2),L=P[0],$=P[1],V=L&&!w;i.useEffect(function(){return $(function(n){return!w&&n})},[w]);var W=(0,t.Z)((0,t.Z)({},n),{},{disabled:w,error:N,filled:H,focused:V,required:B}),_=i.useMemo(function(){return{disabled:w,error:N,filled:H,focused:V,onBlur:function(){$(!1)},onChange:function(n){z(n.target.value),null==M||M(n)},onFocus:function(){$(!0)},required:B,value:null!=T?T:""}},[w,N,H,V,M,B,z,T]),U=(o=W.disabled,s=W.error,x=W.filled,b=W.focused,g=W.required,(0,m.Z)({root:["root",o&&"disabled",b&&"focused",s&&"error",x&&"filled",g&&"required"]},(0,f.T)(u.S))),O=null!==(y=(void 0===E?{}:E).root)&&void 0!==y?y:"div",K=(0,p.y)({elementType:O,externalSlotProps:(void 0===R?{}:R).root,externalForwardedProps:I,additionalProps:{ref:e,children:"function"==typeof v?v(_):v},ownerState:W,className:U.root});return(0,h.jsx)(d.U.Provider,{value:_,children:(0,h.jsx)(O,(0,t.Z)({},K))})})},151911:function(n,e,o){o.d(e,{N:function(){return a},S:function(){return r}});var t=o(899933);function r(n){return(0,t.Z)("MuiFormControl",n)}var a=(0,o(173729).Z)("MuiFormControl",["root","disabled","error","filled","focused","required"])},161122:function(n,e,o){o.r(e),o.d(e,{FormControl:function(){return t.N},FormControlContext:function(){return r.U},formControlClasses:function(){return a.N},getFormControlUtilityClass:function(){return a.S},useFormControlContext:function(){return s.N}});var t=o(37325),r=o(141445),a=o(151911),s=o(805945)},747892:function(n,e,o){o.d(e,{Z:function(){return D}});var t,r,a,s,l,i=o(667294),c=o(514950),d=o(695093),u=o(34915),p=o.n(u),m=o(602688),f=o(941615),h=o(785893),C=(0,f.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{fill:"#FDB300",d:"M5.24 2.7L12 2l6.76.7L24 9.48 12 23 0 9.49z"}),(0,h.jsx)("path",{fill:"#EA6C00",d:"M4.85 9l7.13 14L0 9zM19.1 9l-7.12 14L23.95 9z"}),(0,h.jsx)("path",{fill:"#FDAD00",d:"M4.85 9H19.1l-7.12 14z"}),(0,h.jsxs)("g",{children:[(0,h.jsx)("path",{fill:"#FDD231",d:"M11.98 2l-6.75.65-.38 6.34zM11.98 2l6.75.65.37 6.34z"}),(0,h.jsx)("path",{fill:"#FDAD00",d:"M23.95 9l-5.22-6.35.37 6.34zM0 9l5.23-6.35-.38 6.34z"}),(0,h.jsx)("path",{fill:"#FEEEB7",d:"M11.98 2L4.85 9H19.1z"})]})]}),"Sketch"),x=(0,f.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M8 24a4 4 0 004-4v-4H8a4 4 0 000 8z",fill:"#0ACF83"}),(0,h.jsx)("path",{d:"M4 12a4 4 0 014-4h4v8H8a4 4 0 01-4-4z",fill:"#A259FF"}),(0,h.jsx)("path",{d:"M4 4a4 4 0 014-4h4v8H8a4 4 0 01-4-4z",fill:"#F24E1E"}),(0,h.jsx)("path",{d:"M12 0h4a4 4 0 010 8h-4V0z",fill:"#FF7262"}),(0,h.jsx)("path",{d:"M20 12a4 4 0 11-8 0 4 4 0 018 0z",fill:"#1ABCFE"})]}),"Figma"),b=(0,f.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M5.54 2h12.92C20.42 2 22 3.6 22 5.58v12.55a3.56 3.56 0 01-3.54 3.58H5.54A3.56 3.56 0 012 18.13V5.58A3.56 3.56 0 015.54 2z",fill:"#470137"}),(0,h.jsx)("path",{d:"M12.52 7.28L10 11.45l2.68 4.41c.01.04.02.07.01.1 0 .04-.04.01-.09.02H10.7c-.13 0-.22 0-.28-.1l-.54-1.04c-.17-.35-.36-.7-.57-1.06l-.6-1.1h-.02c-.17.36-.36.73-.56 1.09l-.57 1.07-.57 1.06c-.04.09-.1.1-.2.1H4.94c-.03 0-.06.01-.06-.03 0-.03 0-.07.02-.1l2.6-4.28-2.53-4.31c-.03-.04-.04-.07-.02-.09.02-.02.05-.03.09-.03h1.9a.5.5 0 01.11.01c.04.02.06.05.09.08.16.36.34.72.53 1.09l.6 1.06c.2.36.39.71.57 1.07h.01c.18-.37.36-.73.55-1.08.18-.36.37-.71.57-1.06l.56-1.06c0-.04.02-.07.05-.09.03-.01.06-.02.1-.01h1.77c.04-.01.09.01.1.06 0 0-.01.04-.03.05zM16.39 16.16c-.62 0-1.24-.12-1.8-.38a2.92 2.92 0 01-1.27-1.15 3.65 3.65 0 01-.46-1.91 3.46 3.46 0 011.8-3.08 4.27 4.27 0 012.29-.48c.07 0 .16 0 .26.02V6.52c0-.06.02-.1.08-.1H19c.04 0 .08.03.08.07v8.01l.02.51.03.49c0 .06-.02.11-.08.13a6.37 6.37 0 01-2.65.53zm.82-1.69v-3.7a2.11 2.11 0 00-1.45.16c-.29.15-.53.36-.71.63-.19.27-.28.63-.28 1.06 0 .3.04.6.14.87a1.44 1.44 0 00.95.93c.23.08.46.11.7.11a4.49 4.49 0 00.65-.06z",fill:"#FF61F6"})]}),"AdobeXD"),g=(0,f.Z)((0,h.jsxs)("g",{fill:"currentColor",fillRule:"nonzero",children:[(0,h.jsx)("path",{d:"M5.84 3c-.52 0-1 .25-1.3.67l-1.4 2.05c-.06.09-.1.19-.14.28h8V3H5.84zM20.86 5.72l-1.4-2.05c-.3-.42-.81-.67-1.33-.67H13v3h8c-.05-.1-.08-.2-.14-.28z",fillOpacity:".79"}),(0,h.jsx)("path",{d:"M20.98 7H3.02L3 7.11V19.4c0 .89.71 1.61 1.58 1.61h14.84A1.6 1.6 0 0021 19.4V7.1L20.98 7zm-6.87 5.36H9.89a1.6 1.6 0 01-1.58-1.61c0-.89.7-1.6 1.58-1.6h4.22c.87 0 1.58.71 1.58 1.6 0 .89-.7 1.6-1.58 1.6z",fillOpacity:".87"})]}),"BundleSize"),y=(0,f.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M6.92 6.1l2.33 7.99 2.32-8h6.3v.8l-2.37 4.14c.83.27 1.46.76 1.89 1.47.43.71.64 1.55.64 2.51 0 1.2-.31 2.2-.94 3a2.93 2.93 0 01-2.42 1.22 2.9 2.9 0 01-1.96-.72 4.25 4.25 0 01-1.23-1.96l1.31-.55c.2.5.45.9.76 1.18.32.28.69.43 1.12.43.44 0 .82-.26 1.13-.76.31-.51.47-1.12.47-1.84 0-.79-.17-1.4-.5-1.83-.38-.5-.99-.76-1.81-.76h-.64v-.78l2.24-3.92h-2.7l-.16.26-3.3 11.25h-.15l-2.4-8.14-2.41 8.14h-.16L.43 6.1H2.1l2.33 7.99L6 8.71 5.24 6.1h1.68z",fill:"#005A9C"}),(0,h.jsx)("g",{fill:"currentColor",children:(0,h.jsx)("path",{d:"M23.52 6.25l.28 1.62-.98 1.8s-.38-.76-1.01-1.19c-.53-.35-.87-.43-1.41-.33-.7.14-1.48.93-1.82 1.9-.41 1.18-.42 1.74-.43 2.26a4.9 4.9 0 00.11 1.33s-.6-1.06-.59-2.61c0-1.1.19-2.11.72-3.1.47-.87 1.17-1.4 1.8-1.45.63-.07 1.14.23 1.53.55.42.33.83 1.07.83 1.07l.97-1.85zM23.64 15.4s-.43.75-.7 1.04c-.27.28-.76.79-1.36 1.04-.6.25-.91.3-1.5.25a3.03 3.03 0 01-1.34-.52 5.08 5.08 0 01-1.67-2.04s.24.75.39 1.07c.09.18.36.74.74 1.23a3.5 3.5 0 002.1 1.42c1.04.18 1.76-.27 1.94-.38a5.32 5.32 0 001.4-1.43c.1-.14.25-.43.25-.43l-.25-1.25z"})})]}),"W3C"),k=(0,f.Z)((0,h.jsxs)("g",{fill:"none",fillRule:"evenodd",children:[(0,h.jsx)("circle",{fill:"#737373",cx:"12",cy:"12",r:"12"}),(0,h.jsx)("path",{fill:"#BDBDBD",d:"M4 4h16v16H4z"}),(0,h.jsx)("path",{fill:"#FFF",d:"M12 20l8-16H4z"})]}),"MaterialDesign"),v=o(692124),F=(0,m.ZP)("ul")({margin:0,padding:0,listStyle:"none",display:"flex",flexWrap:"wrap",gap:8,"& .MuiChip-root .MuiChip-iconSmall":{marginLeft:4}}),w={"material-ui":"@mui/material","joy-ui":"@mui/joy","base-ui":"@mui/base",system:"@mui/system"};function D(n){var e,o,u=n.markdown.headers,m=n.design,f=(0,v.useTranslate)(),D=null!==(e=null!==(o=u.packageName)&&void 0!==o?o:w[u.productId])&&void 0!==e?e:"@mui/material";return(0,h.jsxs)(F,{children:[u.githubLabel?(0,h.jsx)("li",{children:(0,h.jsx)(c.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"".concat("https://github.com/mui/material-ui","/labels/").concat(encodeURIComponent(u.githubLabel)),icon:t||(t=(0,h.jsx)(p(),{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":f("githubLabel"),"data-ga-event-split":"0.1",label:f("githubLabel")})}):null,(0,h.jsx)("li",{children:(0,h.jsx)(d.Z,{title:f("bundleSizeTooltip"),children:(0,h.jsx)(c.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://bundlephobia.com/package/".concat(D,"@latest"),icon:r||(r=(0,h.jsx)(g,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":f("bundleSize"),"data-ga-event-split":"0.1",label:f("bundleSize")})})}),u.waiAria?(0,h.jsx)("li",{children:(0,h.jsx)(c.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:u.waiAria,icon:a||(a=(0,h.jsx)(y,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"WAI-ARIA","data-ga-event-split":"0.1",label:"WAI-ARIA"})}):null,u.materialDesign?(0,h.jsx)("li",{children:(0,h.jsx)(c.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:u.materialDesign,icon:s||(s=(0,h.jsx)(k,{})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Material Design","data-ga-event-split":"0.1",label:"Material Design"})}):null,!1!==m?l||(l=(0,h.jsxs)(i.Fragment,{children:[(0,h.jsx)("li",{children:(0,h.jsx)(c.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/figma-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(x,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Figma","data-ga-event-split":"0.1",label:"Figma"})}),(0,h.jsx)("li",{children:(0,h.jsx)(c.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/adobe-xd-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(b,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Adobe XD","data-ga-event-split":"0.1",label:"Adobe"})}),(0,h.jsx)("li",{children:(0,h.jsx)(c.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/sketch-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(C,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Sketch","data-ga-event-split":"0.1",label:"Sketch"})})]})):null]})}},34915:function(n,e,o){var t=o(526771),r=o(564836);t(e,"__esModule",{value:!0}),e.default=void 0;var a=r(o(391641)),s=o(785893),l=(0,a.default)((0,s.jsx)("path",{d:"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM7 9h10c.55 0 1 .45 1 1s-.45 1-1 1H7c-.55 0-1-.45-1-1s.45-1 1-1zm6 5H7c-.55 0-1-.45-1-1s.45-1 1-1h6c.55 0 1 .45 1 1s-.45 1-1 1zm4-6H7c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1z"}),"ChatRounded");e.default=l},346212:function(n,e,o){o.r(e),o.d(e,{demoComponents:function(){return np},demos:function(){return nu},docs:function(){return nd},srcComponents:function(){return nm}});var t,r,a,s,l,i,c,d,u,p,m,f,h=o(667294),C=o.t(h,2),x=o(161122),b=o(149472),g=o(419443),y=o(490512),k=o(45697),v=o(163804),F=o(648611),w=o(935715),D=o(37325),N=o(805945),M=o(248683),j=o(661071),B=o(811546),R=o(785893),E=(0,B.default)(M.I)(function(n){var e=n.theme;return"\n\n  .".concat(j.N.input," {\n    width: 320px;\n    font-family: IBM Plex Sans, sans-serif;\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.5;\n    padding: 8px 12px;\n    border-radius: 8px;\n    color: ").concat("dark"===e.palette.mode?A[300]:A[900],";\n    background: ").concat("dark"===e.palette.mode?A[900]:"#fff",";\n    border: 1px solid ").concat("dark"===e.palette.mode?A[700]:A[200],";\n    box-shadow: 0px 2px 2px ").concat("dark"===e.palette.mode?A[900]:A[50],";\n\n    &:hover {\n      border-color: ").concat(S[400],";\n    }\n\n    &:focus {\n      outline: 0;\n      border-color: ").concat(S[400],";\n      box-shadow: 0 0 0 3px ").concat("dark"===e.palette.mode?S[600]:S[200],";\n    }\n  }\n")}),q=(0,B.default)(function(n){var e=n.children,o=n.className,t=(0,N.N)(),r=h.useState(!1),a=(0,F.Z)(r,2),s=a[0],l=a[1];if(h.useEffect(function(){null!=t&&t.filled&&l(!0)},[t]),void 0===t)return(0,R.jsx)("p",{children:e});var i=t.error,c=t.required,d=t.filled,u=s&&c&&!d;return(0,R.jsxs)("p",{className:(0,y.default)(o,(i||u)&&"invalid"),children:[e,c?" *":""]})})(r||(r=(0,w.Z)(["\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  margin-bottom: 4px;\n\n  &.invalid {\n    color: red;\n  }\n"]))),I=(0,B.default)(function(n){var e=(0,N.N)(),o=h.useState(!1),t=(0,F.Z)(o,2),r=t[0],a=t[1];if(h.useEffect(function(){null!=e&&e.filled&&a(!0)},[e]),void 0===e)return null;var s=e.required,l=e.filled;return r&&s&&!l?(0,R.jsx)("p",(0,v.Z)((0,v.Z)({},n),{},{children:"This field is required."})):null})(a||(a=(0,w.Z)(["\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n"]))),S={100:"#DAECFF",200:"#b6daff",400:"#3399FF",500:"#007FFF",600:"#0072E5",900:"#003A75"},A={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function T(){var n=(0,N.N)();if(void 0===n)return null;var e=n.value,o=n.required,t=n.onChange,r=n.disabled,a=n.onFocus,s=n.onBlur;return(0,R.jsx)("input",{value:e,required:o,onChange:t,disabled:r,onFocus:a,onBlur:s})}function z(){var n=(0,N.N)();if(void 0===n)return null;var e=n.filled,o=n.focused;return(0,R.jsxs)("p",{children:[e?"filled":"empty","\xa0|\xa0",o?"focused":"not focused"]})}var H=(0,B.default)(M.I)(function(n){var e=n.theme;return"\n  display: inline-block;\n\n  .".concat(j.N.input," {\n    width: 320px;\n    font-family: IBM Plex Sans, sans-serif;\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.5;\n    padding: 8px 12px;\n    border-radius: 8px;\n    color: ").concat("dark"===e.palette.mode?L[300]:L[900],";\n    background: ").concat("dark"===e.palette.mode?L[900]:"#fff",";\n    border: 1px solid ").concat("dark"===e.palette.mode?L[700]:L[200],";\n    box-shadow: 0px 2px 2px ").concat("dark"===e.palette.mode?L[900]:L[50],";\n\n    &:hover {\n      border-color: ").concat(P[400],";\n    }\n\n    &:focus {\n      outline: 0;\n      border-color: ").concat(P[400],";\n      box-shadow: 0 0 0 3px ").concat("dark"===e.palette.mode?P[600]:P[200],";\n    }\n  }\n\n  &.filled .").concat(j.N.input," {\n    box-shadow: 0 0 2px 2px rgba(125, 200, 0, 0.25);\n  }\n")}),Z=(0,B.default)("span")(i||(i=(0,w.Z)(["\n  margin-left: 8px;\n  margin-top: 10px;\n  position: absolute;\n  color: rgb(125 200 0 / 1);\n"]))),P={100:"#DAECFF",200:"#80BFFF",400:"#3399FF",600:"#0072E5"},L={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},$=o(80117),V=o(721923),W=["className"],_=h.forwardRef(function(n,e){var o=n.className,t=n.children,r=(0,N.N)(),a=h.useState(!1),s=(0,F.Z)(a,2),l=s[0],i=s[1];if(h.useEffect(function(){null!=r&&r.filled&&i(!0)},[r]),void 0===r)return(0,R.jsx)("p",{className:(0,y.default)("text-sm mb-1",o),children:t});var c=r.error,d=r.required,u=r.filled,p=l&&d&&!u;return(0,R.jsxs)("p",{ref:e,className:(0,y.default)("text-sm mb-1",o,(c||p)&&"invalid text-red-500"),children:[t,d?" *":""]})}),U=h.forwardRef(function(n,e){var o=n.className,t=(0,$.Z)(n,W),r=(0,N.N)(),a=h.useState(!1),s=(0,F.Z)(a,2),l=s[0],i=s[1];if(h.useEffect(function(){null!=r&&r.filled&&i(!0)},[r]),void 0===r)return null;var c=r.required,d=r.filled;return l&&c&&!d?(0,R.jsx)("p",(0,v.Z)((0,v.Z)({ref:e,className:(0,y.default)("text-sm",o)},t),{},{children:"This field is required."})):null}),O=["className"],K=h.forwardRef(function(n,e){var o=n.className,t=n.children,r=(0,N.N)(),a=h.useState(!1),s=(0,F.Z)(a,2),l=s[0],i=s[1];if(h.useEffect(function(){null!=r&&r.filled&&i(!0)},[r]),void 0===r)return(0,R.jsx)("p",{className:(0,y.default)("text-sm mb-1",o),children:t});var c=r.error,d=r.required,u=r.filled,p=l&&d&&!u;return(0,R.jsxs)("p",{ref:e,className:(0,y.default)("text-sm mb-1",o,(c||p)&&"invalid text-red-500"),children:[t,d?" *":""]})}),Y=h.forwardRef(function(n,e){var o=n.className,t=(0,$.Z)(n,O),r=(0,N.N)(),a=h.useState(!1),s=(0,F.Z)(a,2),l=s[0],i=s[1];if(h.useEffect(function(){null!=r&&r.filled&&i(!0)},[r]),void 0===r)return null;var c=r.required,d=r.filled;return l&&c&&!d?(0,R.jsx)("p",(0,v.Z)((0,v.Z)({ref:e,className:(0,y.default)("text-sm",o)},t),{},{children:"This field is required."})):null}),J=["className"],X=h.forwardRef(function(n,e){var o=n.className,t=n.children,r=(0,N.N)(),a=h.useState(!1),s=(0,F.Z)(a,2),l=s[0],i=s[1];if(h.useEffect(function(){null!=r&&r.filled&&i(!0)},[r]),void 0===r)return(0,R.jsx)("p",{className:(0,y.default)("text-sm mb-1",o),children:t});var c=r.error,d=r.required,u=r.filled,p=l&&d&&!u;return(0,R.jsxs)("p",{ref:e,className:(0,y.default)("text-sm mb-1",o,(c||p)&&"invalid text-red-500"),children:[t,d?" *":""]})}),G=h.forwardRef(function(n,e){var o=n.className,t=(0,$.Z)(n,J),r=(0,N.N)(),a=h.useState(!1),s=(0,F.Z)(a,2),l=s[0],i=s[1];if(h.useEffect(function(){null!=r&&r.filled&&i(!0)},[r]),void 0===r)return null;var c=r.required,d=r.filled;return l&&c&&!d?(0,R.jsx)("p",(0,v.Z)((0,v.Z)({ref:e,className:(0,y.default)("text-sm",o)},t),{},{children:"This field is required."})):null}),Q={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},nn={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function ne(){var n="dark"===(0,V.Z)().palette.mode;return(0,R.jsx)("style",{children:"\n      .CustomInput .".concat(j.N.input," {\n        width: 320px;\n        font-family: IBM Plex Sans, sans-serif;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.5;\n        padding: 8px 12px;\n        border-radius: 8px;\n        color: ").concat(n?nn[300]:nn[900],";\n        background: ").concat(n?nn[900]:"#fff",";\n        border: 1px solid ").concat(n?nn[700]:nn[200],";\n        box-shadow: 0px 2px 2px ").concat(n?nn[900]:nn[50],";\n      }\n      .CustomInput .").concat(j.N.input,":hover {\n        border-color: ").concat(Q[400],";\n      }\n      .CustomInput .").concat(j.N.input,":focus {\n        outline: 0;\n        border-color: ").concat(Q[400],";\n        box-shadow: 0 0 0 3px ").concat(n?Q[600]:Q[200],";\n      }\n      ")})}var no=["className"],nt=h.forwardRef(function(n,e){var o=n.className,t=n.children,r=(0,N.N)(),a=h.useState(!1),s=(0,F.Z)(a,2),l=s[0],i=s[1];if(h.useEffect(function(){null!=r&&r.filled&&i(!0)},[r]),void 0===r)return(0,R.jsx)("p",{className:(0,y.default)("text-sm mb-1",o),children:t});var c=r.error,d=r.required,u=r.filled,p=l&&d&&!u;return(0,R.jsxs)("p",{ref:e,className:(0,y.default)("text-sm mb-1",o,(c||p)&&"invalid text-red-500"),children:[t,d?" *":""]})}),nr=h.forwardRef(function(n,e){var o=n.className,t=(0,$.Z)(n,no),r=(0,N.N)(),a=h.useState(!1),s=(0,F.Z)(a,2),l=s[0],i=s[1];if(h.useEffect(function(){null!=r&&r.filled&&i(!0)},[r]),void 0===r)return null;var c=r.required,d=r.filled;return l&&c&&!d?(0,R.jsx)("p",(0,v.Z)((0,v.Z)({ref:e,className:(0,y.default)("text-sm",o)},t),{},{children:"This field is required."})):null}),na={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},ns={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function nl(){var n="dark"===(0,V.Z)().palette.mode;return(0,R.jsx)("style",{children:"\n      .CustomInput .".concat(j.N.input," {\n        width: 320px;\n        font-family: IBM Plex Sans, sans-serif;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.5;\n        padding: 8px 12px;\n        border-radius: 8px;\n        color: ").concat(n?ns[300]:ns[900],";\n        background: ").concat(n?ns[900]:"#fff",";\n        border: 1px solid ").concat(n?ns[700]:ns[200],";\n        box-shadow: 0px 2px 2px ").concat(n?ns[900]:ns[50],";\n      }\n      .CustomInput .").concat(j.N.input,":hover {\n        border-color: ").concat(na[400],";\n      }\n      .CustomInput .").concat(j.N.input,":focus {\n        outline: 0;\n        border-color: ").concat(na[400],";\n        box-shadow: 0 0 0 3px ").concat(n?na[600]:na[200],";\n      }\n      ")})}var ni=o(747892),nc=o(510185),nd={en:{description:"The Form Control component is a utility that lets you associate a form input with auxiliary components, such as labels, error indicators, or helper text.",location:"/brickmmo-docs-v2/data/base/components/form-control/form-control.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<h1>Form Control</h1><p class="description">The Form Control component is a utility that lets you associate a form input with auxiliary components, such as labels, error indicators, or helper text.</p>\n\n',{component:"modules/components/ComponentLinkHeader.js",design:!1},{component:"modules/components/ComponentPageTabs.js"},'<h2 id="introduction">Introduction<a aria-labelledby="introduction" class="anchor-link" href="#introduction" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="introduction"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Form Control is a utility that wraps an input component with other associated components in order to make the state of the input available to those components.</p>\n<p>For instance, you may want to show an additional element asking the user to enter a value if the input is empty, or display a warning icon if the entered value is incorrect.</p>\n<h2 id="component">Component<a aria-labelledby="component" class="anchor-link" href="#component" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="component"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> FormControl <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/base/FormControl\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Form Control wraps around the elements of a form that need access to the state of an <code>&lt;input&gt;</code>.\nFor instance, if the form&#39;s <strong>Submit</strong> button needs to change states after the user enters information, then the component will be structured like this:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormControl</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>Submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormControl</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The following demo shows how to create and style a form that uses Form Control to wrap the elements of the form.\nNote that it also uses the <code>useFormControlContext</code> hook in order to pass props to the custom Input—see the <a href="#hook">Hook</a> section below for more details.</p>\n',{demo:"BasicFormControl"},'<h3 id="usage-with-typescript">Usage with TypeScript<a aria-labelledby="usage-with-typescript" class="anchor-link" href="#usage-with-typescript" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="usage-with-typescript"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>In TypeScript, you can specify the custom component type used in the <code>slots.root</code> as a generic parameter of the unstyled component.\nThis way, you can safely provide the custom root&#39;s props directly on the component:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token operator">&lt;</span>FormControl<span class="token operator">&lt;</span><span class="token keyword">typeof</span> CustomComponent<span class="token operator">></span> slots<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> root<span class="token operator">:</span> CustomComponent <span class="token punctuation">}</span><span class="token punctuation">}</span> customProp <span class="token operator">/</span><span class="token operator">></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The same applies for props specific to custom primitive elements:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token operator">&lt;</span>FormControl<span class="token operator">&lt;</span><span class="token string">\'button\'</span><span class="token operator">></span> slots<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> root<span class="token operator">:</span> <span class="token string">\'button\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="hook">Hook<a aria-labelledby="hook" class="anchor-link" href="#hook" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="hook"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useFormControlContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/base/FormControl\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The <code>useFormControlContext</code> hook reads the context provided by Form Control.\nThis hook lets you work with custom input components inside of the Form Control.\nYou can also use it to read the form control&#39;s state and react to its changes in a custom component.</p>\n<p>Hooks <em>do not</em> support <a href="#custom-structure">slot props</a>, but they do support <a href="#customization">customization props</a>.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Hooks give you the most room for customization, but require more work to implement.\nWith hooks, you can take full control over how your component is rendered, and define all the custom props and CSS classes you need.</p>\n<p>You may not need to use hooks unless you find that you&#39;re limited by the customization options of their component counterparts—for instance, if your component requires significantly different <a href="#anatomy">structure</a>.</p>\n\n</div></aside><p>The demo below shows how to integrate this hook with its component counterpart:</p>\n<ul>\n<li><code>CustomInput</code> is a wrapper around a native HTML <code>&lt;input&gt;</code> that adds Form Control integration.</li>\n<li><code>ControlStateDisplay</code> reads the state of the form control and displays it as text.</li>\n</ul>\n',{demo:"UseFormControl.js",defaultCodeOpen:!1},'<p>Note that even though Form Control supports both controlled and uncontrolled-style APIs (i.e. it accepts <code>value</code> and <code>defaultValue</code> props), <code>useFormControlContext</code> returns only the controlled <code>value</code>.\nThis way, you don&#39;t have to implement both in your custom input—Form Control does this for you.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <ul>\n<li>A component is <strong>controlled</strong> when it&#39;s managed by its parent using props.</li>\n<li>A component is <strong>uncontrolled</strong> when it&#39;s managed by its own local state.</li>\n</ul>\n<p>Learn more about controlled and uncontrolled components in the <a href="https://react.dev/learn/sharing-state-between-components#controlled-and-uncontrolled-components">React documentation</a>.</p>\n\n</div></aside><h2 id="customization">Customization<a aria-labelledby="customization" class="anchor-link" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="customization"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The following features can be used with both components and hooks.\nFor the sake of simplicity, demos and code snippets primarily feature components.</p>\n\n</div></aside><h3 id="accessing-the-form-control-state">Accessing the form control state<a aria-labelledby="accessing-the-form-control-state" class="anchor-link" href="#accessing-the-form-control-state" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="accessing-the-form-control-state"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>You can access the state of the Form Control by providing a function as a child.\nThe state will be provided as a parameter to this function.</p>\n<p>The following demo shows how to access the state of the Form Control in an Input component nested inside:</p>\n',{demo:"FormControlFunctionChild.js"},'<h2 id="api">API<a aria-labelledby="api" class="anchor-link" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>See the documentation below for a complete reference to all of the props and classes available to the components mentioned here.</p>\n<ul>\n<li><a href="/base-ui/react-form-control/components-api/#form-control"><code>&lt;FormControl /&gt;</code></a></li>\n<li><a href="/base-ui/api/use-form-control-context/"><code>useFormControlContext</code></a></li>\n</ul>\n'],toc:[{text:"Introduction",level:2,hash:"introduction",children:[]},{text:"Component",level:2,hash:"component",children:[{text:"Usage with TypeScript",level:3,hash:"usage-with-typescript"}]},{text:"Hook",level:2,hash:"hook",children:[]},{text:"Customization",level:2,hash:"customization",children:[{text:"Accessing the form control state",level:3,hash:"accessing-the-form-control-state"}]},{text:"API",level:2,hash:"api",children:[]}],title:"React Form Control component and hook",headers:{productId:"base-ui",title:"React Form Control component and hook",components:["FormControl"],hooks:["useFormControlContext"],githubLabel:"component: FormControl"}}},nu={BasicFormControl:{module:"./BasicFormControl/system/index.js",raw:"import * as React from 'react';\nimport { FormControl, useFormControlContext } from '@mui/base/FormControl';\nimport { Input, inputClasses } from '@mui/base/Input';\nimport { styled } from '@mui/system';\nimport clsx from 'clsx';\n\nexport default function BasicFormControl() {\n  return (\n    <FormControl defaultValue=\"\" required>\n      <Label>Name</Label>\n      <StyledInput placeholder=\"Write your name here\" />\n      <HelperText />\n    </FormControl>\n  );\n}\n\nconst StyledInput = styled(Input)(\n  ({ theme }) => `\n\n  .${inputClasses.input} {\n    width: 320px;\n    font-family: IBM Plex Sans, sans-serif;\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.5;\n    padding: 8px 12px;\n    border-radius: 8px;\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n    background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n    border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    box-shadow: 0px 2px 2px ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n\n    &:hover {\n      border-color: ${blue[400]};\n    }\n\n    &:focus {\n      outline: 0;\n      border-color: ${blue[400]};\n      box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n    }\n  }\n`,\n);\n\nconst Label = styled(({ children, className }) => {\n  const formControlContext = useFormControlContext();\n  const [dirty, setDirty] = React.useState(false);\n\n  React.useEffect(() => {\n    if (formControlContext?.filled) {\n      setDirty(true);\n    }\n  }, [formControlContext]);\n\n  if (formControlContext === undefined) {\n    return <p>{children}</p>;\n  }\n\n  const { error, required, filled } = formControlContext;\n  const showRequiredError = dirty && required && !filled;\n\n  return (\n    <p className={clsx(className, error || showRequiredError ? 'invalid' : '')}>\n      {children}\n      {required ? ' *' : ''}\n    </p>\n  );\n})`\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  margin-bottom: 4px;\n\n  &.invalid {\n    color: red;\n  }\n`;\n\nconst HelperText = styled((props) => {\n  const formControlContext = useFormControlContext();\n  const [dirty, setDirty] = React.useState(false);\n\n  React.useEffect(() => {\n    if (formControlContext?.filled) {\n      setDirty(true);\n    }\n  }, [formControlContext]);\n\n  if (formControlContext === undefined) {\n    return null;\n  }\n\n  const { required, filled } = formControlContext;\n  const showRequiredError = dirty && required && !filled;\n\n  return showRequiredError ? <p {...props}>This field is required.</p> : null;\n})`\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n`;\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#b6daff',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n",moduleTailwind:"./BasicFormControl/tailwind/index.js",rawTailwind:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControl, useFormControlContext } from '@mui/base/FormControl';\nimport { Input } from '@mui/base/Input';\nimport { useTheme } from '@mui/system';\nimport clsx from 'clsx';\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nexport default function BasicFormControl() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <div className={`${isDarkMode ? 'dark' : ''}`}>\n      <FormControl defaultValue=\"\" className=\"font-sans\" required>\n        <Label>Name</Label>\n        <Input\n          placeholder=\"Write your name here\"\n          slotProps={{\n            input: {\n              className:\n                'w-80 text-sm font-sans font-normal leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-500 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0',\n            },\n          }}\n        />\n        <HelperText />\n      </FormControl>\n    </div>\n  );\n}\n\nconst Label = React.forwardRef(({ className: classNameProp, children }, ref) => {\n  const formControlContext = useFormControlContext();\n  const [dirty, setDirty] = React.useState(false);\n\n  React.useEffect(() => {\n    if (formControlContext?.filled) {\n      setDirty(true);\n    }\n  }, [formControlContext]);\n\n  if (formControlContext === undefined) {\n    return <p className={clsx('text-sm mb-1', classNameProp)}>{children}</p>;\n  }\n\n  const { error, required, filled } = formControlContext;\n  const showRequiredError = dirty && required && !filled;\n\n  return (\n    <p\n      ref={ref}\n      className={clsx(\n        'text-sm mb-1',\n        classNameProp,\n        error || showRequiredError ? 'invalid text-red-500' : '',\n      )}\n    >\n      {children}\n      {required ? ' *' : ''}\n    </p>\n  );\n});\n\nconst HelperText = React.forwardRef((props, ref) => {\n  const { className, ...other } = props;\n  const formControlContext = useFormControlContext();\n  const [dirty, setDirty] = React.useState(false);\n\n  React.useEffect(() => {\n    if (formControlContext?.filled) {\n      setDirty(true);\n    }\n  }, [formControlContext]);\n\n  if (formControlContext === undefined) {\n    return null;\n  }\n\n  const { required, filled } = formControlContext;\n  const showRequiredError = dirty && required && !filled;\n\n  return showRequiredError ? (\n    <p ref={ref} className={clsx('text-sm', className)} {...other}>\n      This field is required.\n    </p>\n  ) : null;\n});\n\nHelperText.propTypes = {\n  className: PropTypes.string,\n};\n",moduleTSTailwind:"./BasicFormControl/tailwind/index.tsx",rawTailwindTS:"import * as React from 'react';\nimport { FormControl, useFormControlContext } from '@mui/base/FormControl';\nimport { Input } from '@mui/base/Input';\nimport { useTheme } from '@mui/system';\nimport clsx from 'clsx';\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nexport default function BasicFormControl() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <div className={`${isDarkMode ? 'dark' : ''}`}>\n      <FormControl defaultValue=\"\" className=\"font-sans\" required>\n        <Label>Name</Label>\n        <Input\n          placeholder=\"Write your name here\"\n          slotProps={{\n            input: {\n              className:\n                'w-80 text-sm font-sans font-normal leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-500 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0',\n            },\n          }}\n        />\n        <HelperText />\n      </FormControl>\n    </div>\n  );\n}\n\nconst Label = React.forwardRef<\n  HTMLParagraphElement,\n  { className?: string; children?: React.ReactNode }\n>(({ className: classNameProp, children }, ref) => {\n  const formControlContext = useFormControlContext();\n  const [dirty, setDirty] = React.useState(false);\n\n  React.useEffect(() => {\n    if (formControlContext?.filled) {\n      setDirty(true);\n    }\n  }, [formControlContext]);\n\n  if (formControlContext === undefined) {\n    return <p className={clsx('text-sm mb-1', classNameProp)}>{children}</p>;\n  }\n\n  const { error, required, filled } = formControlContext;\n  const showRequiredError = dirty && required && !filled;\n\n  return (\n    <p\n      ref={ref}\n      className={clsx(\n        'text-sm mb-1',\n        classNameProp,\n        error || showRequiredError ? 'invalid text-red-500' : '',\n      )}\n    >\n      {children}\n      {required ? ' *' : ''}\n    </p>\n  );\n});\n\nconst HelperText = React.forwardRef<HTMLParagraphElement, { className?: string }>(\n  (props, ref) => {\n    const { className, ...other } = props;\n    const formControlContext = useFormControlContext();\n    const [dirty, setDirty] = React.useState(false);\n\n    React.useEffect(() => {\n      if (formControlContext?.filled) {\n        setDirty(true);\n      }\n    }, [formControlContext]);\n\n    if (formControlContext === undefined) {\n      return null;\n    }\n\n    const { required, filled } = formControlContext;\n    const showRequiredError = dirty && required && !filled;\n\n    return showRequiredError ? (\n      <p ref={ref} className={clsx('text-sm', className)} {...other}>\n        This field is required.\n      </p>\n    ) : null;\n  },\n);\n",moduleCSS:"./BasicFormControl/css/index.js",rawCSS:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControl, useFormControlContext } from '@mui/base/FormControl';\nimport { Input, inputClasses } from '@mui/base/Input';\nimport { useTheme } from '@mui/system';\nimport clsx from 'clsx';\n\nexport default function BasicFormControl() {\n  return (\n    <React.Fragment>\n      <FormControl defaultValue=\"\" required>\n        <Label>Name</Label>\n        <Input placeholder=\"Write your name here\" className=\"CustomInput\" />\n        <HelperText />\n      </FormControl>\n      <Styles />\n    </React.Fragment>\n  );\n}\n\nconst Label = React.forwardRef(({ className: classNameProp, children }, ref) => {\n  const formControlContext = useFormControlContext();\n  const [dirty, setDirty] = React.useState(false);\n\n  React.useEffect(() => {\n    if (formControlContext?.filled) {\n      setDirty(true);\n    }\n  }, [formControlContext]);\n\n  if (formControlContext === undefined) {\n    return <p className={clsx('text-sm mb-1', classNameProp)}>{children}</p>;\n  }\n\n  const { error, required, filled } = formControlContext;\n  const showRequiredError = dirty && required && !filled;\n\n  return (\n    <p\n      ref={ref}\n      className={clsx(\n        'text-sm mb-1',\n        classNameProp,\n        error || showRequiredError ? 'invalid text-red-500' : '',\n      )}\n    >\n      {children}\n      {required ? ' *' : ''}\n    </p>\n  );\n});\n\nconst HelperText = React.forwardRef((props, ref) => {\n  const { className, ...other } = props;\n  const formControlContext = useFormControlContext();\n  const [dirty, setDirty] = React.useState(false);\n\n  React.useEffect(() => {\n    if (formControlContext?.filled) {\n      setDirty(true);\n    }\n  }, [formControlContext]);\n\n  if (formControlContext === undefined) {\n    return null;\n  }\n\n  const { required, filled } = formControlContext;\n  const showRequiredError = dirty && required && !filled;\n\n  return showRequiredError ? (\n    <p ref={ref} className={clsx('text-sm', className)} {...other}>\n      This field is required.\n    </p>\n  ) : null;\n});\n\nHelperText.propTypes = {\n  className: PropTypes.string,\n};\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <style>\n      {`\n      .CustomInput .${inputClasses.input} {\n        width: 320px;\n        font-family: IBM Plex Sans, sans-serif;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.5;\n        padding: 8px 12px;\n        border-radius: 8px;\n        color: ${isDarkMode ? grey[300] : grey[900]};\n        background: ${isDarkMode ? grey[900] : '#fff'};\n        border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n        box-shadow: 0px 2px 2px ${isDarkMode ? grey[900] : grey[50]};\n      }\n      .CustomInput .${inputClasses.input}:hover {\n        border-color: ${cyan[400]};\n      }\n      .CustomInput .${inputClasses.input}:focus {\n        outline: 0;\n        border-color: ${cyan[400]};\n        box-shadow: 0 0 0 3px ${isDarkMode ? cyan[600] : cyan[200]};\n      }\n      `}\n    </style>\n  );\n}\n",moduleTSCSS:"./BasicFormControl/css/index.tsx",rawCSSTS:"import * as React from 'react';\nimport { FormControl, useFormControlContext } from '@mui/base/FormControl';\nimport { Input, inputClasses } from '@mui/base/Input';\nimport { useTheme } from '@mui/system';\nimport clsx from 'clsx';\n\nexport default function BasicFormControl() {\n  return (\n    <React.Fragment>\n      <FormControl defaultValue=\"\" required>\n        <Label>Name</Label>\n        <Input placeholder=\"Write your name here\" className=\"CustomInput\" />\n        <HelperText />\n      </FormControl>\n      <Styles />\n    </React.Fragment>\n  );\n}\n\nconst Label = React.forwardRef<\n  HTMLParagraphElement,\n  { className?: string; children?: React.ReactNode }\n>(({ className: classNameProp, children }, ref) => {\n  const formControlContext = useFormControlContext();\n  const [dirty, setDirty] = React.useState(false);\n\n  React.useEffect(() => {\n    if (formControlContext?.filled) {\n      setDirty(true);\n    }\n  }, [formControlContext]);\n\n  if (formControlContext === undefined) {\n    return <p className={clsx('text-sm mb-1', classNameProp)}>{children}</p>;\n  }\n\n  const { error, required, filled } = formControlContext;\n  const showRequiredError = dirty && required && !filled;\n\n  return (\n    <p\n      ref={ref}\n      className={clsx(\n        'text-sm mb-1',\n        classNameProp,\n        error || showRequiredError ? 'invalid text-red-500' : '',\n      )}\n    >\n      {children}\n      {required ? ' *' : ''}\n    </p>\n  );\n});\n\nconst HelperText = React.forwardRef<HTMLParagraphElement, { className?: string }>(\n  (props, ref) => {\n    const { className, ...other } = props;\n    const formControlContext = useFormControlContext();\n    const [dirty, setDirty] = React.useState(false);\n\n    React.useEffect(() => {\n      if (formControlContext?.filled) {\n        setDirty(true);\n      }\n    }, [formControlContext]);\n\n    if (formControlContext === undefined) {\n      return null;\n    }\n\n    const { required, filled } = formControlContext;\n    const showRequiredError = dirty && required && !filled;\n\n    return showRequiredError ? (\n      <p ref={ref} className={clsx('text-sm', className)} {...other}>\n        This field is required.\n      </p>\n    ) : null;\n  },\n);\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <style>\n      {`\n      .CustomInput .${inputClasses.input} {\n        width: 320px;\n        font-family: IBM Plex Sans, sans-serif;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.5;\n        padding: 8px 12px;\n        border-radius: 8px;\n        color: ${isDarkMode ? grey[300] : grey[900]};\n        background: ${isDarkMode ? grey[900] : '#fff'};\n        border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n        box-shadow: 0px 2px 2px ${isDarkMode ? grey[900] : grey[50]};\n      }\n      .CustomInput .${inputClasses.input}:hover {\n        border-color: ${cyan[400]};\n      }\n      .CustomInput .${inputClasses.input}:focus {\n        outline: 0;\n        border-color: ${cyan[400]};\n        box-shadow: 0 0 0 3px ${isDarkMode ? cyan[600] : cyan[200]};\n      }\n      `}\n    </style>\n  );\n}\n",tailwindJsxPreview:'<FormControl defaultValue="" className="font-sans" required>\n  <Label>Name</Label>\n  <Input\n    placeholder="Write your name here"\n    slotProps={{\n      input: {\n        className:\n          \'w-80 text-sm font-sans font-normal leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-500 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0\',\n      },\n    }}\n  />\n  <HelperText />\n</FormControl>',cssJsxPreview:'<React.Fragment>\n  <FormControl defaultValue="" required>\n    <Label>Name</Label>\n    <Input placeholder="Write your name here" className="CustomInput" />\n    <HelperText />\n  </FormControl>\n  <Styles />\n</React.Fragment>',jsxPreview:'<FormControl defaultValue="" required>\n  <Label>Name</Label>\n  <StyledInput placeholder="Write your name here" />\n  <HelperText />\n</FormControl>',moduleTS:"./BasicFormControl/system/index.js",rawTS:"import * as React from 'react';\nimport { FormControl, useFormControlContext } from '@mui/base/FormControl';\nimport { Input, inputClasses } from '@mui/base/Input';\nimport { styled } from '@mui/system';\nimport clsx from 'clsx';\n\nexport default function BasicFormControl() {\n  return (\n    <FormControl defaultValue=\"\" required>\n      <Label>Name</Label>\n      <StyledInput placeholder=\"Write your name here\" />\n      <HelperText />\n    </FormControl>\n  );\n}\n\nconst StyledInput = styled(Input)(\n  ({ theme }) => `\n\n  .${inputClasses.input} {\n    width: 320px;\n    font-family: IBM Plex Sans, sans-serif;\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.5;\n    padding: 8px 12px;\n    border-radius: 8px;\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n    background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n    border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    box-shadow: 0px 2px 2px ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n\n    &:hover {\n      border-color: ${blue[400]};\n    }\n\n    &:focus {\n      outline: 0;\n      border-color: ${blue[400]};\n      box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n    }\n  }\n`,\n);\n\nconst Label = styled(\n  ({ children, className }: { children?: React.ReactNode; className?: string }) => {\n    const formControlContext = useFormControlContext();\n    const [dirty, setDirty] = React.useState(false);\n\n    React.useEffect(() => {\n      if (formControlContext?.filled) {\n        setDirty(true);\n      }\n    }, [formControlContext]);\n\n    if (formControlContext === undefined) {\n      return <p>{children}</p>;\n    }\n\n    const { error, required, filled } = formControlContext;\n    const showRequiredError = dirty && required && !filled;\n\n    return (\n      <p className={clsx(className, error || showRequiredError ? 'invalid' : '')}>\n        {children}\n        {required ? ' *' : ''}\n      </p>\n    );\n  },\n)`\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  margin-bottom: 4px;\n\n  &.invalid {\n    color: red;\n  }\n`;\n\nconst HelperText = styled((props: {}) => {\n  const formControlContext = useFormControlContext();\n  const [dirty, setDirty] = React.useState(false);\n\n  React.useEffect(() => {\n    if (formControlContext?.filled) {\n      setDirty(true);\n    }\n  }, [formControlContext]);\n\n  if (formControlContext === undefined) {\n    return null;\n  }\n\n  const { required, filled } = formControlContext;\n  const showRequiredError = dirty && required && !filled;\n\n  return showRequiredError ? <p {...props}>This field is required.</p> : null;\n})`\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n`;\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#b6daff',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n"},"UseFormControl.js":{module:"./UseFormControl.js",raw:"import * as React from 'react';\nimport { FormControl, useFormControlContext } from '@mui/base/FormControl';\n\nexport default function UseFormControl() {\n  return (\n    <FormControl defaultValue=\"\" required>\n      <CustomInput />\n      <ControlStateDisplay />\n    </FormControl>\n  );\n}\n\nfunction CustomInput() {\n  const formControlContext = useFormControlContext();\n\n  if (formControlContext === undefined) {\n    return null;\n  }\n\n  const { value, required, onChange, disabled, onFocus, onBlur } =\n    formControlContext;\n\n  return (\n    <input\n      value={value}\n      required={required}\n      onChange={onChange}\n      disabled={disabled}\n      onFocus={onFocus}\n      onBlur={onBlur}\n    />\n  );\n}\n\nfunction ControlStateDisplay() {\n  const formControlContext = useFormControlContext();\n  if (formControlContext === undefined) {\n    return null;\n  }\n\n  const { filled, focused } = formControlContext;\n\n  return (\n    <p>\n      {filled ? 'filled' : 'empty'}&nbsp;|&nbsp;\n      {focused ? 'focused' : 'not focused'}\n    </p>\n  );\n}\n",jsxPreview:'<FormControl defaultValue="" required>\n  <CustomInput />\n  <ControlStateDisplay />\n</FormControl>',moduleTS:"./UseFormControl.js",rawTS:"import * as React from 'react';\nimport { FormControl, useFormControlContext } from '@mui/base/FormControl';\n\nexport default function UseFormControl() {\n  return (\n    <FormControl defaultValue=\"\" required>\n      <CustomInput />\n      <ControlStateDisplay />\n    </FormControl>\n  );\n}\n\nfunction CustomInput() {\n  const formControlContext = useFormControlContext();\n\n  if (formControlContext === undefined) {\n    return null;\n  }\n\n  const { value, required, onChange, disabled, onFocus, onBlur } =\n    formControlContext;\n\n  return (\n    <input\n      value={value as string}\n      required={required}\n      onChange={onChange}\n      disabled={disabled}\n      onFocus={onFocus}\n      onBlur={onBlur}\n    />\n  );\n}\n\nfunction ControlStateDisplay() {\n  const formControlContext = useFormControlContext();\n  if (formControlContext === undefined) {\n    return null;\n  }\n\n  const { filled, focused } = formControlContext;\n\n  return (\n    <p>\n      {filled ? 'filled' : 'empty'}&nbsp;|&nbsp;\n      {focused ? 'focused' : 'not focused'}\n    </p>\n  );\n}\n"},"FormControlFunctionChild.js":{module:"./FormControlFunctionChild.js",raw:"import * as React from 'react';\nimport { FormControl } from '@mui/base/FormControl';\nimport { Input, inputClasses } from '@mui/base/Input';\nimport { styled } from '@mui/system';\n\nexport default function FormControlFunctionChild() {\n  return (\n    <FormControl defaultValue=\"\" required>\n      {({ filled, focused }) => (\n        <React.Fragment>\n          <StyledInput className={filled ? 'filled' : ''} />\n          {filled && !focused && <OkMark>✔</OkMark>}\n        </React.Fragment>\n      )}\n    </FormControl>\n  );\n}\n\nconst StyledInput = styled(Input)(\n  ({ theme }) => `\n  display: inline-block;\n\n  .${inputClasses.input} {\n    width: 320px;\n    font-family: IBM Plex Sans, sans-serif;\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.5;\n    padding: 8px 12px;\n    border-radius: 8px;\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n    background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n    border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    box-shadow: 0px 2px 2px ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n\n    &:hover {\n      border-color: ${blue[400]};\n    }\n\n    &:focus {\n      outline: 0;\n      border-color: ${blue[400]};\n      box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n    }\n  }\n\n  &.filled .${inputClasses.input} {\n    box-shadow: 0 0 2px 2px rgba(125, 200, 0, 0.25);\n  }\n`,\n);\n\nconst OkMark = styled('span')`\n  margin-left: 8px;\n  margin-top: 10px;\n  position: absolute;\n  color: rgb(125 200 0 / 1);\n`;\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  600: '#0072E5',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n",jsxPreview:"<FormControl defaultValue=\"\" required>\n  {({ filled, focused }: FormControlState) => (\n    <React.Fragment>\n      <StyledInput className={filled ? 'filled' : ''} />\n      {filled && !focused && <OkMark>✔</OkMark>}\n    </React.Fragment>\n  )}\n</FormControl>",moduleTS:"./FormControlFunctionChild.js",rawTS:"import * as React from 'react';\nimport { FormControl, FormControlState } from '@mui/base/FormControl';\nimport { Input, inputClasses } from '@mui/base/Input';\nimport { styled } from '@mui/system';\n\nexport default function FormControlFunctionChild() {\n  return (\n    <FormControl defaultValue=\"\" required>\n      {({ filled, focused }: FormControlState) => (\n        <React.Fragment>\n          <StyledInput className={filled ? 'filled' : ''} />\n          {filled && !focused && <OkMark>✔</OkMark>}\n        </React.Fragment>\n      )}\n    </FormControl>\n  );\n}\n\nconst StyledInput = styled(Input)(\n  ({ theme }) => `\n  display: inline-block;\n\n  .${inputClasses.input} {\n    width: 320px;\n    font-family: IBM Plex Sans, sans-serif;\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.5;\n    padding: 8px 12px;\n    border-radius: 8px;\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n    background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n    border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    box-shadow: 0px 2px 2px ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n\n    &:hover {\n      border-color: ${blue[400]};\n    }\n\n    &:focus {\n      outline: 0;\n      border-color: ${blue[400]};\n      box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n    }\n  }\n\n  &.filled .${inputClasses.input} {\n    box-shadow: 0 0 2px 2px rgba(125, 200, 0, 0.25);\n  }\n`,\n);\n\nconst OkMark = styled('span')`\n  margin-left: 8px;\n  margin-top: 10px;\n  position: absolute;\n  color: rgb(125 200 0 / 1);\n`;\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  600: '#0072E5',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n"}};nu.scope={process:{},import:{react:C,"@mui/base/FormControl":x,"@mui/base/Input":b,"@mui/system":g,clsx:y,"prop-types":k}};var np={"./BasicFormControl/system/index.js":function(){return t||(t=(0,R.jsxs)(D.N,{defaultValue:"",required:!0,children:[(0,R.jsx)(q,{children:"Name"}),(0,R.jsx)(E,{placeholder:"Write your name here"}),(0,R.jsx)(I,{})]}))},"./UseFormControl.js":function(){return s||(s=(0,R.jsxs)(D.N,{defaultValue:"",required:!0,children:[(0,R.jsx)(T,{}),(0,R.jsx)(z,{})]}))},"./FormControlFunctionChild.js":function(){return(0,R.jsx)(D.N,{defaultValue:"",required:!0,children:function(n){var e=n.filled,o=n.focused;return(0,R.jsxs)(h.Fragment,{children:[(0,R.jsx)(H,{className:e?"filled":""}),e&&!o&&(l||(l=(0,R.jsx)(Z,{children:"✔"})))]})}})},"./BasicFormControl/tailwind/index.js":function(){var n="dark"===(0,V.Z)().palette.mode;return(0,R.jsx)("div",{className:"".concat(n?"dark":""),children:(0,R.jsxs)(D.N,{defaultValue:"",className:"font-sans",required:!0,children:[c||(c=(0,R.jsx)(_,{children:"Name"})),(0,R.jsx)(M.I,{placeholder:"Write your name here",slotProps:{input:{className:"w-80 text-sm font-sans font-normal leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-500 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0"}}}),d||(d=(0,R.jsx)(U,{}))]})})},"./BasicFormControl/tailwind/index.tsx":function(){var n="dark"===(0,V.Z)().palette.mode;return(0,R.jsx)("div",{className:"".concat(n?"dark":""),children:(0,R.jsxs)(D.N,{defaultValue:"",className:"font-sans",required:!0,children:[u||(u=(0,R.jsx)(K,{children:"Name"})),(0,R.jsx)(M.I,{placeholder:"Write your name here",slotProps:{input:{className:"w-80 text-sm font-sans font-normal leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-500 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0"}}}),p||(p=(0,R.jsx)(Y,{}))]})})},"./BasicFormControl/css/index.js":function(){return m||(m=(0,R.jsxs)(h.Fragment,{children:[(0,R.jsxs)(D.N,{defaultValue:"",required:!0,children:[(0,R.jsx)(X,{children:"Name"}),(0,R.jsx)(M.I,{placeholder:"Write your name here",className:"CustomInput"}),(0,R.jsx)(G,{})]}),(0,R.jsx)(ne,{})]}))},"./BasicFormControl/css/index.tsx":function(){return f||(f=(0,R.jsxs)(h.Fragment,{children:[(0,R.jsxs)(D.N,{defaultValue:"",required:!0,children:[(0,R.jsx)(nt,{children:"Name"}),(0,R.jsx)(M.I,{placeholder:"Write your name here",className:"CustomInput"}),(0,R.jsx)(nr,{})]}),(0,R.jsx)(nl,{})]}))}},nm={"modules/components/ComponentLinkHeader.js":ni.Z,"modules/components/ComponentPageTabs.js":nc.Z}}}]);