(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[34228,53373],{497633:function(n,e,t){"use strict";t.r(e),t.d(e,{ClickAwayListener:function(){return o.d}});var o=t(145002)},364228:function(n,e,t){"use strict";t.d(e,{A:function(){return f}});var o=t(163804),a=t(80117),r=t(667294),s=t(145002),i=t(829624),c=t(913113),l=t(853322),d=t(315412),u=t(555918),p=t(785893),m=["autoHideDuration","children","disableWindowBlurListener","exited","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","open","resumeHideDuration","slotProps","slots"],f=r.forwardRef(function(n,e){var t=n.autoHideDuration,r=n.children,f=n.disableWindowBlurListener,h=n.exited,g=(n.onBlur,n.onClose),b=(n.onFocus,n.onMouseEnter,n.onMouseLeave,n.open),x=n.resumeHideDuration,k=n.slotProps,y=void 0===k?{}:k,C=n.slots,v=(0,a.Z)(n,m),w=(0,i.Z)({root:["root"]},(0,u.T)(c.h)),S=(0,l.D)((0,o.Z)((0,o.Z)({},n),{},{autoHideDuration:void 0===t?null:t,disableWindowBlurListener:void 0!==f&&f,onClose:g,open:b,resumeHideDuration:x})),F=S.getRootProps,D=S.onClickAway,B=(void 0===C?{}:C).root||"div",E=(0,d.y)({elementType:B,getSlotProps:F,externalForwardedProps:v,externalSlotProps:y.root,additionalProps:{ref:e},ownerState:n,className:w.root}),A=(0,d.y)({elementType:s.d,externalSlotProps:y.clickAwayListener,additionalProps:{onClickAway:D},ownerState:n});return(delete A.ownerState,!b&&(void 0===h||h))?null:(0,p.jsx)(s.d,(0,o.Z)((0,o.Z)({},A),{},{children:(0,p.jsx)(B,(0,o.Z)((0,o.Z)({},E),{},{children:r}))}))})},421978:function(n,e,t){"use strict";t.r(e),t.d(e,{Snackbar:function(){return o.A},getSnackbarUtilityClass:function(){return a.h},snackbarClasses:function(){return a.a}});var o=t(364228),a=t(913113)},913113:function(n,e,t){"use strict";t.d(e,{a:function(){return r},h:function(){return a}});var o=t(899933);function a(n){return(0,o.Z)("MuiSnackbar",n)}var r=(0,t(173729).Z)("MuiSnackbar",["root"])},588682:function(n,e,t){"use strict";t.r(e),t.d(e,{useSnackbar:function(){return o.D}});var o=t(853322),a=t(34256),r={};for(var s in a)0>["default","useSnackbar"].indexOf(s)&&(r[s]=(function(n){return a[n]}).bind(0,s));t.d(e,r)},34256:function(){},980615:function(n,e,t){"use strict";t.d(e,{Z:function(){return i}}),t(667294);var o,a=t(679626),r=t(826077),s=t(785893);function i(n){var e=n.injectFirst,t=n.children;return e&&o?(0,s.jsx)(a.C,{value:o,children:t}):t}"object"==typeof document&&(o=(0,r.default)({key:"css",prepend:!0}))},682332:function(n,e,t){"use strict";var o=(0,t(220884).Z)();e.Z=o},172852:function(n,e,t){"use strict";var o=(0,t(818075).Z)();e.Z=o},872100:function(n,e,t){"use strict";var o=(0,t(76153).Z)();e.Z=o},239351:function(n,e,t){"use strict";t.r(e),t.d(e,{createStack:function(){return a.Z},default:function(){return o.Z},getStackUtilityClass:function(){return s},stackClasses:function(){return i}});var o=t(872100),a=t(76153),r=t(899933);function s(n){return(0,r.Z)("MuiStack",n)}var i=(0,t(173729).Z)("MuiStack",["root"])},760340:function(n,e,t){"use strict";var o=(0,t(853373).Z)();e.Z=o},853373:function(n,e,t){"use strict";t.d(e,{Z:function(){return L}});var o=t(163804),a=t(648611),r=t(80117),s=t(849088),i=t(343562),c=t.n(i),l=t(667294),d=t(490512),u=t(829624),p=t(899933),m=t(411200),f=t(811546),h=t(126613),g=t(721923),b=t(381322),x=t(290037),k=t(777193),y=t(807520),C=t.n(y),v=t(378149),w=t.n(v),S=t(116581);function F(n){return n?"Level".concat(n):""}function D(n){return n.unstable_level>0&&n.container}function B(n){return function(e){return"var(--Grid-".concat(e,"Spacing").concat(F(n.unstable_level),")")}}function E(n){return function(e){return 0===n.unstable_level?"var(--Grid-".concat(e,"Spacing)"):"var(--Grid-".concat(e,"Spacing").concat(F(n.unstable_level-1),")")}}function A(n){return 0===n.unstable_level?"var(--Grid-columns)":"var(--Grid-columns".concat(F(n.unstable_level-1),")")}var Z=function(n){var e=n.theme,t=n.ownerState,o=B(t),a={};return(0,S.t)(e.breakpoints,t.gridSize,function(n,e){var r={};!0===e&&(r={flexBasis:0,flexGrow:1,maxWidth:"100%"}),"auto"===e&&(r={flexBasis:"auto",flexGrow:0,flexShrink:0,maxWidth:"none",width:"auto"}),"number"==typeof e&&(r={flexGrow:0,flexBasis:"auto",width:"calc(100% * ".concat(e," / ").concat(A(t)).concat(D(t)?" + ".concat(o("column")):"",")")}),n(a,r)}),a},R=function(n){var e=n.theme,t=n.ownerState,o={};return(0,S.t)(e.breakpoints,t.gridOffset,function(n,e){var a={};"auto"===e&&(a={marginLeft:"auto"}),"number"==typeof e&&(a={marginLeft:0===e?"0px":"calc(100% * ".concat(e," / ").concat(A(t),")")}),n(o,a)}),o},M=function(n){var e=n.theme,t=n.ownerState;if(!t.container)return{};var o=D(t)?(0,k.Z)({},"--Grid-columns".concat(F(t.unstable_level)),A(t)):{"--Grid-columns":12};return(0,S.t)(e.breakpoints,t.columns,function(n,e){n(o,(0,k.Z)({},"--Grid-columns".concat(F(t.unstable_level)),e))}),o},j=function(n){var e=n.theme,t=n.ownerState;if(!t.container)return{};var o=E(t),a=D(t)?(0,k.Z)({},"--Grid-rowSpacing".concat(F(t.unstable_level)),o("row")):{};return(0,S.t)(e.breakpoints,t.rowSpacing,function(n,o){var r;n(a,(0,k.Z)({},"--Grid-rowSpacing".concat(F(t.unstable_level)),"string"==typeof o?o:null===(r=e.spacing)||void 0===r?void 0:r.call(e,o)))}),a},P=function(n){var e=n.theme,t=n.ownerState;if(!t.container)return{};var o=E(t),a=D(t)?(0,k.Z)({},"--Grid-columnSpacing".concat(F(t.unstable_level)),o("column")):{};return(0,S.t)(e.breakpoints,t.columnSpacing,function(n,o){var r;n(a,(0,k.Z)({},"--Grid-columnSpacing".concat(F(t.unstable_level)),"string"==typeof o?o:null===(r=e.spacing)||void 0===r?void 0:r.call(e,o)))}),a},$=function(n){var e=n.theme,t=n.ownerState;if(!t.container)return{};var o={};return(0,S.t)(e.breakpoints,t.direction,function(n,e){n(o,{flexDirection:e})}),o},I=function(n){var e=n.ownerState,t=B(e),a=E(e);return(0,o.Z)((0,o.Z)({minWidth:0,boxSizing:"border-box"},e.container&&(0,o.Z)((0,o.Z)({display:"flex",flexWrap:"wrap"},e.wrap&&"wrap"!==e.wrap&&{flexWrap:e.wrap}),{},{margin:"calc(".concat(t("row")," / -2) calc(").concat(t("column")," / -2)")},e.disableEqualOverflow&&{margin:"calc(".concat(t("row")," * -1) 0px 0px calc(").concat(t("column")," * -1)")})),(!e.container||D(e))&&(0,o.Z)({padding:"calc(".concat(a("row")," / 2) calc(").concat(a("column")," / 2)")},(e.disableEqualOverflow||e.parentDisableEqualOverflow)&&{padding:"".concat(a("row")," 0px 0px ").concat(a("column"))}))},O=function(n){var e=[];return c()(n).forEach(function(n){var t=(0,a.Z)(n,2),o=t[0],r=t[1];!1!==r&&void 0!==r&&e.push("grid-".concat(o,"-").concat(String(r)))}),e},T=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"xs";function t(n){return void 0!==n&&("string"==typeof n&&!C()(Number(n))||"number"==typeof n&&n>0)}if(t(n))return["spacing-".concat(e,"-").concat(String(n))];if("object"==typeof n&&!w()(n)){var o=[];return c()(n).forEach(function(n){var e=(0,a.Z)(n,2),r=e[0],s=e[1];t(s)&&o.push("spacing-".concat(r,"-").concat(String(s)))}),o}return[]},z=t(785893),_=["className","children","columns","container","component","direction","wrap","spacing","rowSpacing","columnSpacing","disableEqualOverflow","unstable_level"],N=(0,x.Z)(),H=(0,f.default)("div",{name:"MuiGrid",slot:"Root",overridesResolver:function(n,e){return e.root}});function X(n){return(0,h.Z)({props:n,name:"MuiGrid",defaultTheme:N})}function L(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.createStyledComponent,t=n.useThemeProps,i=void 0===t?X:t,f=n.componentName,h=void 0===f?"MuiGrid":f,x=l.createContext(void 0),k=function(n,e){var t=n.container,o=n.direction,r=n.spacing,i=n.wrap,l=n.gridSize,d={root:["root",t&&"container","wrap"!==i&&"wrap-xs-".concat(String(i))].concat((0,s.Z)(void 0===o?[]:"object"==typeof o?c()(o).map(function(n){var e=(0,a.Z)(n,2),t=e[0],o=e[1];return"direction-".concat(t,"-").concat(o)}):["direction-xs-".concat(String(o))]),(0,s.Z)(O(l)),(0,s.Z)(t?T(r,e.breakpoints.keys[0]):[]))};return(0,u.Z)(d,function(n){return(0,p.Z)(h,n)},{})},y=(void 0===e?H:e)(M,P,j,Z,$,I,R),C=l.forwardRef(function(n,e){var t,s,u,p,f,h,C,v,w=(0,g.Z)(),S=i(n),F=(0,b.Z)(S),D=l.useContext(x),B=F.className,E=F.children,A=F.columns,Z=F.container,R=F.component,M=F.direction,j=F.wrap,P=F.spacing,$=void 0===P?0:P,I=F.rowSpacing,O=F.columnSpacing,T=F.disableEqualOverflow,N=F.unstable_level,H=void 0===N?0:N,X=(0,r.Z)(F,_),L=T;H&&void 0!==T&&(L=n.disableEqualOverflow);var U={},W={},G={};c()(X).forEach(function(n){var e=(0,a.Z)(n,2),t=e[0],o=e[1];void 0!==w.breakpoints.values[t]?U[t]=o:void 0!==w.breakpoints.values[t.replace("Offset","")]?W[t.replace("Offset","")]=o:G[t]=o});var V=null!==(t=n.columns)&&void 0!==t?t:H?void 0:void 0===A?12:A,q=null!==(s=n.spacing)&&void 0!==s?s:H?void 0:$,K=null!==(u=null!==(p=n.rowSpacing)&&void 0!==p?p:n.spacing)&&void 0!==u?u:H?void 0:void 0===I?$:I,Y=null!==(f=null!==(h=n.columnSpacing)&&void 0!==h?h:n.spacing)&&void 0!==f?f:H?void 0:void 0===O?$:O,J=(0,o.Z)((0,o.Z)({},F),{},{level:H,columns:V,container:void 0!==Z&&Z,direction:void 0===M?"row":M,wrap:void 0===j?"wrap":j,spacing:q,rowSpacing:K,columnSpacing:Y,gridSize:U,gridOffset:W,disableEqualOverflow:null!==(C=null!==(v=L)&&void 0!==v?v:D)&&void 0!==C&&C,parentDisableEqualOverflow:D}),Q=k(J,w),nn=(0,z.jsx)(y,(0,o.Z)((0,o.Z)({ref:e,as:void 0===R?"div":R,ownerState:J,className:(0,d.default)(Q.root,B)},G),{},{children:l.Children.map(E,function(n){if(l.isValidElement(n)&&(0,m.Z)(n,["Grid"])){var e;return l.cloneElement(n,{unstable_level:null!==(e=n.props.unstable_level)&&void 0!==e?e:H+1})}return n})}));return void 0!==L&&L!==(null!=D&&D)&&(nn=(0,z.jsx)(x.Provider,{value:L,children:nn})),nn});return C.muiName="Grid",C}},553094:function(n,e,t){"use strict";t.r(e),t.d(e,{createGrid:function(){return a.Z},default:function(){return o.Z},getGridUtilityClass:function(){return c},gridClasses:function(){return d},unstable_traverseBreakpoints:function(){return u.t}});var o=t(760340),a=t(853373),r=t(849088),s=t(899933),i=t(173729);function c(n){return(0,s.Z)("MuiGrid",n)}var l=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12],d=(0,i.Z)("MuiGrid",["root","container","item"].concat((0,r.Z)([0,1,2,3,4,5,6,7,8,9,10].map(function(n){return"spacing-xs-".concat(n)})),(0,r.Z)(["column-reverse","column","row-reverse","row"].map(function(n){return"direction-xs-".concat(n)})),(0,r.Z)(["nowrap","wrap-reverse","wrap"].map(function(n){return"wrap-xs-".concat(n)})),(0,r.Z)(l.map(function(n){return"grid-xs-".concat(n)})),(0,r.Z)(l.map(function(n){return"grid-sm-".concat(n)})),(0,r.Z)(l.map(function(n){return"grid-md-".concat(n)})),(0,r.Z)(l.map(function(n){return"grid-lg-".concat(n)})),(0,r.Z)(l.map(function(n){return"grid-xl-".concat(n)})))),u=t(116581)},116581:function(n,e,t){"use strict";t.d(e,{t:function(){return c}});var o=t(69055),a=t(378149),r=t.n(a),s=t(726243),i=t.n(s),c=function(n,e,t){var a,s,c=n.keys[0];r()(e)?e.forEach(function(e,a){t(function(e,t){a<=n.keys.length-1&&(0===a?(0,o.Z)(e,t):e[n.up(n.keys[a])]=t)},e)}):e&&"object"==typeof e?(i()(e).length>n.keys.length?n.keys:(a=n.keys,s=i()(e),a.filter(function(n){return s.includes(n)}))).forEach(function(a){if(-1!==n.keys.indexOf(a)){var r=e[a];void 0!==r&&t(function(e,t){c===a?(0,o.Z)(e,t):e[n.up(a)]=t},r)}}):("number"==typeof e||"string"==typeof e)&&t(function(n,e){(0,o.Z)(n,e)},e)}},419443:function(n,e,t){"use strict";t.r(e),t.d(e,{Box:function(){return nd.Z},Container:function(){return nP.Z},GlobalStyles:function(){return s.Z},Stack:function(){return n_.Z},StyledEngineProvider:function(){return r.Z},ThemeProvider:function(){return nw.Z},Unstable_Grid:function(){return nT.Z},alignContent:function(){return w},alignItems:function(){return v},alignSelf:function(){return E},alpha:function(){return nv.Fq},backgroundColor:function(){return j.Cz},bgcolor:function(){return j.n9},border:function(){return i.Cg},borderBottom:function(){return i.h$},borderBottomColor:function(){return i.vS},borderColor:function(){return i.tv},borderLeft:function(){return i.sc},borderLeftColor:function(){return i.Vv},borderRadius:function(){return i.E0},borderRight:function(){return i.vQ},borderRightColor:function(){return i.XY},borderTop:function(){return i.j1},borderTopColor:function(){return i.SK},borderTransform:function(){return i.NL},borders:function(){return i.ZP},bottom:function(){return T},boxSizing:function(){return H.ix},breakpoints:function(){return c.ZP},color:function(){return j.$_},colorChannel:function(){return nv.n8},columnGap:function(){return M.e$},compose:function(){return l.Z},containerClasses:function(){return nO},createBox:function(){return nu.Z},createBreakpoints:function(){return nh.Z},createContainer:function(){return nj.Z},createGrid:function(){return nz.createGrid},createSpacing:function(){return ng.Z},createStack:function(){return nN.createStack},createStyled:function(){return np.ZP},createTheme:function(){return nf.Z},createUnarySpacing:function(){return X.hB},createUnaryUnit:function(){return X.eI},css:function(){return a.css},darken:function(){return nv._j},decomposeColor:function(){return nv.tB},display:function(){return b},emphasize:function(){return nv._4},experimental_sx:function(){return nH},flex:function(){return F},flexBasis:function(){return x},flexDirection:function(){return k},flexGrow:function(){return D},flexShrink:function(){return B},flexWrap:function(){return y},flexbox:function(){return R},fontFamily:function(){return L},fontSize:function(){return U},fontStyle:function(){return W},fontWeight:function(){return G},gap:function(){return M.SG},getContainerUtilityClass:function(){return nI},getContrastRatio:function(){return nv.mi},getGridUtilityClass:function(){return nz.getGridUtilityClass},getLuminance:function(){return nv.H3},getPath:function(){return d.DW},getStackUtilityClass:function(){return nN.getStackUtilityClass},getStyleFromPropValue:function(){return X.zO},getStyleValue:function(){return d.Jq},getThemeProps:function(){return nk.Z},getValue:function(){return X.NA},grid:function(){return M.ZP},gridArea:function(){return M.fD},gridAutoColumns:function(){return M.aN},gridAutoFlow:function(){return M.B},gridAutoRows:function(){return M.FW},gridClasses:function(){return nz.gridClasses},gridColumn:function(){return M.t4},gridRow:function(){return M.oI},gridTemplateAreas:function(){return M.zI},gridTemplateColumns:function(){return M.K$},gridTemplateRows:function(){return M.RG},handleBreakpoints:function(){return c.k9},height:function(){return H.Cb},hexToRgb:function(){return nv.oo},hslToRgb:function(){return nv.ve},justifyContent:function(){return C},justifyItems:function(){return A},justifySelf:function(){return Z},keyframes:function(){return a.keyframes},left:function(){return z},letterSpacing:function(){return V},lighten:function(){return nv.$n},lineHeight:function(){return K},margin:function(){return X.e6},marginKeys:function(){return X.hU},maxHeight:function(){return H.kC},maxWidth:function(){return H.kk},mergeBreakpointsInOrder:function(){return c.dt},minHeight:function(){return H.jw},minWidth:function(){return H.ih},order:function(){return S},padding:function(){return X.o3},paddingKeys:function(){return X.Jj},palette:function(){return j.ZP},paletteTransform:function(){return j.Sh},position:function(){return P},positions:function(){return _},private_safeAlpha:function(){return nv.zp},private_safeColorChannel:function(){return nv.LR},private_safeDarken:function(){return nv.q8},private_safeEmphasize:function(){return nv.fk},private_safeLighten:function(){return nv.ux},recomposeColor:function(){return nv.wy},responsivePropType:function(){return nM},rgbToHex:function(){return nv.vq},right:function(){return O},rowGap:function(){return M.s2},shadows:function(){return N},shape:function(){return nb.Z},shouldForwardProp:function(){return np.x9},sizeHeight:function(){return H.Vs},sizeWidth:function(){return H.lO},sizing:function(){return H.ZP},sizingTransform:function(){return H.EB},spacing:function(){return X.ZP},stackClasses:function(){return nN.stackClasses},style:function(){return d.ZP},styled:function(){return nm.default},systemDefaultTheme:function(){return np.P_},textAlign:function(){return Y},textTransform:function(){return q},top:function(){return I},typography:function(){return Q},typographyVariant:function(){return J},unstable_createCssVarsProvider:function(){return nS.Z},unstable_createCssVarsTheme:function(){return nR},unstable_createGetCssVar:function(){return nF.Z},unstable_createStyleFunctionSx:function(){return nn.n},unstable_cssVarsParser:function(){return nD.ZP},unstable_defaultSxConfig:function(){return nt.Z},unstable_extendSxProp:function(){return ne.Z},unstable_getThemeValue:function(){return nl},unstable_prepareCssVars:function(){return nB.Z},unstable_resolveBreakpointValues:function(){return c.P$},unstable_styleFunctionSx:function(){return nn.Z},unstable_traverseBreakpoints:function(){return nz.unstable_traverseBreakpoints},useTheme:function(){return ny.Z},useThemeProps:function(){return nx.Z},useThemeWithoutDefault:function(){return nC.Z},width:function(){return H.bf},zIndex:function(){return $}});var o=t(242268),a=t(370917),r=t(980615),s=t(588483),i=t(524660),c=t(921766),l=t(487489),d=t(830139),u=(0,d.ZP)({prop:"displayPrint",cssProperty:!1,transform:function(n){return{"@media print":{display:n}}}}),p=(0,d.ZP)({prop:"display"}),m=(0,d.ZP)({prop:"overflow"}),f=(0,d.ZP)({prop:"textOverflow"}),h=(0,d.ZP)({prop:"visibility"}),g=(0,d.ZP)({prop:"whiteSpace"}),b=(0,l.Z)(u,p,m,f,h,g),x=(0,d.ZP)({prop:"flexBasis"}),k=(0,d.ZP)({prop:"flexDirection"}),y=(0,d.ZP)({prop:"flexWrap"}),C=(0,d.ZP)({prop:"justifyContent"}),v=(0,d.ZP)({prop:"alignItems"}),w=(0,d.ZP)({prop:"alignContent"}),S=(0,d.ZP)({prop:"order"}),F=(0,d.ZP)({prop:"flex"}),D=(0,d.ZP)({prop:"flexGrow"}),B=(0,d.ZP)({prop:"flexShrink"}),E=(0,d.ZP)({prop:"alignSelf"}),A=(0,d.ZP)({prop:"justifyItems"}),Z=(0,d.ZP)({prop:"justifySelf"}),R=(0,l.Z)(x,k,y,C,v,w,S,F,D,B,E,A,Z),M=t(216657),j=t(91716),P=(0,d.ZP)({prop:"position"}),$=(0,d.ZP)({prop:"zIndex",themeKey:"zIndex"}),I=(0,d.ZP)({prop:"top"}),O=(0,d.ZP)({prop:"right"}),T=(0,d.ZP)({prop:"bottom"}),z=(0,d.ZP)({prop:"left"}),_=(0,l.Z)(P,$,I,O,T,z),N=(0,d.ZP)({prop:"boxShadow",themeKey:"shadows"}),H=t(505775),X=t(171413),L=(0,d.ZP)({prop:"fontFamily",themeKey:"typography"}),U=(0,d.ZP)({prop:"fontSize",themeKey:"typography"}),W=(0,d.ZP)({prop:"fontStyle",themeKey:"typography"}),G=(0,d.ZP)({prop:"fontWeight",themeKey:"typography"}),V=(0,d.ZP)({prop:"letterSpacing"}),q=(0,d.ZP)({prop:"textTransform"}),K=(0,d.ZP)({prop:"lineHeight"}),Y=(0,d.ZP)({prop:"textAlign"}),J=(0,d.ZP)({prop:"typography",cssProperty:!1,themeKey:"typography"}),Q=(0,l.Z)(J,L,U,W,G,V,K,Y,q),nn=t(328723),ne=t(381322),nt=t(185128),no=t(777193),na=t(726243),nr=t.n(na),ns={borders:i.ZP.filterProps,display:b.filterProps,flexbox:R.filterProps,grid:M.ZP.filterProps,positions:_.filterProps,palette:j.ZP.filterProps,shadows:N.filterProps,sizing:H.ZP.filterProps,spacing:X.ZP.filterProps,typography:Q.filterProps},ni={borders:i.ZP,display:b,flexbox:R,grid:M.ZP,positions:_,palette:j.ZP,shadows:N,sizing:H.ZP,spacing:X.ZP,typography:Q},nc=nr()(ns).reduce(function(n,e){return ns[e].forEach(function(t){n[t]=ni[e]}),n},{}),nl=function(n,e,t){var o,a=(o={},(0,no.Z)(o,n,e),(0,no.Z)(o,"theme",t),o),r=nc[n];return r?r(a):(0,no.Z)({},n,e)},nd=t(682332),nu=t(220884),np=t(674994),nm=t(811546),nf=t(290037),nh=t(820928),ng=t(366537),nb=t(128999),nx=t(126613),nk=t(637778),ny=t(721923),nC=t(145027),nv=t(992443),nw=t(602754),nS=t(878769),nF=t(61567),nD=t(296227),nB=t(953749),nE=t(163804),nA=t(80117),nZ=["cssVarPrefix","shouldSkipGeneratingVar"],nR=function(n){var e=n.cssVarPrefix,t=n.shouldSkipGeneratingVar,o=(0,nA.Z)(n,nZ);return(0,nE.Z)((0,nE.Z)({},n),(0,nB.Z)(o,{prefix:e,shouldSkipGeneratingVar:t}))},nM={},nj=t(818075),nP=t(172852),n$=t(899933);function nI(n){return(0,n$.Z)("MuiContainer",n)}var nO=(0,t(173729).Z)("MuiContainer",["root","disableGutters","fixed","maxWidthXs","maxWidthSm","maxWidthMd","maxWidthLg","maxWidthXl"]),nT=t(760340),nz=t(553094),n_=t(872100),nN=t(239351);function nH(){throw Error((0,o.Z)(20))}},747892:function(n,e,t){"use strict";t.d(e,{Z:function(){return F}});var o,a,r,s,i,c=t(667294),l=t(514950),d=t(695093),u=t(34915),p=t.n(u),m=t(602688),f=t(941615),h=t(785893),g=(0,f.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{fill:"#FDB300",d:"M5.24 2.7L12 2l6.76.7L24 9.48 12 23 0 9.49z"}),(0,h.jsx)("path",{fill:"#EA6C00",d:"M4.85 9l7.13 14L0 9zM19.1 9l-7.12 14L23.95 9z"}),(0,h.jsx)("path",{fill:"#FDAD00",d:"M4.85 9H19.1l-7.12 14z"}),(0,h.jsxs)("g",{children:[(0,h.jsx)("path",{fill:"#FDD231",d:"M11.98 2l-6.75.65-.38 6.34zM11.98 2l6.75.65.37 6.34z"}),(0,h.jsx)("path",{fill:"#FDAD00",d:"M23.95 9l-5.22-6.35.37 6.34zM0 9l5.23-6.35-.38 6.34z"}),(0,h.jsx)("path",{fill:"#FEEEB7",d:"M11.98 2L4.85 9H19.1z"})]})]}),"Sketch"),b=(0,f.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M8 24a4 4 0 004-4v-4H8a4 4 0 000 8z",fill:"#0ACF83"}),(0,h.jsx)("path",{d:"M4 12a4 4 0 014-4h4v8H8a4 4 0 01-4-4z",fill:"#A259FF"}),(0,h.jsx)("path",{d:"M4 4a4 4 0 014-4h4v8H8a4 4 0 01-4-4z",fill:"#F24E1E"}),(0,h.jsx)("path",{d:"M12 0h4a4 4 0 010 8h-4V0z",fill:"#FF7262"}),(0,h.jsx)("path",{d:"M20 12a4 4 0 11-8 0 4 4 0 018 0z",fill:"#1ABCFE"})]}),"Figma"),x=(0,f.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M5.54 2h12.92C20.42 2 22 3.6 22 5.58v12.55a3.56 3.56 0 01-3.54 3.58H5.54A3.56 3.56 0 012 18.13V5.58A3.56 3.56 0 015.54 2z",fill:"#470137"}),(0,h.jsx)("path",{d:"M12.52 7.28L10 11.45l2.68 4.41c.01.04.02.07.01.1 0 .04-.04.01-.09.02H10.7c-.13 0-.22 0-.28-.1l-.54-1.04c-.17-.35-.36-.7-.57-1.06l-.6-1.1h-.02c-.17.36-.36.73-.56 1.09l-.57 1.07-.57 1.06c-.04.09-.1.1-.2.1H4.94c-.03 0-.06.01-.06-.03 0-.03 0-.07.02-.1l2.6-4.28-2.53-4.31c-.03-.04-.04-.07-.02-.09.02-.02.05-.03.09-.03h1.9a.5.5 0 01.11.01c.04.02.06.05.09.08.16.36.34.72.53 1.09l.6 1.06c.2.36.39.71.57 1.07h.01c.18-.37.36-.73.55-1.08.18-.36.37-.71.57-1.06l.56-1.06c0-.04.02-.07.05-.09.03-.01.06-.02.1-.01h1.77c.04-.01.09.01.1.06 0 0-.01.04-.03.05zM16.39 16.16c-.62 0-1.24-.12-1.8-.38a2.92 2.92 0 01-1.27-1.15 3.65 3.65 0 01-.46-1.91 3.46 3.46 0 011.8-3.08 4.27 4.27 0 012.29-.48c.07 0 .16 0 .26.02V6.52c0-.06.02-.1.08-.1H19c.04 0 .08.03.08.07v8.01l.02.51.03.49c0 .06-.02.11-.08.13a6.37 6.37 0 01-2.65.53zm.82-1.69v-3.7a2.11 2.11 0 00-1.45.16c-.29.15-.53.36-.71.63-.19.27-.28.63-.28 1.06 0 .3.04.6.14.87a1.44 1.44 0 00.95.93c.23.08.46.11.7.11a4.49 4.49 0 00.65-.06z",fill:"#FF61F6"})]}),"AdobeXD"),k=(0,f.Z)((0,h.jsxs)("g",{fill:"currentColor",fillRule:"nonzero",children:[(0,h.jsx)("path",{d:"M5.84 3c-.52 0-1 .25-1.3.67l-1.4 2.05c-.06.09-.1.19-.14.28h8V3H5.84zM20.86 5.72l-1.4-2.05c-.3-.42-.81-.67-1.33-.67H13v3h8c-.05-.1-.08-.2-.14-.28z",fillOpacity:".79"}),(0,h.jsx)("path",{d:"M20.98 7H3.02L3 7.11V19.4c0 .89.71 1.61 1.58 1.61h14.84A1.6 1.6 0 0021 19.4V7.1L20.98 7zm-6.87 5.36H9.89a1.6 1.6 0 01-1.58-1.61c0-.89.7-1.6 1.58-1.6h4.22c.87 0 1.58.71 1.58 1.6 0 .89-.7 1.6-1.58 1.6z",fillOpacity:".87"})]}),"BundleSize"),y=(0,f.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M6.92 6.1l2.33 7.99 2.32-8h6.3v.8l-2.37 4.14c.83.27 1.46.76 1.89 1.47.43.71.64 1.55.64 2.51 0 1.2-.31 2.2-.94 3a2.93 2.93 0 01-2.42 1.22 2.9 2.9 0 01-1.96-.72 4.25 4.25 0 01-1.23-1.96l1.31-.55c.2.5.45.9.76 1.18.32.28.69.43 1.12.43.44 0 .82-.26 1.13-.76.31-.51.47-1.12.47-1.84 0-.79-.17-1.4-.5-1.83-.38-.5-.99-.76-1.81-.76h-.64v-.78l2.24-3.92h-2.7l-.16.26-3.3 11.25h-.15l-2.4-8.14-2.41 8.14h-.16L.43 6.1H2.1l2.33 7.99L6 8.71 5.24 6.1h1.68z",fill:"#005A9C"}),(0,h.jsx)("g",{fill:"currentColor",children:(0,h.jsx)("path",{d:"M23.52 6.25l.28 1.62-.98 1.8s-.38-.76-1.01-1.19c-.53-.35-.87-.43-1.41-.33-.7.14-1.48.93-1.82 1.9-.41 1.18-.42 1.74-.43 2.26a4.9 4.9 0 00.11 1.33s-.6-1.06-.59-2.61c0-1.1.19-2.11.72-3.1.47-.87 1.17-1.4 1.8-1.45.63-.07 1.14.23 1.53.55.42.33.83 1.07.83 1.07l.97-1.85zM23.64 15.4s-.43.75-.7 1.04c-.27.28-.76.79-1.36 1.04-.6.25-.91.3-1.5.25a3.03 3.03 0 01-1.34-.52 5.08 5.08 0 01-1.67-2.04s.24.75.39 1.07c.09.18.36.74.74 1.23a3.5 3.5 0 002.1 1.42c1.04.18 1.76-.27 1.94-.38a5.32 5.32 0 001.4-1.43c.1-.14.25-.43.25-.43l-.25-1.25z"})})]}),"W3C"),C=(0,f.Z)((0,h.jsxs)("g",{fill:"none",fillRule:"evenodd",children:[(0,h.jsx)("circle",{fill:"#737373",cx:"12",cy:"12",r:"12"}),(0,h.jsx)("path",{fill:"#BDBDBD",d:"M4 4h16v16H4z"}),(0,h.jsx)("path",{fill:"#FFF",d:"M12 20l8-16H4z"})]}),"MaterialDesign"),v=t(692124),w=(0,m.ZP)("ul")({margin:0,padding:0,listStyle:"none",display:"flex",flexWrap:"wrap",gap:8,"& .MuiChip-root .MuiChip-iconSmall":{marginLeft:4}}),S={"material-ui":"@mui/material","joy-ui":"@mui/joy","base-ui":"@mui/base",system:"@mui/system"};function F(n){var e,t,u=n.markdown.headers,m=n.design,f=(0,v.useTranslate)(),F=null!==(e=null!==(t=u.packageName)&&void 0!==t?t:S[u.productId])&&void 0!==e?e:"@mui/material";return(0,h.jsxs)(w,{children:[u.githubLabel?(0,h.jsx)("li",{children:(0,h.jsx)(l.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"".concat("https://github.com/mui/material-ui","/labels/").concat(encodeURIComponent(u.githubLabel)),icon:o||(o=(0,h.jsx)(p(),{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":f("githubLabel"),"data-ga-event-split":"0.1",label:f("githubLabel")})}):null,(0,h.jsx)("li",{children:(0,h.jsx)(d.Z,{title:f("bundleSizeTooltip"),children:(0,h.jsx)(l.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://bundlephobia.com/package/".concat(F,"@latest"),icon:a||(a=(0,h.jsx)(k,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":f("bundleSize"),"data-ga-event-split":"0.1",label:f("bundleSize")})})}),u.waiAria?(0,h.jsx)("li",{children:(0,h.jsx)(l.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:u.waiAria,icon:r||(r=(0,h.jsx)(y,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"WAI-ARIA","data-ga-event-split":"0.1",label:"WAI-ARIA"})}):null,u.materialDesign?(0,h.jsx)("li",{children:(0,h.jsx)(l.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:u.materialDesign,icon:s||(s=(0,h.jsx)(C,{})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Material Design","data-ga-event-split":"0.1",label:"Material Design"})}):null,!1!==m?i||(i=(0,h.jsxs)(c.Fragment,{children:[(0,h.jsx)("li",{children:(0,h.jsx)(l.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/figma-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(b,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Figma","data-ga-event-split":"0.1",label:"Figma"})}),(0,h.jsx)("li",{children:(0,h.jsx)(l.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/adobe-xd-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(x,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Adobe XD","data-ga-event-split":"0.1",label:"Adobe"})}),(0,h.jsx)("li",{children:(0,h.jsx)(l.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/sketch-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(g,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Sketch","data-ga-event-split":"0.1",label:"Sketch"})})]})):null]})}},34915:function(n,e,t){"use strict";var o=t(526771),a=t(564836);o(e,"__esModule",{value:!0}),e.default=void 0;var r=a(t(391641)),s=t(785893),i=(0,r.default)((0,s.jsx)("path",{d:"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM7 9h10c.55 0 1 .45 1 1s-.45 1-1 1H7c-.55 0-1-.45-1-1s.45-1 1-1zm6 5H7c-.55 0-1-.45-1-1s.45-1 1-1h6c.55 0 1 .45 1 1s-.45 1-1 1zm4-6H7c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1z"}),"ChatRounded");e.default=i},279078:function(n,e,t){"use strict";var o=t(526771),a=t(564836);o(e,"__esModule",{value:!0}),e.default=void 0;var r=a(t(391641)),s=t(785893),i=(0,r.default)((0,s.jsx)("path",{d:"M9 16.17 5.53 12.7a.9959.9959 0 0 0-1.41 0c-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41a.9959.9959 0 0 0-1.41 0L9 16.17z"}),"CheckRounded");e.default=i},834228:function(n,e,t){"use strict";t.r(e),t.d(e,{demoComponents:function(){return nA},demos:function(){return nE},docs:function(){return nB},srcComponents:function(){return nZ}});var o,a,r,s,i,c,l,d,u,p,m,f,h,g,b,x,k=t(667294),y=t.t(k,2),C=t(588682),v=t(497633),w=t(419443),S=t(270823),F=t(432953),D=t.n(F),B=t(421978),E=t(279078),A=t.n(E),Z=t(935715),R=t(163804),M=t(648611),j=t(853322),P=t(145002),$=t(370917),I=t(811546),O=t(785893),T={200:"#99CCF3",300:"#66B2FF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0066CC"},z={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},_=(0,$.keyframes)(o||(o=(0,Z.Z)(["\n  from {\n    transform: translateX(100%);\n  }\n\n  to {\n    transform: translateX(0);\n  }\n"]))),N=(0,I.default)("button")(function(n){var e=n.theme;return"\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  background: ".concat("dark"===e.palette.mode?z[900]:"#fff",";\n  border: 1px solid ").concat("dark"===e.palette.mode?z[700]:z[200],";\n  color: ").concat("dark"===e.palette.mode?z[200]:z[900],";\n  box-shadow: 0 1px 2px ").concat("dark"===e.palette.mode?"rgba(0, 0, 0, 0.5)":"rgba(45, 45, 60, 0.15)",";\n\n  &:hover {\n    background: ").concat("dark"===e.palette.mode?z[800]:z[50],";\n    border-color: ").concat("dark"===e.palette.mode?z[600]:z[300],";\n  }\n\n  &:active {\n    background: ").concat("dark"===e.palette.mode?z[700]:z[100],";\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ").concat("dark"===e.palette.mode?T[300]:T[200],";\n    outline: none;\n  }\n  ")}),H=(0,I.default)("div")(function(n){var e=n.theme;return(0,$.css)(a||(a=(0,Z.Z)(["\n    position: fixed;\n    z-index: 5500;\n    display: flex;\n    right: 16px;\n    bottom: 16px;\n    left: auto;\n    justify-content: space-between;\n    max-width: 560px;\n    min-width: 300px;\n    background-color: ",";\n    border-radius: 8px;\n    border: 1px solid ",";\n    box-shadow: ",";\n    padding: 0.75rem;\n    color: ",";\n    font-family: 'IBM Plex Sans', sans-serif;\n    font-weight: 600;\n    animation: "," 200ms;\n    transition: transform 0.2s ease-out;\n  "])),"dark"===e.palette.mode?z[900]:"#FFF","dark"===e.palette.mode?z[700]:z[200],"dark"===e.palette.mode?"0 2px 8px rgb(0 0 0 / 0.5)":"0 2px 8px ".concat(z[200]),"dark"===e.palette.mode?z[50]:z[900],_)}),X=t(696630),L=t(364228),U={200:"#99CCF3",300:"#66B2FF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0066CC"},W={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},G=(0,I.default)("button")(function(n){var e=n.theme;return"\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  background: ".concat("dark"===e.palette.mode?W[900]:"#fff",";\n  border: 1px solid ").concat("dark"===e.palette.mode?W[700]:W[200],";\n  color: ").concat("dark"===e.palette.mode?W[200]:W[900],";\n  box-shadow: 0 1px 2px ").concat("dark"===e.palette.mode?"rgba(0, 0, 0, 0.5)":"rgba(45, 45, 60, 0.15)",";\n\n  &:hover {\n    background: ").concat("dark"===e.palette.mode?W[800]:W[50],";\n    border-color: ").concat("dark"===e.palette.mode?W[600]:W[300],";\n  }\n  &:active {\n    background: ").concat("dark"===e.palette.mode?W[700]:W[100],";\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ").concat("dark"===e.palette.mode?U[300]:U[200],";\n    outline: none;\n  }\n  ")}),V=(0,I.default)(L.A)(s||(s=(0,Z.Z)(["\n  position: fixed;\n  z-index: 5500;\n  display: flex;\n  bottom: 16px;\n  right: 16px;\n"]))),q=(0,I.default)("div")(function(n){var e=n.theme;return"\n  position: relative;\n  overflow: hidden;\n  z-index: 5500;\n  display: flex;\n  left: auto;\n  justify-content: space-between;\n  max-width: 560px;\n  min-width: 300px;\n  background-color: ".concat("dark"===e.palette.mode?W[900]:"#FFF",";\n  border-radius: 8px;\n  border: 1px solid ").concat("dark"===e.palette.mode?W[700]:W[200],";\n  box-shadow: ").concat("dark"===e.palette.mode?"0 2px 8px rgb(0 0 0 / 0.5)":"0 2px 8px ".concat(W[200]),";\n  padding: 0.75rem;\n  color: ").concat("dark"===e.palette.mode?W[50]:W[900],";\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n\n  & .snackbar-title {\n    margin-right: 0.5rem;\n  }\n\n  & .snackbar-close-icon {\n    cursor: pointer;\n    font-size: 10px;\n    width: 1.25rem;\n    height: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  ")}),K={entering:"translateX(0)",entered:"translateX(0)",exiting:"translateX(500px)",exited:"translateX(500px)",unmounted:"translateX(500px)"},Y={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},J={200:"#99CCF3",300:"#66B2FF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0059B2",800:"#004C99",900:"#003A75"},Q=(0,I.default)("button")(function(n){var e=n.theme;return"\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  background: ".concat("dark"===e.palette.mode?Y[900]:"#fff",";\n  border: 1px solid ").concat("dark"===e.palette.mode?Y[700]:Y[200],";\n  color: ").concat("dark"===e.palette.mode?Y[200]:Y[900],";\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n\n  &:hover {\n    background: ").concat("dark"===e.palette.mode?Y[800]:Y[50],";\n    border-color: ").concat("dark"===e.palette.mode?Y[600]:Y[300],";\n  }\n\n  &:active {\n    background: ").concat("dark"===e.palette.mode?Y[700]:Y[100],";\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ").concat("dark"===e.palette.mode?J[300]:J[200],";\n    outline: none;\n  }\n  ")}),nn=(0,I.default)(L.A)(c||(c=(0,Z.Z)(["\n  position: fixed;\n  z-index: 5500;\n  display: flex;\n  bottom: 16px;\n  right: 16px;\n  max-width: 560px;\n  min-width: 300px;\n"]))),ne=(0,I.default)("div")(function(n){var e=n.theme;return"\n  display: flex;\n  gap: 8px;\n  overflow: hidden;\n  background-color: ".concat("dark"===e.palette.mode?Y[900]:"#FFF",";\n  border-radius: 8px;\n  border: 1px solid ").concat("dark"===e.palette.mode?Y[700]:Y[200],";\n  box-shadow: ").concat("dark"===e.palette.mode?"0 2px 16px rgba(0,0,0, 0.5)":"0 2px 16px ".concat(Y[200]),";\n  padding: 0.75rem;\n  color: ").concat("dark"===e.palette.mode?Y[50]:Y[900],";\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 500;\n  text-align: start;\n  position: relative;\n\n  & .snackbar-message {\n    flex: 1 1 0%;\n    max-width: 100%;\n  }\n\n  & .snackbar-title {\n    margin: 0;\n    line-height: 1.5rem;\n    margin-right: 0.5rem;\n  }\n\n  & .snackbar-description {\n    margin: 0;\n    line-height: 1.5rem;\n    font-weight: 400;\n    color: ").concat("dark"===e.palette.mode?Y[400]:Y[800],";\n  }\n\n  & .snackbar-close-icon {\n    cursor: pointer;\n    flex-shrink: 0;\n    padding: 2px;\n    border-radius: 4px;\n\n    &:hover {\n      background: ").concat("dark"===e.palette.mode?Y[800]:Y[50],";\n    }\n  }\n  ")}),nt={entering:"translateX(0)",entered:"translateX(0)",exiting:"translateX(500px)",exited:"translateX(500px)",unmounted:"translateX(500px)"},no={50:"#F0F7FF",100:"#C2E0FF",200:"#99CCF3",300:"#66B2FF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0059B2",800:"#004C99",900:"#003A75"},na={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},nr=(0,$.keyframes)(l||(l=(0,Z.Z)(["\n  from {\n    transform: translateX(100%);\n  }\n\n  to {\n    transform: translateX(0);\n  }\n"]))),ns=(0,I.default)("button")(function(n){var e=n.theme;return"\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  background: ".concat("dark"===e.palette.mode?na[900]:"#fff",";\n  border: 1px solid ").concat("dark"===e.palette.mode?na[700]:na[200],";\n  color: ").concat("dark"===e.palette.mode?na[200]:na[900],";\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n\n  &:hover {\n    background: ").concat("dark"===e.palette.mode?na[800]:na[50],";\n    border-color: ").concat("dark"===e.palette.mode?na[600]:na[300],";\n  }\n\n  &:active {\n    background: ").concat("dark"===e.palette.mode?na[700]:na[100],";\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ").concat("dark"===e.palette.mode?no[300]:no[200],";\n    outline: none;\n  }\n  ")}),ni=(0,I.default)("div")(function(n){var e=n.theme;return(0,$.css)(d||(d=(0,Z.Z)(["\n    position: fixed;\n    z-index: 5500;\n    display: flex;\n    right: 16px;\n    bottom: 16px;\n    left: auto;\n    justify-content: start;\n    max-width: 560px;\n    min-width: 300px;\n    background-color: ",";\n    border-radius: 8px;\n    border: 1px solid ",";\n    box-shadow: ",";\n    padding: 0.75rem;\n    color: ",";\n    font-family: 'IBM Plex Sans', sans-serif;\n    font-weight: 500;\n    animation: "," 200ms;\n    transition: transform 0.2s ease-out;\n  "])),"dark"===e.palette.mode?na[900]:"#FFF","dark"===e.palette.mode?na[700]:na[200],"dark"===e.palette.mode?"0 4px 8px rgb(0 0 0 / 0.7)":"0 4px 8px rgb(0 0 0 / 0.1)","dark"===e.palette.mode?no[200]:no[700],nr)}),nc=t(721923),nl={entering:"translateX(0)",entered:"translateX(0)",exiting:"translateX(500px)",exited:"translateX(500px)",unmounted:"translateX(500px)"},nd={entering:"translateX(0)",entered:"translateX(0)",exiting:"translateX(500px)",exited:"translateX(500px)",unmounted:"translateX(500px)"},nu={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},np={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function nm(){var n="dark"===(0,nc.Z)().palette.mode;return(0,O.jsx)("style",{children:"\n    @keyframes in-right {\n      from {\n        transform: translateX(100%);\n      }\n\n      to {\n        transform: translateX(0);\n      }\n    }\n\n    .TriggerButton {\n      font-family: IBM Plex Sans, sans-serif;\n      font-weight: 600;\n      font-size: 0.875rem;\n      line-height: 1.5;\n      padding: 8px 16px;\n      border-radius: 8px;\n      color: white;\n      transition: all 150ms ease;\n      cursor: pointer;\n      background: ".concat(n?np[900]:"#fff",";\n      border: 1px solid ").concat(n?np[700]:np[200],";\n      color: ").concat(n?np[200]:np[900],";\n      box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n    \n      &:hover {\n        background: ").concat(n?np[800]:np[50],";\n        border-color: ").concat(n?np[600]:np[300],";\n      }\n    \n      &:active {\n        background: ").concat(n?np[700]:np[100],";\n      }\n    \n      &:focus-visible {\n        box-shadow: 0 0 0 4px ").concat(n?nu[300]:nu[200],";\n        outline: none;\n      }\n    }\n\n    .CustomSnackbar {\n      position: fixed;\n      z-index: 5500;\n      display: flex;\n      right: 16px;\n      bottom: 16px;\n      left: auto;\n      justify-content: start;\n      max-width: 560px;\n      min-width: 300px;\n      background-color: ").concat(n?np[900]:"#FFF",";\n      border-radius: 8px;\n      border: 1px solid ").concat(n?np[700]:np[200],";\n      box-shadow: ").concat(n?"0 4px 8px rgb(0 0 0 / 0.7)":"0 4px 8px rgb(0 0 0 / 0.1)",";\n      padding: 0.75rem;\n      color: ").concat(n?nu[100]:nu[700],";\n      font-family: 'IBM Plex Sans', sans-serif;\n      font-weight: 500;\n      animation: in-right 200ms;\n      transition: transform 0.2s ease-out;\n      }\n    ")})}var nf={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},nh={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},ng={entering:"translateX(0)",entered:"translateX(0)",exiting:"translateX(500px)",exited:"translateX(500px)",unmounted:"translateX(500px)"};function nb(){var n="dark"===(0,nc.Z)().palette.mode;return(0,O.jsx)("style",{children:"\n    @keyframes in-right {\n      from {\n        transform: translateX(100%);\n      }\n\n      to {\n        transform: translateX(0);\n      }\n    }\n\n    .TriggerButtonIntroduction {\n      font-family: IBM Plex Sans, sans-serif;\n      font-weight: 600;\n      font-size: 0.875rem;\n      line-height: 1.5;\n      padding: 8px 16px;\n      border-radius: 8px;\n      color: white;\n      transition: all 150ms ease;\n      cursor: pointer;\n      background: ".concat(n?nf[900]:"#fff",";\n      border: 1px solid ").concat(n?nf[700]:nf[200],";\n      color: ").concat(n?nf[200]:nf[900],";\n      box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n    \n      &:hover {\n        background: ").concat(n?nf[800]:nf[50],";\n        border-color: ").concat(n?nf[600]:nf[300],";\n      }\n    \n      &:active {\n        background: ").concat(n?nf[700]:nf[100],";\n      }\n    \n      &:focus-visible {\n        box-shadow: 0 0 0 4px ").concat(n?nh[300]:nh[200],";\n        outline: none;\n      }\n    }\n\n    .CustomSnackbarIntroduction {\n      position: fixed;\n      z-index: 5500;\n      display: flex;\n      bottom: 16px;\n      right: 16px;\n      max-width: 560px;\n      min-width: 300px;\n      }\n\n    .CustomSnackbarContentIntroduction {\n      display: flex;\n      gap: 8px;\n      overflow: hidden;\n      background-color: ").concat(n?nf[900]:"#FFF",";\n      border-radius: 8px;\n      border: 1px solid ").concat(n?nf[700]:nf[200],";\n      box-shadow: ").concat(n?"0 2px 16px rgba(0,0,0, 0.5)":"0 2px 16px ".concat(nf[200]),";\n      padding: 0.75rem;\n      color: ").concat(n?nf[50]:nf[900],";\n      font-family: IBM Plex Sans, sans-serif;\n      font-weight: 500;\n      text-align: start;\n      position: relative;\n\n      & .snackbar-message {\n        flex: 1 1 0%;\n        max-width: 100%;\n      }\n\n      & .snackbar-title {\n        margin: 0;\n        line-height: 1.5rem;\n        margin-right: 0.5rem;\n      }\n\n      & .snackbar-description {\n        margin: 0;\n        line-height: 1.5rem;\n        font-weight: 400;\n        color: ").concat(n?nf[400]:nf[800],";\n      }\n\n      & .snackbar-close-icon {\n        cursor: pointer;\n        flex-shrink: 0;\n        padding: 2px;\n        border-radius: 4px;\n\n        &:hover {\n          background: ").concat(n?nf[800]:nf[50],";\n        }\n      }\n    }\n    ")})}var nx={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},nk={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function ny(){var n="dark"===(0,nc.Z)().palette.mode;return(0,O.jsx)("style",{children:"\n    @keyframes in-right {\n      from {\n        transform: translateX(100%);\n      }\n\n      to {\n        transform: translateX(0);\n      }\n    }\n\n    .TriggerButton {\n      font-family: IBM Plex Sans, sans-serif;\n      font-weight: 600;\n      font-size: 0.875rem;\n      line-height: 1.5;\n      padding: 8px 16px;\n      border-radius: 8px;\n      color: white;\n      transition: all 150ms ease;\n      cursor: pointer;\n      background: ".concat(n?nk[900]:"#fff",";\n      border: 1px solid ").concat(n?nk[700]:nk[200],";\n      color: ").concat(n?nk[200]:nk[900],";\n      box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n    \n      &:hover {\n        background: ").concat(n?nk[800]:nk[50],";\n        border-color: ").concat(n?nk[600]:nk[300],";\n      }\n    \n      &:active {\n        background: ").concat(n?nk[700]:nk[100],";\n      }\n    \n      &:focus-visible {\n        box-shadow: 0 0 0 4px ").concat(n?nx[300]:nx[200],";\n        outline: none;\n      }\n    }\n\n    .CustomSnackbar {\n      position: fixed;\n      z-index: 5500;\n      display: flex;\n      right: 16px;\n      bottom: 16px;\n      left: auto;\n      justify-content: start;\n      max-width: 560px;\n      min-width: 300px;\n      background-color: ").concat(n?nk[900]:"#FFF",";\n      border-radius: 8px;\n      border: 1px solid ").concat(n?nk[700]:nk[200],";\n      box-shadow: ").concat(n?"0 4px 8px rgb(0 0 0 / 0.7)":"0 4px 8px rgb(0 0 0 / 0.1)",";\n      padding: 0.75rem;\n      color: ").concat(n?nx[100]:nx[700],";\n      font-family: 'IBM Plex Sans', sans-serif;\n      font-weight: 500;\n      animation: in-right 200ms;\n      transition: transform 0.2s ease-out;\n      }\n    ")})}var nC={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},nv={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},nw={entering:"translateX(0)",entered:"translateX(0)",exiting:"translateX(500px)",exited:"translateX(500px)",unmounted:"translateX(500px)"};function nS(){var n="dark"===(0,nc.Z)().palette.mode;return(0,O.jsx)("style",{children:"\n    @keyframes in-right {\n      from {\n        transform: translateX(100%);\n      }\n\n      to {\n        transform: translateX(0);\n      }\n    }\n\n    .TriggerButtonIntroduction {\n      font-family: IBM Plex Sans, sans-serif;\n      font-weight: 600;\n      font-size: 0.875rem;\n      line-height: 1.5;\n      padding: 8px 16px;\n      border-radius: 8px;\n      color: white;\n      transition: all 150ms ease;\n      cursor: pointer;\n      background: ".concat(n?nC[900]:"#fff",";\n      border: 1px solid ").concat(n?nC[700]:nC[200],";\n      color: ").concat(n?nC[200]:nC[900],";\n      box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n    \n      &:hover {\n        background: ").concat(n?nC[800]:nC[50],";\n        border-color: ").concat(n?nC[600]:nC[300],";\n      }\n    \n      &:active {\n        background: ").concat(n?nC[700]:nC[100],";\n      }\n    \n      &:focus-visible {\n        box-shadow: 0 0 0 4px ").concat(n?nv[300]:nv[200],";\n        outline: none;\n      }\n    }\n\n    .CustomSnackbarIntroduction {\n      position: fixed;\n      z-index: 5500;\n      display: flex;\n      bottom: 16px;\n      right: 16px;\n      max-width: 560px;\n      min-width: 300px;\n      }\n\n    .CustomSnackbarContentIntroduction {\n      display: flex;\n      gap: 8px;\n      overflow: hidden;\n      background-color: ").concat(n?nC[900]:"#FFF",";\n      border-radius: 8px;\n      border: 1px solid ").concat(n?nC[700]:nC[200],";\n      box-shadow: ").concat(n?"0 2px 16px rgba(0,0,0, 0.5)":"0 2px 16px ".concat(nC[200]),";\n      padding: 0.75rem;\n      color: ").concat(n?nC[50]:nC[900],";\n      font-family: IBM Plex Sans, sans-serif;\n      font-weight: 500;\n      text-align: start;\n      position: relative;\n\n      & .snackbar-message {\n        flex: 1 1 0%;\n        max-width: 100%;\n      }\n\n      & .snackbar-title {\n        margin: 0;\n        line-height: 1.5rem;\n        margin-right: 0.5rem;\n      }\n\n      & .snackbar-description {\n        margin: 0;\n        line-height: 1.5rem;\n        font-weight: 400;\n        color: ").concat(n?nC[400]:nC[800],";\n      }\n\n      & .snackbar-close-icon {\n        cursor: pointer;\n        flex-shrink: 0;\n        padding: 2px;\n        border-radius: 4px;\n\n        &:hover {\n          background: ").concat(n?nC[800]:nC[50],";\n        }\n      }\n    }\n    ")})}var nF=t(747892),nD=t(510185),nB={en:{description:"The Snackbar component informs users that an action has been or will be performed by the app.",location:"/brickmmo-docs-v2/data/base/components/snackbar/snackbar.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<h1>Snackbar</h1><p class="description">The Snackbar component informs users that an action has been or will be performed by the app.</p>\n\n',{component:"modules/components/ComponentLinkHeader.js",design:!1},{component:"modules/components/ComponentPageTabs.js"},'<h2 id="introduction">Introduction<a aria-labelledby="introduction" class="anchor-link" href="#introduction" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="introduction"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>A snackbar provides users with a brief, temporary message about app processes without interrupting their activity or experience.</p>\n<p>The Snackbar component is built to appear on-screen to inform users about an action that the app is taking.</p>\n',{demo:"UnstyledSnackbarIntroduction",defaultCodeOpen:!1,bg:"gradient"},'<h2 id="component">Component<a aria-labelledby="component" class="anchor-link" href="#component" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="component"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Snackbar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/base/Snackbar\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Snackbar doesn&#39;t impose any restrictions on its implementation—it&#39;s up to you to design it so that it doesn&#39;t interrupt the user experience, and disappears after a set amount of time without requiring the user to take action.</p>\n<p>Use the <code>autoHideDuration</code> prop to set the time (in milliseconds) that the snackbar remains on the screen.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>You may want to implement Snackbar with <a href="/base-ui/react-click-away-listener/">Click-Away Listener</a>, so that the user can choose to dismiss the Snackbar before its time is up by clicking anywhere outside of it.\nBut this behavior is optional.</p>\n\n</div></aside><p>The following demo illustrates the basic usage of Snackbar.\nClick <strong>Open snackbar</strong> to see how it behaves:</p>\n',{demo:"UnstyledSnackbar",defaultCodeOpen:!1},'<h3 id="anatomy">Anatomy<a aria-labelledby="anatomy" class="anchor-link" href="#anatomy" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="anatomy"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The Snackbar component is composed of a single root <code>&lt;div&gt;</code> slot with no interior slots:</p>\n<div class="MuiCode-root"><pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>presentation<span class="token punctuation">"</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BaseSnackbar-root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>snackbar content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="custom-structure">Custom structure<a aria-labelledby="custom-structure" class="anchor-link" href="#custom-structure" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="custom-structure"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Use the <code>slots.root</code> prop to override the root slot with a custom element:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Snackbar</span></span> <span class="token attr-name">slots</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token string">\'span\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The <code>slots</code> prop is available on all non-utility Base components.\nSee <a href="/base-ui/guides/overriding-component-structure/">Overriding component structure</a> for full details.</p>\n\n</div></aside><h3 id="usage-with-typescript">Usage with TypeScript<a aria-labelledby="usage-with-typescript" class="anchor-link" href="#usage-with-typescript" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="usage-with-typescript"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>In TypeScript, you can specify the custom component type used in the <code>slots.root</code> as a generic to the unstyled component.\nThis way, you can safely provide the custom component&#39;s props directly on the component:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token operator">&lt;</span>Snackbar<span class="token operator">&lt;</span><span class="token keyword">typeof</span> CustomComponent<span class="token operator">></span> slots<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> root<span class="token operator">:</span> CustomComponent <span class="token punctuation">}</span><span class="token punctuation">}</span> customProp <span class="token operator">/</span><span class="token operator">></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The same applies for props specific to custom primitive elements:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token operator">&lt;</span>Snackbar<span class="token operator">&lt;</span><span class="token string">\'button\'</span><span class="token operator">></span> slots<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> root<span class="token operator">:</span> <span class="token string">\'button\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="hook">Hook<a aria-labelledby="hook" class="anchor-link" href="#hook" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="hook"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> useSnackbar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/base/useSnackbar\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The <code>useSnackbar</code> hook lets you apply the functionality of a Snackbar to a fully custom component.</p>\n<p>It returns props to be placed on the custom component, along with fields representing the component&#39;s internal state.</p>\n<p>Hooks <em>do not</em> support <a href="#custom-structure">slot props</a>, but they do support <a href="#customization">customization props</a>.</p>\n<p>If you use a <a href="/base-ui/react-click-away-listener/">Click-Away Listener</a> to let the user close the Snackbar by clicking outside of it, make sure to pass the <code>onClickAway</code> handler returned by this hook to the Click-Away Listener.</p>\n<p>Pass the <code>open</code> state to the hook and use it to show and hide the Snackbar.</p>\n<p>The demo below shows how to build a fully custom component with the <code>useSnackbar</code> hook that also incorporates the Click-Away Listener component:</p>\n',{demo:"UseSnackbar.js",defaultCodeOpen:!1},'<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Hooks give you the most room for customization, but require more work to implement.\nWith hooks, you can take full control over how your component is rendered, and define all the custom props and CSS classes you need.</p>\n<p>You may not need to use hooks unless you find that you&#39;re limited by the customization options of their component counterparts—for instance, if your component requires significantly different <a href="#anatomy">structure</a>.</p>\n\n</div></aside><h2 id="customization">Customization<a aria-labelledby="customization" class="anchor-link" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="customization"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The following features can be used with both components and hooks.\nFor the sake of simplicity, demos and code snippets primarily feature components.</p>\n\n</div></aside><h3 id="transitions">Transitions<a aria-labelledby="transitions" class="anchor-link" href="#transitions" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="transitions"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>You can animate the open and close states of the Snackbar with a render prop child and a transition component, as long as the component meets these conditions:</p>\n<ul>\n<li>Is a direct child descendant of the snackbar</li>\n<li>Has an <code>in</code> prop—this corresponds to the open state</li>\n<li>Passes the <code>exited</code> prop to Snackbar</li>\n<li>Calls the <code>onEnter</code> callback prop when the enter transition starts—sets <code>exited</code> to false</li>\n<li>Calls the <code>onExited</code> callback prop when the exit transition is completed—sets <code>exited</code> to true</li>\n</ul>\n<p>These two callbacks allow the Snackbar to unmount the child content when closed and keep it fully transitioned.\nThis is only applicable if you are using transition components using <a href="https://github.com/reactjs/react-transition-group">react-transition-group</a> library internally.</p>\n<p>The demo below shows how to create a Snackbar with custom transitions:</p>\n',{demo:"TransitionComponentSnackbar.js",defaultCodeOpen:!1},'<h2 id="api">API<a aria-labelledby="api" class="anchor-link" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>See the documentation below for a complete reference to all of the props and classes available to the components mentioned here.</p>\n<ul>\n<li><a href="/base-ui/react-snackbar/components-api/#snackbar"><code>&lt;Snackbar /&gt;</code></a></li>\n<li><a href="/base-ui/api/use-snackbar/"><code>useSnackbar</code></a></li>\n</ul>\n'],toc:[{text:"Introduction",level:2,hash:"introduction",children:[]},{text:"Component",level:2,hash:"component",children:[{text:"Anatomy",level:3,hash:"anatomy"},{text:"Custom structure",level:3,hash:"custom-structure"},{text:"Usage with TypeScript",level:3,hash:"usage-with-typescript"}]},{text:"Hook",level:2,hash:"hook",children:[]},{text:"Customization",level:2,hash:"customization",children:[{text:"Transitions",level:3,hash:"transitions"}]},{text:"API",level:2,hash:"api",children:[]}],title:"React Snackbar component and hook",headers:{productId:"base-ui",title:"React Snackbar component and hook",components:["Snackbar"],hooks:["useSnackbar"],githubLabel:"component: snackbar"}}},nE={"UseSnackbar.js":{module:"./UseSnackbar.js",raw:"import * as React from 'react';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { css, keyframes, styled } from '@mui/system';\n\nexport default function UseSnackbar() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { getRootProps, onClickAway } = useSnackbar({\n    onClose: handleClose,\n    open,\n    autoHideDuration: 5000,\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <React.Fragment>\n      <TriggerButton type=\"button\" onClick={handleOpen}>\n        Open snackbar\n      </TriggerButton>\n      {open ? (\n        <ClickAwayListener onClickAway={onClickAway}>\n          <CustomSnackbar {...getRootProps()}>Hello World</CustomSnackbar>\n        </ClickAwayListener>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nconst blue = {\n  200: '#99CCF3',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst snackbarInRight = keyframes`\n  from {\n    transform: translateX(100%);\n  }\n\n  to {\n    transform: translateX(0);\n  }\n`;\n\nconst TriggerButton = styled('button')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[200] : grey[900]};\n  box-shadow: 0 1px 2px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.15)'\n  };\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? grey[800] : grey[50]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[300]};\n  }\n\n  &:active {\n    background: ${theme.palette.mode === 'dark' ? grey[700] : grey[100]};\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n  `,\n);\n\nconst CustomSnackbar = styled('div')(\n  ({ theme }) => css`\n    position: fixed;\n    z-index: 5500;\n    display: flex;\n    right: 16px;\n    bottom: 16px;\n    left: auto;\n    justify-content: space-between;\n    max-width: 560px;\n    min-width: 300px;\n    background-color: ${theme.palette.mode === 'dark' ? grey[900] : '#FFF'};\n    border-radius: 8px;\n    border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    box-shadow: ${theme.palette.mode === 'dark'\n      ? `0 2px 8px rgb(0 0 0 / 0.5)`\n      : `0 2px 8px ${grey[200]}`};\n    padding: 0.75rem;\n    color: ${theme.palette.mode === 'dark' ? grey[50] : grey[900]};\n    font-family: 'IBM Plex Sans', sans-serif;\n    font-weight: 600;\n    animation: ${snackbarInRight} 200ms;\n    transition: transform 0.2s ease-out;\n  `,\n);\n",jsxPreview:'<React.Fragment>\n  <TriggerButton type="button" onClick={handleOpen}>\n    Open snackbar\n  </TriggerButton>\n  {open ? (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <CustomSnackbar {...getRootProps()}>Hello World</CustomSnackbar>\n    </ClickAwayListener>\n  ) : null}\n</React.Fragment>',moduleTS:"./UseSnackbar.js",rawTS:"import * as React from 'react';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { css, keyframes, styled } from '@mui/system';\n\nexport default function UseSnackbar() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { getRootProps, onClickAway } = useSnackbar({\n    onClose: handleClose,\n    open,\n    autoHideDuration: 5000,\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <React.Fragment>\n      <TriggerButton type=\"button\" onClick={handleOpen}>\n        Open snackbar\n      </TriggerButton>\n      {open ? (\n        <ClickAwayListener onClickAway={onClickAway}>\n          <CustomSnackbar {...getRootProps()}>Hello World</CustomSnackbar>\n        </ClickAwayListener>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nconst blue = {\n  200: '#99CCF3',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst snackbarInRight = keyframes`\n  from {\n    transform: translateX(100%);\n  }\n\n  to {\n    transform: translateX(0);\n  }\n`;\n\nconst TriggerButton = styled('button')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[200] : grey[900]};\n  box-shadow: 0 1px 2px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.15)'\n  };\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? grey[800] : grey[50]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[300]};\n  }\n\n  &:active {\n    background: ${theme.palette.mode === 'dark' ? grey[700] : grey[100]};\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n  `,\n);\n\nconst CustomSnackbar = styled('div')(\n  ({ theme }) => css`\n    position: fixed;\n    z-index: 5500;\n    display: flex;\n    right: 16px;\n    bottom: 16px;\n    left: auto;\n    justify-content: space-between;\n    max-width: 560px;\n    min-width: 300px;\n    background-color: ${theme.palette.mode === 'dark' ? grey[900] : '#FFF'};\n    border-radius: 8px;\n    border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    box-shadow: ${theme.palette.mode === 'dark'\n      ? `0 2px 8px rgb(0 0 0 / 0.5)`\n      : `0 2px 8px ${grey[200]}`};\n    padding: 0.75rem;\n    color: ${theme.palette.mode === 'dark' ? grey[50] : grey[900]};\n    font-family: 'IBM Plex Sans', sans-serif;\n    font-weight: 600;\n    animation: ${snackbarInRight} 200ms;\n    transition: transform 0.2s ease-out;\n  `,\n);\n"},"TransitionComponentSnackbar.js":{module:"./TransitionComponentSnackbar.js",raw:"import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Snackbar } from '@mui/base/Snackbar';\n\nexport default function TransitionComponentSnackbar() {\n  const [open, setOpen] = React.useState(false);\n  const [exited, setExited] = React.useState(true);\n  const nodeRef = React.useRef(null);\n\n  const handleClose = (_, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleOnEnter = () => {\n    setExited(false);\n  };\n\n  const handleOnExited = () => {\n    setExited(true);\n  };\n\n  return (\n    <React.Fragment>\n      <TriggerButton type=\"button\" onClick={handleClick}>\n        Open snackbar\n      </TriggerButton>\n      <StyledSnackbar\n        autoHideDuration={5000}\n        open={open}\n        onClose={handleClose}\n        exited={exited}\n      >\n        <Transition\n          timeout={{ enter: 400, exit: 400 }}\n          in={open}\n          appear\n          unmountOnExit\n          onEnter={handleOnEnter}\n          onExited={handleOnExited}\n          nodeRef={nodeRef}\n        >\n          {(status) => (\n            <SnackbarContent\n              style={{\n                transform: positioningStyles[status],\n                transition: 'transform 300ms ease',\n              }}\n              ref={nodeRef}\n            >\n              <div className=\"snackbar-title\">Hello World</div>\n              <CloseIcon onClick={handleClose} className=\"snackbar-close-icon\" />\n            </SnackbarContent>\n          )}\n        </Transition>\n      </StyledSnackbar>\n    </React.Fragment>\n  );\n}\n\nconst blue = {\n  200: '#99CCF3',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst TriggerButton = styled('button')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[200] : grey[900]};\n  box-shadow: 0 1px 2px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.15)'\n  };\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? grey[800] : grey[50]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[300]};\n  }\n  &:active {\n    background: ${theme.palette.mode === 'dark' ? grey[700] : grey[100]};\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n  `,\n);\n\nconst StyledSnackbar = styled(Snackbar)`\n  position: fixed;\n  z-index: 5500;\n  display: flex;\n  bottom: 16px;\n  right: 16px;\n`;\n\nconst SnackbarContent = styled('div')(\n  ({ theme }) => `\n  position: relative;\n  overflow: hidden;\n  z-index: 5500;\n  display: flex;\n  left: auto;\n  justify-content: space-between;\n  max-width: 560px;\n  min-width: 300px;\n  background-color: ${theme.palette.mode === 'dark' ? grey[900] : '#FFF'};\n  border-radius: 8px;\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: ${\n    theme.palette.mode === 'dark'\n      ? `0 2px 8px rgb(0 0 0 / 0.5)`\n      : `0 2px 8px ${grey[200]}`\n  };\n  padding: 0.75rem;\n  color: ${theme.palette.mode === 'dark' ? grey[50] : grey[900]};\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n\n  & .snackbar-title {\n    margin-right: 0.5rem;\n  }\n\n  & .snackbar-close-icon {\n    cursor: pointer;\n    font-size: 10px;\n    width: 1.25rem;\n    height: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  `,\n);\n\nconst positioningStyles = {\n  entering: 'translateX(0)',\n  entered: 'translateX(0)',\n  exiting: 'translateX(500px)',\n  exited: 'translateX(500px)',\n  unmounted: 'translateX(500px)',\n};\n",moduleTS:"./TransitionComponentSnackbar.js",rawTS:"import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Snackbar } from '@mui/base/Snackbar';\nimport { SnackbarCloseReason } from '@mui/base/useSnackbar';\n\nexport default function TransitionComponentSnackbar() {\n  const [open, setOpen] = React.useState(false);\n  const [exited, setExited] = React.useState(true);\n  const nodeRef = React.useRef(null);\n\n  const handleClose = (_: any, reason: SnackbarCloseReason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleOnEnter = () => {\n    setExited(false);\n  };\n\n  const handleOnExited = () => {\n    setExited(true);\n  };\n\n  return (\n    <React.Fragment>\n      <TriggerButton type=\"button\" onClick={handleClick}>\n        Open snackbar\n      </TriggerButton>\n      <StyledSnackbar\n        autoHideDuration={5000}\n        open={open}\n        onClose={handleClose}\n        exited={exited}\n      >\n        <Transition\n          timeout={{ enter: 400, exit: 400 }}\n          in={open}\n          appear\n          unmountOnExit\n          onEnter={handleOnEnter}\n          onExited={handleOnExited}\n          nodeRef={nodeRef}\n        >\n          {(status) => (\n            <SnackbarContent\n              style={{\n                transform: positioningStyles[status],\n                transition: 'transform 300ms ease',\n              }}\n              ref={nodeRef}\n            >\n              <div className=\"snackbar-title\">Hello World</div>\n              <CloseIcon onClick={handleClose} className=\"snackbar-close-icon\" />\n            </SnackbarContent>\n          )}\n        </Transition>\n      </StyledSnackbar>\n    </React.Fragment>\n  );\n}\n\nconst blue = {\n  200: '#99CCF3',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst TriggerButton = styled('button')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[200] : grey[900]};\n  box-shadow: 0 1px 2px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.15)'\n  };\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? grey[800] : grey[50]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[300]};\n  }\n  &:active {\n    background: ${theme.palette.mode === 'dark' ? grey[700] : grey[100]};\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n  `,\n);\n\nconst StyledSnackbar = styled(Snackbar)`\n  position: fixed;\n  z-index: 5500;\n  display: flex;\n  bottom: 16px;\n  right: 16px;\n`;\n\nconst SnackbarContent = styled('div')(\n  ({ theme }) => `\n  position: relative;\n  overflow: hidden;\n  z-index: 5500;\n  display: flex;\n  left: auto;\n  justify-content: space-between;\n  max-width: 560px;\n  min-width: 300px;\n  background-color: ${theme.palette.mode === 'dark' ? grey[900] : '#FFF'};\n  border-radius: 8px;\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: ${\n    theme.palette.mode === 'dark'\n      ? `0 2px 8px rgb(0 0 0 / 0.5)`\n      : `0 2px 8px ${grey[200]}`\n  };\n  padding: 0.75rem;\n  color: ${theme.palette.mode === 'dark' ? grey[50] : grey[900]};\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n\n  & .snackbar-title {\n    margin-right: 0.5rem;\n  }\n\n  & .snackbar-close-icon {\n    cursor: pointer;\n    font-size: 10px;\n    width: 1.25rem;\n    height: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  `,\n);\n\nconst positioningStyles = {\n  entering: 'translateX(0)',\n  entered: 'translateX(0)',\n  exiting: 'translateX(500px)',\n  exited: 'translateX(500px)',\n  unmounted: 'translateX(500px)',\n};\n"},UnstyledSnackbarIntroduction:{module:"./UnstyledSnackbarIntroduction/system/index.js",raw:"import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { styled } from '@mui/system';\nimport CheckRoundedIcon from '@mui/icons-material/CheckRounded';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Snackbar } from '@mui/base/Snackbar';\n\nexport default function UnstyledSnackbarIntroduction() {\n  const [open, setOpen] = React.useState(false);\n  const [exited, setExited] = React.useState(true);\n  const nodeRef = React.useRef(null);\n\n  const handleClose = (_, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleOnEnter = () => {\n    setExited(false);\n  };\n\n  const handleOnExited = () => {\n    setExited(true);\n  };\n\n  return (\n    <React.Fragment>\n      <TriggerButton type=\"button\" onClick={handleClick}>\n        Open snackbar\n      </TriggerButton>\n      <StyledSnackbar\n        autoHideDuration={5000}\n        open={open}\n        onClose={handleClose}\n        exited={exited}\n      >\n        <Transition\n          timeout={{ enter: 400, exit: 400 }}\n          in={open}\n          appear\n          unmountOnExit\n          onEnter={handleOnEnter}\n          onExited={handleOnExited}\n          nodeRef={nodeRef}\n        >\n          {(status) => (\n            <SnackbarContent\n              style={{\n                transform: positioningStyles[status],\n                transition: 'transform 300ms ease',\n              }}\n              ref={nodeRef}\n            >\n              <CheckRoundedIcon\n                sx={{\n                  color: 'success.main',\n                  flexShrink: 0,\n                  width: '1.25rem',\n                  height: '1.5rem',\n                }}\n              />\n              <div className=\"snackbar-message\">\n                <p className=\"snackbar-title\">Notifications sent</p>\n                <p className=\"snackbar-description\">\n                  Everything was sent to the desired address.\n                </p>\n              </div>\n              <CloseIcon onClick={handleClose} className=\"snackbar-close-icon\" />\n            </SnackbarContent>\n          )}\n        </Transition>\n      </StyledSnackbar>\n    </React.Fragment>\n  );\n}\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst blue = {\n  200: '#99CCF3',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n  800: '#004C99',\n  900: '#003A75',\n};\n\nconst TriggerButton = styled('button')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[200] : grey[900]};\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? grey[800] : grey[50]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[300]};\n  }\n\n  &:active {\n    background: ${theme.palette.mode === 'dark' ? grey[700] : grey[100]};\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n  `,\n);\n\nconst StyledSnackbar = styled(Snackbar)`\n  position: fixed;\n  z-index: 5500;\n  display: flex;\n  bottom: 16px;\n  right: 16px;\n  max-width: 560px;\n  min-width: 300px;\n`;\n\nconst SnackbarContent = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  gap: 8px;\n  overflow: hidden;\n  background-color: ${theme.palette.mode === 'dark' ? grey[900] : '#FFF'};\n  border-radius: 8px;\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: ${\n    theme.palette.mode === 'dark'\n      ? `0 2px 16px rgba(0,0,0, 0.5)`\n      : `0 2px 16px ${grey[200]}`\n  };\n  padding: 0.75rem;\n  color: ${theme.palette.mode === 'dark' ? grey[50] : grey[900]};\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 500;\n  text-align: start;\n  position: relative;\n\n  & .snackbar-message {\n    flex: 1 1 0%;\n    max-width: 100%;\n  }\n\n  & .snackbar-title {\n    margin: 0;\n    line-height: 1.5rem;\n    margin-right: 0.5rem;\n  }\n\n  & .snackbar-description {\n    margin: 0;\n    line-height: 1.5rem;\n    font-weight: 400;\n    color: ${theme.palette.mode === 'dark' ? grey[400] : grey[800]};\n  }\n\n  & .snackbar-close-icon {\n    cursor: pointer;\n    flex-shrink: 0;\n    padding: 2px;\n    border-radius: 4px;\n\n    &:hover {\n      background: ${theme.palette.mode === 'dark' ? grey[800] : grey[50]};\n    }\n  }\n  `,\n);\n\nconst positioningStyles = {\n  entering: 'translateX(0)',\n  entered: 'translateX(0)',\n  exiting: 'translateX(500px)',\n  exited: 'translateX(500px)',\n  unmounted: 'translateX(500px)',\n};\n",moduleTailwind:"./UnstyledSnackbarIntroduction/tailwind/index.js",rawTailwind:"import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { useTheme } from '@mui/system';\nimport CheckRoundedIcon from '@mui/icons-material/CheckRounded';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Snackbar } from '@mui/base/Snackbar';\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nexport default function UnstyledSnackbarIntroduction() {\n  const isDarkMode = useIsDarkMode();\n\n  const [open, setOpen] = React.useState(false);\n  const [exited, setExited] = React.useState(true);\n  const nodeRef = React.useRef(null);\n\n  const handleClose = (_, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleOnEnter = () => {\n    setExited(false);\n  };\n\n  const handleOnExited = () => {\n    setExited(true);\n  };\n\n  return (\n    <div className={`${isDarkMode ? 'dark' : ''}`}>\n      <button\n        className=\"cursor-pointer text-sm font-sans box-border rounded-lg font-semibold px-4 py-2 bg-white dark:bg-slate-900 border border-solid border-slate-200 dark:border-slate-700 text-slate-900 dark:text-slate-200 hover:bg-slate-50 hover:dark:bg-slate-800 hover:border-slate-300 dark:hover:border-slate-600 focus-visible:shadow-[0_0_0_4px_#ddd6fe] dark:focus-visible:shadow-[0_0_0_4px_#a78bfa] focus-visible:outline-none shadow-sm\"\n        type=\"button\"\n        onClick={handleClick}\n      >\n        Open snackbar\n      </button>\n      <Snackbar\n        autoHideDuration={5000}\n        open={open}\n        onClose={handleClose}\n        exited={exited}\n        className=\"fixed z-50 font-sans flex right-4 bottom-4 left-auto max-w-xl	min-w-xs\"\n      >\n        <Transition\n          timeout={{ enter: 400, exit: 400 }}\n          in={open}\n          appear\n          unmountOnExit\n          onEnter={handleOnEnter}\n          onExited={handleOnExited}\n          nodeRef={nodeRef}\n        >\n          {(status) => (\n            <div\n              className=\"flex gap-4	overflow-hidden	bg-white dark:bg-slate-900 rounded-lg	border border-solid border-slate-200 dark:border-slate-700 shadow-md text-slate-900 dark:text-slate-50 p-3	text-start\"\n              style={{\n                transform: positioningStyles[status],\n                transition: 'transform 300ms ease',\n              }}\n              ref={nodeRef}\n            >\n              <CheckRoundedIcon\n                sx={{\n                  color: 'success.main',\n                  flexShrink: 0,\n                  width: '1.25rem',\n                  height: '1.5rem',\n                }}\n              />\n              <div className=\"flex-1	max-w-full\">\n                <p className=\"m-0 leading-normal mr-2 font-medium\">\n                  Notifications sent\n                </p>\n                <p className=\"m-0 leading-normal font-normal	text-slate-800 dark:text-slate-400\">\n                  Everything was sent to the desired address.\n                </p>\n              </div>\n              <CloseIcon\n                onClick={handleClose}\n                className=\"cursor-pointer	shrink-0	p-0.5	rounded hover:bg-slate-50 hover:dark:bg-slate-800\"\n              />\n            </div>\n          )}\n        </Transition>\n      </Snackbar>\n    </div>\n  );\n}\n\nconst positioningStyles = {\n  entering: 'translateX(0)',\n  entered: 'translateX(0)',\n  exiting: 'translateX(500px)',\n  exited: 'translateX(500px)',\n  unmounted: 'translateX(500px)',\n};\n",moduleTSTailwind:"./UnstyledSnackbarIntroduction/tailwind/index.tsx",rawTailwindTS:"import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { useTheme } from '@mui/system';\nimport CheckRoundedIcon from '@mui/icons-material/CheckRounded';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Snackbar } from '@mui/base/Snackbar';\nimport { SnackbarCloseReason } from '@mui/base/useSnackbar';\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nexport default function UnstyledSnackbarIntroduction() {\n  const isDarkMode = useIsDarkMode();\n\n  const [open, setOpen] = React.useState(false);\n  const [exited, setExited] = React.useState(true);\n  const nodeRef = React.useRef(null);\n\n  const handleClose = (_: any, reason: SnackbarCloseReason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleOnEnter = () => {\n    setExited(false);\n  };\n\n  const handleOnExited = () => {\n    setExited(true);\n  };\n\n  return (\n    <div className={`${isDarkMode ? 'dark' : ''}`}>\n      <button\n        className=\"cursor-pointer text-sm font-sans box-border rounded-lg font-semibold px-4 py-2 bg-white dark:bg-slate-900 border border-solid border-slate-200 dark:border-slate-700 text-slate-900 dark:text-slate-200 hover:bg-slate-50 hover:dark:bg-slate-800 hover:border-slate-300 dark:hover:border-slate-600 focus-visible:shadow-[0_0_0_4px_#ddd6fe] dark:focus-visible:shadow-[0_0_0_4px_#a78bfa] focus-visible:outline-none shadow-sm\"\n        type=\"button\"\n        onClick={handleClick}\n      >\n        Open snackbar\n      </button>\n      <Snackbar\n        autoHideDuration={5000}\n        open={open}\n        onClose={handleClose}\n        exited={exited}\n        className=\"fixed z-50 font-sans flex right-4 bottom-4 left-auto max-w-xl	min-w-xs\"\n      >\n        <Transition\n          timeout={{ enter: 400, exit: 400 }}\n          in={open}\n          appear\n          unmountOnExit\n          onEnter={handleOnEnter}\n          onExited={handleOnExited}\n          nodeRef={nodeRef}\n        >\n          {(status) => (\n            <div\n              className=\"flex gap-4	overflow-hidden	bg-white dark:bg-slate-900 rounded-lg	border border-solid border-slate-200 dark:border-slate-700 shadow-md text-slate-900 dark:text-slate-50 p-3	text-start\"\n              style={{\n                transform: positioningStyles[status],\n                transition: 'transform 300ms ease',\n              }}\n              ref={nodeRef}\n            >\n              <CheckRoundedIcon\n                sx={{\n                  color: 'success.main',\n                  flexShrink: 0,\n                  width: '1.25rem',\n                  height: '1.5rem',\n                }}\n              />\n              <div className=\"flex-1	max-w-full\">\n                <p className=\"m-0 leading-normal mr-2 font-medium\">\n                  Notifications sent\n                </p>\n                <p className=\"m-0 leading-normal font-normal	text-slate-800 dark:text-slate-400\">\n                  Everything was sent to the desired address.\n                </p>\n              </div>\n              <CloseIcon\n                onClick={handleClose}\n                className=\"cursor-pointer	shrink-0	p-0.5	rounded hover:bg-slate-50 hover:dark:bg-slate-800\"\n              />\n            </div>\n          )}\n        </Transition>\n      </Snackbar>\n    </div>\n  );\n}\n\nconst positioningStyles = {\n  entering: 'translateX(0)',\n  entered: 'translateX(0)',\n  exiting: 'translateX(500px)',\n  exited: 'translateX(500px)',\n  unmounted: 'translateX(500px)',\n};\n",moduleCSS:"./UnstyledSnackbarIntroduction/css/index.js",rawCSS:"import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { useTheme } from '@mui/system';\nimport CheckRoundedIcon from '@mui/icons-material/CheckRounded';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Snackbar } from '@mui/base/Snackbar';\n\nexport default function UnstyledSnackbarIntroduction() {\n  const [open, setOpen] = React.useState(false);\n  const [exited, setExited] = React.useState(true);\n  const nodeRef = React.useRef(null);\n\n  const handleClose = (_, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleOnEnter = () => {\n    setExited(false);\n  };\n\n  const handleOnExited = () => {\n    setExited(true);\n  };\n\n  return (\n    <React.Fragment>\n      <button\n        className=\"TriggerButtonIntroduction\"\n        type=\"button\"\n        onClick={handleClick}\n      >\n        Open snackbar\n      </button>\n      <Snackbar\n        autoHideDuration={5000}\n        open={open}\n        onClose={handleClose}\n        exited={exited}\n        className=\"CustomSnackbarIntroduction\"\n      >\n        <Transition\n          timeout={{ enter: 400, exit: 400 }}\n          in={open}\n          appear\n          unmountOnExit\n          onEnter={handleOnEnter}\n          onExited={handleOnExited}\n          nodeRef={nodeRef}\n        >\n          {(status) => (\n            <div\n              className=\"CustomSnackbarContentIntroduction\"\n              style={{\n                transform: positioningStyles[status],\n                transition: 'transform 300ms ease',\n              }}\n              ref={nodeRef}\n            >\n              <CheckRoundedIcon\n                sx={{\n                  color: 'success.main',\n                  flexShrink: 0,\n                  width: '1.25rem',\n                  height: '1.5rem',\n                }}\n              />\n              <div className=\"snackbar-message\">\n                <p className=\"snackbar-title\">Notifications sent</p>\n                <p className=\"snackbar-description\">\n                  Everything was sent to the desired address.\n                </p>\n              </div>\n              <CloseIcon onClick={handleClose} className=\"snackbar-close-icon\" />\n            </div>\n          )}\n        </Transition>\n      </Snackbar>\n      <Styles />\n    </React.Fragment>\n  );\n}\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst positioningStyles = {\n  entering: 'translateX(0)',\n  entered: 'translateX(0)',\n  exiting: 'translateX(500px)',\n  exited: 'translateX(500px)',\n  unmounted: 'translateX(500px)',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <style>{`\n    @keyframes in-right {\n      from {\n        transform: translateX(100%);\n      }\n\n      to {\n        transform: translateX(0);\n      }\n    }\n\n    .TriggerButtonIntroduction {\n      font-family: IBM Plex Sans, sans-serif;\n      font-weight: 600;\n      font-size: 0.875rem;\n      line-height: 1.5;\n      padding: 8px 16px;\n      border-radius: 8px;\n      color: white;\n      transition: all 150ms ease;\n      cursor: pointer;\n      background: ${isDarkMode ? grey[900] : '#fff'};\n      border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n      color: ${isDarkMode ? grey[200] : grey[900]};\n      box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n    \n      &:hover {\n        background: ${isDarkMode ? grey[800] : grey[50]};\n        border-color: ${isDarkMode ? grey[600] : grey[300]};\n      }\n    \n      &:active {\n        background: ${isDarkMode ? grey[700] : grey[100]};\n      }\n    \n      &:focus-visible {\n        box-shadow: 0 0 0 4px ${isDarkMode ? cyan[300] : cyan[200]};\n        outline: none;\n      }\n    }\n\n    .CustomSnackbarIntroduction {\n      position: fixed;\n      z-index: 5500;\n      display: flex;\n      bottom: 16px;\n      right: 16px;\n      max-width: 560px;\n      min-width: 300px;\n      }\n\n    .CustomSnackbarContentIntroduction {\n      display: flex;\n      gap: 8px;\n      overflow: hidden;\n      background-color: ${isDarkMode ? grey[900] : '#FFF'};\n      border-radius: 8px;\n      border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n      box-shadow: ${\n        isDarkMode ? `0 2px 16px rgba(0,0,0, 0.5)` : `0 2px 16px ${grey[200]}`\n      };\n      padding: 0.75rem;\n      color: ${isDarkMode ? grey[50] : grey[900]};\n      font-family: IBM Plex Sans, sans-serif;\n      font-weight: 500;\n      text-align: start;\n      position: relative;\n\n      & .snackbar-message {\n        flex: 1 1 0%;\n        max-width: 100%;\n      }\n\n      & .snackbar-title {\n        margin: 0;\n        line-height: 1.5rem;\n        margin-right: 0.5rem;\n      }\n\n      & .snackbar-description {\n        margin: 0;\n        line-height: 1.5rem;\n        font-weight: 400;\n        color: ${isDarkMode ? grey[400] : grey[800]};\n      }\n\n      & .snackbar-close-icon {\n        cursor: pointer;\n        flex-shrink: 0;\n        padding: 2px;\n        border-radius: 4px;\n\n        &:hover {\n          background: ${isDarkMode ? grey[800] : grey[50]};\n        }\n      }\n    }\n    `}</style>\n  );\n}\n",moduleTSCSS:"./UnstyledSnackbarIntroduction/css/index.tsx",rawCSSTS:"import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { useTheme } from '@mui/system';\nimport CheckRoundedIcon from '@mui/icons-material/CheckRounded';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Snackbar } from '@mui/base/Snackbar';\nimport { SnackbarCloseReason } from '@mui/base/useSnackbar';\n\nexport default function UnstyledSnackbarIntroduction() {\n  const [open, setOpen] = React.useState(false);\n  const [exited, setExited] = React.useState(true);\n  const nodeRef = React.useRef(null);\n\n  const handleClose = (_: any, reason: SnackbarCloseReason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleOnEnter = () => {\n    setExited(false);\n  };\n\n  const handleOnExited = () => {\n    setExited(true);\n  };\n\n  return (\n    <React.Fragment>\n      <button\n        className=\"TriggerButtonIntroduction\"\n        type=\"button\"\n        onClick={handleClick}\n      >\n        Open snackbar\n      </button>\n      <Snackbar\n        autoHideDuration={5000}\n        open={open}\n        onClose={handleClose}\n        exited={exited}\n        className=\"CustomSnackbarIntroduction\"\n      >\n        <Transition\n          timeout={{ enter: 400, exit: 400 }}\n          in={open}\n          appear\n          unmountOnExit\n          onEnter={handleOnEnter}\n          onExited={handleOnExited}\n          nodeRef={nodeRef}\n        >\n          {(status) => (\n            <div\n              className=\"CustomSnackbarContentIntroduction\"\n              style={{\n                transform: positioningStyles[status],\n                transition: 'transform 300ms ease',\n              }}\n              ref={nodeRef}\n            >\n              <CheckRoundedIcon\n                sx={{\n                  color: 'success.main',\n                  flexShrink: 0,\n                  width: '1.25rem',\n                  height: '1.5rem',\n                }}\n              />\n              <div className=\"snackbar-message\">\n                <p className=\"snackbar-title\">Notifications sent</p>\n                <p className=\"snackbar-description\">\n                  Everything was sent to the desired address.\n                </p>\n              </div>\n              <CloseIcon onClick={handleClose} className=\"snackbar-close-icon\" />\n            </div>\n          )}\n        </Transition>\n      </Snackbar>\n      <Styles />\n    </React.Fragment>\n  );\n}\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst positioningStyles = {\n  entering: 'translateX(0)',\n  entered: 'translateX(0)',\n  exiting: 'translateX(500px)',\n  exited: 'translateX(500px)',\n  unmounted: 'translateX(500px)',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <style>{`\n    @keyframes in-right {\n      from {\n        transform: translateX(100%);\n      }\n\n      to {\n        transform: translateX(0);\n      }\n    }\n\n    .TriggerButtonIntroduction {\n      font-family: IBM Plex Sans, sans-serif;\n      font-weight: 600;\n      font-size: 0.875rem;\n      line-height: 1.5;\n      padding: 8px 16px;\n      border-radius: 8px;\n      color: white;\n      transition: all 150ms ease;\n      cursor: pointer;\n      background: ${isDarkMode ? grey[900] : '#fff'};\n      border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n      color: ${isDarkMode ? grey[200] : grey[900]};\n      box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n    \n      &:hover {\n        background: ${isDarkMode ? grey[800] : grey[50]};\n        border-color: ${isDarkMode ? grey[600] : grey[300]};\n      }\n    \n      &:active {\n        background: ${isDarkMode ? grey[700] : grey[100]};\n      }\n    \n      &:focus-visible {\n        box-shadow: 0 0 0 4px ${isDarkMode ? cyan[300] : cyan[200]};\n        outline: none;\n      }\n    }\n\n    .CustomSnackbarIntroduction {\n      position: fixed;\n      z-index: 5500;\n      display: flex;\n      bottom: 16px;\n      right: 16px;\n      max-width: 560px;\n      min-width: 300px;\n      }\n\n    .CustomSnackbarContentIntroduction {\n      display: flex;\n      gap: 8px;\n      overflow: hidden;\n      background-color: ${isDarkMode ? grey[900] : '#FFF'};\n      border-radius: 8px;\n      border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n      box-shadow: ${\n        isDarkMode ? `0 2px 16px rgba(0,0,0, 0.5)` : `0 2px 16px ${grey[200]}`\n      };\n      padding: 0.75rem;\n      color: ${isDarkMode ? grey[50] : grey[900]};\n      font-family: IBM Plex Sans, sans-serif;\n      font-weight: 500;\n      text-align: start;\n      position: relative;\n\n      & .snackbar-message {\n        flex: 1 1 0%;\n        max-width: 100%;\n      }\n\n      & .snackbar-title {\n        margin: 0;\n        line-height: 1.5rem;\n        margin-right: 0.5rem;\n      }\n\n      & .snackbar-description {\n        margin: 0;\n        line-height: 1.5rem;\n        font-weight: 400;\n        color: ${isDarkMode ? grey[400] : grey[800]};\n      }\n\n      & .snackbar-close-icon {\n        cursor: pointer;\n        flex-shrink: 0;\n        padding: 2px;\n        border-radius: 4px;\n\n        &:hover {\n          background: ${isDarkMode ? grey[800] : grey[50]};\n        }\n      }\n    }\n    `}</style>\n  );\n}\n",moduleTS:"./UnstyledSnackbarIntroduction/system/index.js",rawTS:"import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { styled } from '@mui/system';\nimport CheckRoundedIcon from '@mui/icons-material/CheckRounded';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Snackbar } from '@mui/base/Snackbar';\nimport { SnackbarCloseReason } from '@mui/base/useSnackbar';\n\nexport default function UnstyledSnackbarIntroduction() {\n  const [open, setOpen] = React.useState(false);\n  const [exited, setExited] = React.useState(true);\n  const nodeRef = React.useRef(null);\n\n  const handleClose = (_: any, reason: SnackbarCloseReason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleOnEnter = () => {\n    setExited(false);\n  };\n\n  const handleOnExited = () => {\n    setExited(true);\n  };\n\n  return (\n    <React.Fragment>\n      <TriggerButton type=\"button\" onClick={handleClick}>\n        Open snackbar\n      </TriggerButton>\n      <StyledSnackbar\n        autoHideDuration={5000}\n        open={open}\n        onClose={handleClose}\n        exited={exited}\n      >\n        <Transition\n          timeout={{ enter: 400, exit: 400 }}\n          in={open}\n          appear\n          unmountOnExit\n          onEnter={handleOnEnter}\n          onExited={handleOnExited}\n          nodeRef={nodeRef}\n        >\n          {(status) => (\n            <SnackbarContent\n              style={{\n                transform: positioningStyles[status],\n                transition: 'transform 300ms ease',\n              }}\n              ref={nodeRef}\n            >\n              <CheckRoundedIcon\n                sx={{\n                  color: 'success.main',\n                  flexShrink: 0,\n                  width: '1.25rem',\n                  height: '1.5rem',\n                }}\n              />\n              <div className=\"snackbar-message\">\n                <p className=\"snackbar-title\">Notifications sent</p>\n                <p className=\"snackbar-description\">\n                  Everything was sent to the desired address.\n                </p>\n              </div>\n              <CloseIcon onClick={handleClose} className=\"snackbar-close-icon\" />\n            </SnackbarContent>\n          )}\n        </Transition>\n      </StyledSnackbar>\n    </React.Fragment>\n  );\n}\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst blue = {\n  200: '#99CCF3',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n  800: '#004C99',\n  900: '#003A75',\n};\n\nconst TriggerButton = styled('button')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[200] : grey[900]};\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? grey[800] : grey[50]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[300]};\n  }\n\n  &:active {\n    background: ${theme.palette.mode === 'dark' ? grey[700] : grey[100]};\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n  `,\n);\n\nconst StyledSnackbar = styled(Snackbar)`\n  position: fixed;\n  z-index: 5500;\n  display: flex;\n  bottom: 16px;\n  right: 16px;\n  max-width: 560px;\n  min-width: 300px;\n`;\n\nconst SnackbarContent = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  gap: 8px;\n  overflow: hidden;\n  background-color: ${theme.palette.mode === 'dark' ? grey[900] : '#FFF'};\n  border-radius: 8px;\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: ${\n    theme.palette.mode === 'dark'\n      ? `0 2px 16px rgba(0,0,0, 0.5)`\n      : `0 2px 16px ${grey[200]}`\n  };\n  padding: 0.75rem;\n  color: ${theme.palette.mode === 'dark' ? grey[50] : grey[900]};\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 500;\n  text-align: start;\n  position: relative;\n\n  & .snackbar-message {\n    flex: 1 1 0%;\n    max-width: 100%;\n  }\n\n  & .snackbar-title {\n    margin: 0;\n    line-height: 1.5rem;\n    margin-right: 0.5rem;\n  }\n\n  & .snackbar-description {\n    margin: 0;\n    line-height: 1.5rem;\n    font-weight: 400;\n    color: ${theme.palette.mode === 'dark' ? grey[400] : grey[800]};\n  }\n\n  & .snackbar-close-icon {\n    cursor: pointer;\n    flex-shrink: 0;\n    padding: 2px;\n    border-radius: 4px;\n\n    &:hover {\n      background: ${theme.palette.mode === 'dark' ? grey[800] : grey[50]};\n    }\n  }\n  `,\n);\n\nconst positioningStyles = {\n  entering: 'translateX(0)',\n  entered: 'translateX(0)',\n  exiting: 'translateX(500px)',\n  exited: 'translateX(500px)',\n  unmounted: 'translateX(500px)',\n};\n"},UnstyledSnackbar:{module:"./UnstyledSnackbar/system/index.js",raw:"import * as React from 'react';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { css, keyframes, styled } from '@mui/system';\n\nexport default function UseSnackbar() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { getRootProps, onClickAway } = useSnackbar({\n    onClose: handleClose,\n    open,\n    autoHideDuration: 5000,\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <React.Fragment>\n      <TriggerButton type=\"button\" onClick={handleOpen}>\n        Open snackbar\n      </TriggerButton>\n      {open ? (\n        <ClickAwayListener onClickAway={onClickAway}>\n          <CustomSnackbar {...getRootProps()}>Hello World</CustomSnackbar>\n        </ClickAwayListener>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nconst blue = {\n  50: '#F0F7FF',\n  100: '#C2E0FF',\n  200: '#99CCF3',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n  800: '#004C99',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst snackbarInRight = keyframes`\n  from {\n    transform: translateX(100%);\n  }\n\n  to {\n    transform: translateX(0);\n  }\n`;\n\nconst TriggerButton = styled('button')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[200] : grey[900]};\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? grey[800] : grey[50]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[300]};\n  }\n\n  &:active {\n    background: ${theme.palette.mode === 'dark' ? grey[700] : grey[100]};\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n  `,\n);\n\nconst CustomSnackbar = styled('div')(\n  ({ theme }) => css`\n    position: fixed;\n    z-index: 5500;\n    display: flex;\n    right: 16px;\n    bottom: 16px;\n    left: auto;\n    justify-content: start;\n    max-width: 560px;\n    min-width: 300px;\n    background-color: ${theme.palette.mode === 'dark' ? grey[900] : '#FFF'};\n    border-radius: 8px;\n    border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    box-shadow: ${theme.palette.mode === 'dark'\n      ? `0 4px 8px rgb(0 0 0 / 0.7)`\n      : `0 4px 8px rgb(0 0 0 / 0.1)`};\n    padding: 0.75rem;\n    color: ${theme.palette.mode === 'dark' ? blue[200] : blue[700]};\n    font-family: 'IBM Plex Sans', sans-serif;\n    font-weight: 500;\n    animation: ${snackbarInRight} 200ms;\n    transition: transform 0.2s ease-out;\n  `,\n);\n",moduleTailwind:"./UnstyledSnackbar/tailwind/index.js",rawTailwind:"import * as React from 'react';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { useTheme } from '@mui/system';\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nexport default function UseSnackbar() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { getRootProps, onClickAway } = useSnackbar({\n    onClose: handleClose,\n    open,\n    autoHideDuration: 5000,\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div className={`${isDarkMode ? 'dark' : ''}`}>\n      <button\n        className=\"cursor-pointer text-sm font-sans box-border rounded-lg font-semibold px-4 py-2 bg-white dark:bg-slate-900 border border-solid border-slate-200 dark:border-slate-700 text-slate-900 dark:text-slate-200 hover:bg-slate-50 hover:dark:bg-slate-800 hover:border-slate-300 dark:hover:border-slate-600 focus-visible:shadow-[0_0_0_4px_#ddd6fe] dark:focus-visible:shadow-[0_0_0_4px_#a78bfa] focus-visible:outline-none shadow-sm\"\n        type=\"button\"\n        onClick={handleOpen}\n      >\n        Open snackbar\n      </button>\n      {open ? (\n        <ClickAwayListener onClickAway={onClickAway}>\n          <div\n            className=\"fixed z-50 font-sans flex right-4 bottom-4 left-auto justify-start rounded-lg font-semibold bg-white dark:bg-slate-900 p-3 animation-appear transition-transform border border-solid border-slate-200 dark:border-slate-700 min-w-snackbar max-w-snackbar shadow-md text-purple-900 dark:text-purple-100\"\n            {...getRootProps()}\n          >\n            Hello World\n          </div>\n        </ClickAwayListener>\n      ) : null}\n    </div>\n  );\n}\n",moduleTSTailwind:"./UnstyledSnackbar/tailwind/index.tsx",rawTailwindTS:"import * as React from 'react';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { useTheme } from '@mui/system';\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nexport default function UseSnackbar() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { getRootProps, onClickAway } = useSnackbar({\n    onClose: handleClose,\n    open,\n    autoHideDuration: 5000,\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div className={`${isDarkMode ? 'dark' : ''}`}>\n      <button\n        className=\"cursor-pointer text-sm font-sans box-border rounded-lg font-semibold px-4 py-2 bg-white dark:bg-slate-900 border border-solid border-slate-200 dark:border-slate-700 text-slate-900 dark:text-slate-200 hover:bg-slate-50 hover:dark:bg-slate-800 hover:border-slate-300 dark:hover:border-slate-600 focus-visible:shadow-[0_0_0_4px_#ddd6fe] dark:focus-visible:shadow-[0_0_0_4px_#a78bfa] focus-visible:outline-none shadow-sm\"\n        type=\"button\"\n        onClick={handleOpen}\n      >\n        Open snackbar\n      </button>\n      {open ? (\n        <ClickAwayListener onClickAway={onClickAway}>\n          <div\n            className=\"fixed z-50 font-sans flex right-4 bottom-4 left-auto justify-start rounded-lg font-semibold bg-white dark:bg-slate-900 p-3 animation-appear transition-transform border border-solid border-slate-200 dark:border-slate-700 min-w-snackbar max-w-snackbar shadow-md text-purple-900 dark:text-purple-100\"\n            {...getRootProps()}\n          >\n            Hello World\n          </div>\n        </ClickAwayListener>\n      ) : null}\n    </div>\n  );\n}\n",moduleCSS:"./UnstyledSnackbar/css/index.js",rawCSS:"import * as React from 'react';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { useTheme } from '@mui/system';\n\nexport default function UseSnackbar() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { getRootProps, onClickAway } = useSnackbar({\n    onClose: handleClose,\n    open,\n    autoHideDuration: 5000,\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <React.Fragment>\n      <button className=\"TriggerButton\" type=\"button\" onClick={handleOpen}>\n        Open snackbar\n      </button>\n      {open ? (\n        <ClickAwayListener onClickAway={onClickAway}>\n          <div className=\"CustomSnackbar\" {...getRootProps()}>\n            Hello World\n          </div>\n        </ClickAwayListener>\n      ) : null}\n      <Styles />\n    </React.Fragment>\n  );\n}\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n  return (\n    <style>{`\n    @keyframes in-right {\n      from {\n        transform: translateX(100%);\n      }\n\n      to {\n        transform: translateX(0);\n      }\n    }\n\n    .TriggerButton {\n      font-family: IBM Plex Sans, sans-serif;\n      font-weight: 600;\n      font-size: 0.875rem;\n      line-height: 1.5;\n      padding: 8px 16px;\n      border-radius: 8px;\n      color: white;\n      transition: all 150ms ease;\n      cursor: pointer;\n      background: ${isDarkMode ? grey[900] : '#fff'};\n      border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n      color: ${isDarkMode ? grey[200] : grey[900]};\n      box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n    \n      &:hover {\n        background: ${isDarkMode ? grey[800] : grey[50]};\n        border-color: ${isDarkMode ? grey[600] : grey[300]};\n      }\n    \n      &:active {\n        background: ${isDarkMode ? grey[700] : grey[100]};\n      }\n    \n      &:focus-visible {\n        box-shadow: 0 0 0 4px ${isDarkMode ? cyan[300] : cyan[200]};\n        outline: none;\n      }\n    }\n\n    .CustomSnackbar {\n      position: fixed;\n      z-index: 5500;\n      display: flex;\n      right: 16px;\n      bottom: 16px;\n      left: auto;\n      justify-content: start;\n      max-width: 560px;\n      min-width: 300px;\n      background-color: ${isDarkMode ? grey[900] : '#FFF'};\n      border-radius: 8px;\n      border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n      box-shadow: ${\n        isDarkMode ? `0 4px 8px rgb(0 0 0 / 0.7)` : `0 4px 8px rgb(0 0 0 / 0.1)`\n      };\n      padding: 0.75rem;\n      color: ${isDarkMode ? cyan[100] : cyan[700]};\n      font-family: 'IBM Plex Sans', sans-serif;\n      font-weight: 500;\n      animation: in-right 200ms;\n      transition: transform 0.2s ease-out;\n      }\n    `}</style>\n  );\n}\n",moduleTSCSS:"./UnstyledSnackbar/css/index.tsx",rawCSSTS:"import * as React from 'react';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { useTheme } from '@mui/system';\n\nexport default function UseSnackbar() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { getRootProps, onClickAway } = useSnackbar({\n    onClose: handleClose,\n    open,\n    autoHideDuration: 5000,\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <React.Fragment>\n      <button className=\"TriggerButton\" type=\"button\" onClick={handleOpen}>\n        Open snackbar\n      </button>\n      {open ? (\n        <ClickAwayListener onClickAway={onClickAway}>\n          <div className=\"CustomSnackbar\" {...getRootProps()}>\n            Hello World\n          </div>\n        </ClickAwayListener>\n      ) : null}\n      <Styles />\n    </React.Fragment>\n  );\n}\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n  return (\n    <style>{`\n    @keyframes in-right {\n      from {\n        transform: translateX(100%);\n      }\n\n      to {\n        transform: translateX(0);\n      }\n    }\n\n    .TriggerButton {\n      font-family: IBM Plex Sans, sans-serif;\n      font-weight: 600;\n      font-size: 0.875rem;\n      line-height: 1.5;\n      padding: 8px 16px;\n      border-radius: 8px;\n      color: white;\n      transition: all 150ms ease;\n      cursor: pointer;\n      background: ${isDarkMode ? grey[900] : '#fff'};\n      border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n      color: ${isDarkMode ? grey[200] : grey[900]};\n      box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n    \n      &:hover {\n        background: ${isDarkMode ? grey[800] : grey[50]};\n        border-color: ${isDarkMode ? grey[600] : grey[300]};\n      }\n    \n      &:active {\n        background: ${isDarkMode ? grey[700] : grey[100]};\n      }\n    \n      &:focus-visible {\n        box-shadow: 0 0 0 4px ${isDarkMode ? cyan[300] : cyan[200]};\n        outline: none;\n      }\n    }\n\n    .CustomSnackbar {\n      position: fixed;\n      z-index: 5500;\n      display: flex;\n      right: 16px;\n      bottom: 16px;\n      left: auto;\n      justify-content: start;\n      max-width: 560px;\n      min-width: 300px;\n      background-color: ${isDarkMode ? grey[900] : '#FFF'};\n      border-radius: 8px;\n      border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n      box-shadow: ${\n        isDarkMode ? `0 4px 8px rgb(0 0 0 / 0.7)` : `0 4px 8px rgb(0 0 0 / 0.1)`\n      };\n      padding: 0.75rem;\n      color: ${isDarkMode ? cyan[100] : cyan[700]};\n      font-family: 'IBM Plex Sans', sans-serif;\n      font-weight: 500;\n      animation: in-right 200ms;\n      transition: transform 0.2s ease-out;\n      }\n    `}</style>\n  );\n}\n",cssJsxPreview:'<React.Fragment>\n  <button className="TriggerButton" type="button" onClick={handleOpen}>\n    Open snackbar\n  </button>\n  {open ? (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <div className="CustomSnackbar" {...getRootProps()}>\n        Hello World\n      </div>\n    </ClickAwayListener>\n  ) : null}\n  <Styles />\n</React.Fragment>',jsxPreview:'<React.Fragment>\n  <TriggerButton type="button" onClick={handleOpen}>\n    Open snackbar\n  </TriggerButton>\n  {open ? (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <CustomSnackbar {...getRootProps()}>Hello World</CustomSnackbar>\n    </ClickAwayListener>\n  ) : null}\n</React.Fragment>',moduleTS:"./UnstyledSnackbar/system/index.js",rawTS:"import * as React from 'react';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { css, keyframes, styled } from '@mui/system';\n\nexport default function UseSnackbar() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { getRootProps, onClickAway } = useSnackbar({\n    onClose: handleClose,\n    open,\n    autoHideDuration: 5000,\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <React.Fragment>\n      <TriggerButton type=\"button\" onClick={handleOpen}>\n        Open snackbar\n      </TriggerButton>\n      {open ? (\n        <ClickAwayListener onClickAway={onClickAway}>\n          <CustomSnackbar {...getRootProps()}>Hello World</CustomSnackbar>\n        </ClickAwayListener>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nconst blue = {\n  50: '#F0F7FF',\n  100: '#C2E0FF',\n  200: '#99CCF3',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n  800: '#004C99',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst snackbarInRight = keyframes`\n  from {\n    transform: translateX(100%);\n  }\n\n  to {\n    transform: translateX(0);\n  }\n`;\n\nconst TriggerButton = styled('button')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[200] : grey[900]};\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? grey[800] : grey[50]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[300]};\n  }\n\n  &:active {\n    background: ${theme.palette.mode === 'dark' ? grey[700] : grey[100]};\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n  `,\n);\n\nconst CustomSnackbar = styled('div')(\n  ({ theme }) => css`\n    position: fixed;\n    z-index: 5500;\n    display: flex;\n    right: 16px;\n    bottom: 16px;\n    left: auto;\n    justify-content: start;\n    max-width: 560px;\n    min-width: 300px;\n    background-color: ${theme.palette.mode === 'dark' ? grey[900] : '#FFF'};\n    border-radius: 8px;\n    border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    box-shadow: ${theme.palette.mode === 'dark'\n      ? `0 4px 8px rgb(0 0 0 / 0.7)`\n      : `0 4px 8px rgb(0 0 0 / 0.1)`};\n    padding: 0.75rem;\n    color: ${theme.palette.mode === 'dark' ? blue[200] : blue[700]};\n    font-family: 'IBM Plex Sans', sans-serif;\n    font-weight: 500;\n    animation: ${snackbarInRight} 200ms;\n    transition: transform 0.2s ease-out;\n  `,\n);\n"}};nE.scope={process:{},import:{react:y,"@mui/base/useSnackbar":C,"@mui/base/ClickAwayListener":v,"@mui/system":w,"react-transition-group":S,"@mui/icons-material/Close":F,"@mui/base/Snackbar":B,"@mui/icons-material/CheckRounded":E}};var nA={"./UseSnackbar.js":function(){var n=k.useState(!1),e=(0,M.Z)(n,2),t=e[0],o=e[1],a=(0,j.D)({onClose:function(){o(!1)},open:t,autoHideDuration:5e3}),r=a.getRootProps,s=a.onClickAway;return(0,O.jsxs)(k.Fragment,{children:[(0,O.jsx)(N,{type:"button",onClick:function(){o(!0)},children:"Open snackbar"}),t?(0,O.jsx)(P.d,{onClickAway:s,children:(0,O.jsx)(H,(0,R.Z)((0,R.Z)({},r()),{},{children:"Hello World"}))}):null]})},"./TransitionComponentSnackbar.js":function(){var n,e=k.useState(!1),t=(0,M.Z)(e,2),o=t[0],a=t[1],s=k.useState(!0),i=(0,M.Z)(s,2),c=i[0],l=i[1],d=k.useRef(null),u=function(n,e){"clickaway"!==e&&a(!1)};return(0,O.jsxs)(k.Fragment,{children:[(0,O.jsx)(G,{type:"button",onClick:function(){a(!0)},children:"Open snackbar"}),(0,O.jsx)(V,{autoHideDuration:5e3,open:o,onClose:u,exited:c,children:(0,O.jsx)(X.ZP,{timeout:{enter:400,exit:400},in:o,appear:!0,unmountOnExit:!0,onEnter:function(){l(!1)},onExited:function(){l(!0)},nodeRef:d,children:function(e){return(0,O.jsxs)(q,{style:{transform:K[e],transition:"transform 300ms ease"},ref:d,children:[r||(r=(0,O.jsx)("div",{className:"snackbar-title",children:"Hello World"})),n||(n=(0,O.jsx)(D(),{onClick:u,className:"snackbar-close-icon"}))]})}})})]})},"./UnstyledSnackbarIntroduction/system/index.js":function(){var n,e=k.useState(!1),t=(0,M.Z)(e,2),o=t[0],a=t[1],r=k.useState(!0),s=(0,M.Z)(r,2),c=s[0],l=s[1],d=k.useRef(null),u=function(n,e){"clickaway"!==e&&a(!1)};return(0,O.jsxs)(k.Fragment,{children:[(0,O.jsx)(Q,{type:"button",onClick:function(){a(!0)},children:"Open snackbar"}),(0,O.jsx)(nn,{autoHideDuration:5e3,open:o,onClose:u,exited:c,children:(0,O.jsx)(X.ZP,{timeout:{enter:400,exit:400},in:o,appear:!0,unmountOnExit:!0,onEnter:function(){l(!1)},onExited:function(){l(!0)},nodeRef:d,children:function(e){return(0,O.jsxs)(ne,{style:{transform:nt[e],transition:"transform 300ms ease"},ref:d,children:[(0,O.jsx)(A(),{sx:{color:"success.main",flexShrink:0,width:"1.25rem",height:"1.5rem"}}),i||(i=(0,O.jsxs)("div",{className:"snackbar-message",children:[(0,O.jsx)("p",{className:"snackbar-title",children:"Notifications sent"}),(0,O.jsx)("p",{className:"snackbar-description",children:"Everything was sent to the desired address."})]})),n||(n=(0,O.jsx)(D(),{onClick:u,className:"snackbar-close-icon"}))]})}})})]})},"./UnstyledSnackbar/system/index.js":function(){var n=k.useState(!1),e=(0,M.Z)(n,2),t=e[0],o=e[1],a=(0,j.D)({onClose:function(){o(!1)},open:t,autoHideDuration:5e3}),r=a.getRootProps,s=a.onClickAway;return(0,O.jsxs)(k.Fragment,{children:[(0,O.jsx)(ns,{type:"button",onClick:function(){o(!0)},children:"Open snackbar"}),t?(0,O.jsx)(P.d,{onClickAway:s,children:(0,O.jsx)(ni,(0,R.Z)((0,R.Z)({},r()),{},{children:"Hello World"}))}):null]})},"./UnstyledSnackbar/tailwind/index.js":function(){var n="dark"===(0,nc.Z)().palette.mode,e=k.useState(!1),t=(0,M.Z)(e,2),o=t[0],a=t[1],r=(0,j.D)({onClose:function(){a(!1)},open:o,autoHideDuration:5e3}),s=r.getRootProps,i=r.onClickAway;return(0,O.jsxs)("div",{className:"".concat(n?"dark":""),children:[(0,O.jsx)("button",{className:"cursor-pointer text-sm font-sans box-border rounded-lg font-semibold px-4 py-2 bg-white dark:bg-slate-900 border border-solid border-slate-200 dark:border-slate-700 text-slate-900 dark:text-slate-200 hover:bg-slate-50 hover:dark:bg-slate-800 hover:border-slate-300 dark:hover:border-slate-600 focus-visible:shadow-[0_0_0_4px_#ddd6fe] dark:focus-visible:shadow-[0_0_0_4px_#a78bfa] focus-visible:outline-none shadow-sm",type:"button",onClick:function(){a(!0)},children:"Open snackbar"}),o?(0,O.jsx)(P.d,{onClickAway:i,children:(0,O.jsx)("div",(0,R.Z)((0,R.Z)({className:"fixed z-50 font-sans flex right-4 bottom-4 left-auto justify-start rounded-lg font-semibold bg-white dark:bg-slate-900 p-3 animation-appear transition-transform border border-solid border-slate-200 dark:border-slate-700 min-w-snackbar max-w-snackbar shadow-md text-purple-900 dark:text-purple-100"},s()),{},{children:"Hello World"}))}):null]})},"./UnstyledSnackbarIntroduction/tailwind/index.js":function(){var n,e="dark"===(0,nc.Z)().palette.mode,t=k.useState(!1),o=(0,M.Z)(t,2),a=o[0],r=o[1],s=k.useState(!0),i=(0,M.Z)(s,2),c=i[0],l=i[1],d=k.useRef(null),p=function(n,e){"clickaway"!==e&&r(!1)};return(0,O.jsxs)("div",{className:"".concat(e?"dark":""),children:[(0,O.jsx)("button",{className:"cursor-pointer text-sm font-sans box-border rounded-lg font-semibold px-4 py-2 bg-white dark:bg-slate-900 border border-solid border-slate-200 dark:border-slate-700 text-slate-900 dark:text-slate-200 hover:bg-slate-50 hover:dark:bg-slate-800 hover:border-slate-300 dark:hover:border-slate-600 focus-visible:shadow-[0_0_0_4px_#ddd6fe] dark:focus-visible:shadow-[0_0_0_4px_#a78bfa] focus-visible:outline-none shadow-sm",type:"button",onClick:function(){r(!0)},children:"Open snackbar"}),(0,O.jsx)(L.A,{autoHideDuration:5e3,open:a,onClose:p,exited:c,className:"fixed z-50 font-sans flex right-4 bottom-4 left-auto max-w-xl	min-w-xs",children:(0,O.jsx)(X.ZP,{timeout:{enter:400,exit:400},in:a,appear:!0,unmountOnExit:!0,onEnter:function(){l(!1)},onExited:function(){l(!0)},nodeRef:d,children:function(e){return(0,O.jsxs)("div",{className:"flex gap-4	overflow-hidden	bg-white dark:bg-slate-900 rounded-lg	border border-solid border-slate-200 dark:border-slate-700 shadow-md text-slate-900 dark:text-slate-50 p-3	text-start",style:{transform:nl[e],transition:"transform 300ms ease"},ref:d,children:[(0,O.jsx)(A(),{sx:{color:"success.main",flexShrink:0,width:"1.25rem",height:"1.5rem"}}),u||(u=(0,O.jsxs)("div",{className:"flex-1	max-w-full",children:[(0,O.jsx)("p",{className:"m-0 leading-normal mr-2 font-medium",children:"Notifications sent"}),(0,O.jsx)("p",{className:"m-0 leading-normal font-normal	text-slate-800 dark:text-slate-400",children:"Everything was sent to the desired address."})]})),n||(n=(0,O.jsx)(D(),{onClick:p,className:"cursor-pointer	shrink-0	p-0.5	rounded hover:bg-slate-50 hover:dark:bg-slate-800"}))]})}})})]})},"./UnstyledSnackbar/tailwind/index.tsx":function(){var n="dark"===(0,nc.Z)().palette.mode,e=k.useState(!1),t=(0,M.Z)(e,2),o=t[0],a=t[1],r=(0,j.D)({onClose:function(){a(!1)},open:o,autoHideDuration:5e3}),s=r.getRootProps,i=r.onClickAway;return(0,O.jsxs)("div",{className:"".concat(n?"dark":""),children:[(0,O.jsx)("button",{className:"cursor-pointer text-sm font-sans box-border rounded-lg font-semibold px-4 py-2 bg-white dark:bg-slate-900 border border-solid border-slate-200 dark:border-slate-700 text-slate-900 dark:text-slate-200 hover:bg-slate-50 hover:dark:bg-slate-800 hover:border-slate-300 dark:hover:border-slate-600 focus-visible:shadow-[0_0_0_4px_#ddd6fe] dark:focus-visible:shadow-[0_0_0_4px_#a78bfa] focus-visible:outline-none shadow-sm",type:"button",onClick:function(){a(!0)},children:"Open snackbar"}),o?(0,O.jsx)(P.d,{onClickAway:i,children:(0,O.jsx)("div",(0,R.Z)((0,R.Z)({className:"fixed z-50 font-sans flex right-4 bottom-4 left-auto justify-start rounded-lg font-semibold bg-white dark:bg-slate-900 p-3 animation-appear transition-transform border border-solid border-slate-200 dark:border-slate-700 min-w-snackbar max-w-snackbar shadow-md text-purple-900 dark:text-purple-100"},s()),{},{children:"Hello World"}))}):null]})},"./UnstyledSnackbarIntroduction/tailwind/index.tsx":function(){var n,e="dark"===(0,nc.Z)().palette.mode,t=k.useState(!1),o=(0,M.Z)(t,2),a=o[0],r=o[1],s=k.useState(!0),i=(0,M.Z)(s,2),c=i[0],l=i[1],d=k.useRef(null),u=function(n,e){"clickaway"!==e&&r(!1)};return(0,O.jsxs)("div",{className:"".concat(e?"dark":""),children:[(0,O.jsx)("button",{className:"cursor-pointer text-sm font-sans box-border rounded-lg font-semibold px-4 py-2 bg-white dark:bg-slate-900 border border-solid border-slate-200 dark:border-slate-700 text-slate-900 dark:text-slate-200 hover:bg-slate-50 hover:dark:bg-slate-800 hover:border-slate-300 dark:hover:border-slate-600 focus-visible:shadow-[0_0_0_4px_#ddd6fe] dark:focus-visible:shadow-[0_0_0_4px_#a78bfa] focus-visible:outline-none shadow-sm",type:"button",onClick:function(){r(!0)},children:"Open snackbar"}),(0,O.jsx)(L.A,{autoHideDuration:5e3,open:a,onClose:u,exited:c,className:"fixed z-50 font-sans flex right-4 bottom-4 left-auto max-w-xl	min-w-xs",children:(0,O.jsx)(X.ZP,{timeout:{enter:400,exit:400},in:a,appear:!0,unmountOnExit:!0,onEnter:function(){l(!1)},onExited:function(){l(!0)},nodeRef:d,children:function(e){return(0,O.jsxs)("div",{className:"flex gap-4	overflow-hidden	bg-white dark:bg-slate-900 rounded-lg	border border-solid border-slate-200 dark:border-slate-700 shadow-md text-slate-900 dark:text-slate-50 p-3	text-start",style:{transform:nd[e],transition:"transform 300ms ease"},ref:d,children:[(0,O.jsx)(A(),{sx:{color:"success.main",flexShrink:0,width:"1.25rem",height:"1.5rem"}}),p||(p=(0,O.jsxs)("div",{className:"flex-1	max-w-full",children:[(0,O.jsx)("p",{className:"m-0 leading-normal mr-2 font-medium",children:"Notifications sent"}),(0,O.jsx)("p",{className:"m-0 leading-normal font-normal	text-slate-800 dark:text-slate-400",children:"Everything was sent to the desired address."})]})),n||(n=(0,O.jsx)(D(),{onClick:u,className:"cursor-pointer	shrink-0	p-0.5	rounded hover:bg-slate-50 hover:dark:bg-slate-800"}))]})}})})]})},"./UnstyledSnackbar/css/index.js":function(){var n=k.useState(!1),e=(0,M.Z)(n,2),t=e[0],o=e[1],a=(0,j.D)({onClose:function(){o(!1)},open:t,autoHideDuration:5e3}),r=a.getRootProps,s=a.onClickAway;return(0,O.jsxs)(k.Fragment,{children:[(0,O.jsx)("button",{className:"TriggerButton",type:"button",onClick:function(){o(!0)},children:"Open snackbar"}),t?(0,O.jsx)(P.d,{onClickAway:s,children:(0,O.jsx)("div",(0,R.Z)((0,R.Z)({className:"CustomSnackbar"},r()),{},{children:"Hello World"}))}):null,m||(m=(0,O.jsx)(nm,{}))]})},"./UnstyledSnackbarIntroduction/css/index.js":function(){var n,e=k.useState(!1),t=(0,M.Z)(e,2),o=t[0],a=t[1],r=k.useState(!0),s=(0,M.Z)(r,2),i=s[0],c=s[1],l=k.useRef(null),d=function(n,e){"clickaway"!==e&&a(!1)};return(0,O.jsxs)(k.Fragment,{children:[(0,O.jsx)("button",{className:"TriggerButtonIntroduction",type:"button",onClick:function(){a(!0)},children:"Open snackbar"}),(0,O.jsx)(L.A,{autoHideDuration:5e3,open:o,onClose:d,exited:i,className:"CustomSnackbarIntroduction",children:(0,O.jsx)(X.ZP,{timeout:{enter:400,exit:400},in:o,appear:!0,unmountOnExit:!0,onEnter:function(){c(!1)},onExited:function(){c(!0)},nodeRef:l,children:function(e){return(0,O.jsxs)("div",{className:"CustomSnackbarContentIntroduction",style:{transform:ng[e],transition:"transform 300ms ease"},ref:l,children:[(0,O.jsx)(A(),{sx:{color:"success.main",flexShrink:0,width:"1.25rem",height:"1.5rem"}}),f||(f=(0,O.jsxs)("div",{className:"snackbar-message",children:[(0,O.jsx)("p",{className:"snackbar-title",children:"Notifications sent"}),(0,O.jsx)("p",{className:"snackbar-description",children:"Everything was sent to the desired address."})]})),n||(n=(0,O.jsx)(D(),{onClick:d,className:"snackbar-close-icon"}))]})}})}),h||(h=(0,O.jsx)(nb,{}))]})},"./UnstyledSnackbar/css/index.tsx":function(){var n=k.useState(!1),e=(0,M.Z)(n,2),t=e[0],o=e[1],a=(0,j.D)({onClose:function(){o(!1)},open:t,autoHideDuration:5e3}),r=a.getRootProps,s=a.onClickAway;return(0,O.jsxs)(k.Fragment,{children:[(0,O.jsx)("button",{className:"TriggerButton",type:"button",onClick:function(){o(!0)},children:"Open snackbar"}),t?(0,O.jsx)(P.d,{onClickAway:s,children:(0,O.jsx)("div",(0,R.Z)((0,R.Z)({className:"CustomSnackbar"},r()),{},{children:"Hello World"}))}):null,g||(g=(0,O.jsx)(ny,{}))]})},"./UnstyledSnackbarIntroduction/css/index.tsx":function(){var n,e=k.useState(!1),t=(0,M.Z)(e,2),o=t[0],a=t[1],r=k.useState(!0),s=(0,M.Z)(r,2),i=s[0],c=s[1],l=k.useRef(null),d=function(n,e){"clickaway"!==e&&a(!1)};return(0,O.jsxs)(k.Fragment,{children:[(0,O.jsx)("button",{className:"TriggerButtonIntroduction",type:"button",onClick:function(){a(!0)},children:"Open snackbar"}),(0,O.jsx)(L.A,{autoHideDuration:5e3,open:o,onClose:d,exited:i,className:"CustomSnackbarIntroduction",children:(0,O.jsx)(X.ZP,{timeout:{enter:400,exit:400},in:o,appear:!0,unmountOnExit:!0,onEnter:function(){c(!1)},onExited:function(){c(!0)},nodeRef:l,children:function(e){return(0,O.jsxs)("div",{className:"CustomSnackbarContentIntroduction",style:{transform:nw[e],transition:"transform 300ms ease"},ref:l,children:[(0,O.jsx)(A(),{sx:{color:"success.main",flexShrink:0,width:"1.25rem",height:"1.5rem"}}),b||(b=(0,O.jsxs)("div",{className:"snackbar-message",children:[(0,O.jsx)("p",{className:"snackbar-title",children:"Notifications sent"}),(0,O.jsx)("p",{className:"snackbar-description",children:"Everything was sent to the desired address."})]})),n||(n=(0,O.jsx)(D(),{onClick:d,className:"snackbar-close-icon"}))]})}})}),x||(x=(0,O.jsx)(nS,{}))]})}},nZ={"modules/components/ComponentLinkHeader.js":nF.Z,"modules/components/ComponentPageTabs.js":nD.Z}}}]);