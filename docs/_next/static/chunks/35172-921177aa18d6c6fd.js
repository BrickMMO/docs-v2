(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[35172],{465317:function(e,n,a){a(410487),e.exports=a(334579).Number.isFinite},410487:function(e,n,a){var o=a(983856),t=a(933938).isFinite;o(o.S,"Number",{isFinite:function(e){return"number"==typeof e&&t(e)}})},355676:function(e,n,a){"use strict";a.d(n,{z:function(){return y}});var o=a(163804),t=a(80117),r=a(667294),l=a(829624),s=a(540608),i=a(248573),p=a(315412),d=a(555918),c=a(785893),u=["action","children","disabled","focusableWhenDisabled","onFocusVisible","slotProps","slots"],b=function(e){var n=e.active,a=e.disabled,o=e.focusVisible;return(0,l.Z)({root:["root",a&&"disabled",o&&"focusVisible",n&&"active"]},(0,d.T)(s.F))},y=r.forwardRef(function(e,n){var a,l=e.action,s=e.children,d=(e.disabled,e.focusableWhenDisabled),y=void 0!==d&&d,h=(e.onFocusVisible,e.slotProps),m=e.slots,f=(0,t.Z)(e,u),g=r.useRef(),x=(0,i.U)((0,o.Z)((0,o.Z)({},e),{},{focusableWhenDisabled:y})),k=x.active,v=x.focusVisible,T=x.setFocusVisible,w=x.getRootProps;r.useImperativeHandle(l,function(){return{focusVisible:function(){T(!0),g.current.focus()}}},[T]);var A=(0,o.Z)((0,o.Z)({},e),{},{active:k,focusableWhenDisabled:y,focusVisible:v}),S=b(A),P=f.href||f.to?"a":"button",C=null!==(a=(void 0===m?{}:m).root)&&void 0!==a?a:P,D=(0,p.y)({elementType:C,getSlotProps:w,externalForwardedProps:f,externalSlotProps:(void 0===h?{}:h).root,additionalProps:{ref:n},ownerState:A,className:S.root});return(0,c.jsx)(C,(0,o.Z)((0,o.Z)({},D),{},{children:s}))})},540608:function(e,n,a){"use strict";a.d(n,{F:function(){return t},J:function(){return r}});var o=a(899933);function t(e){return(0,o.Z)("MuiButton",e)}var r=(0,a(173729).Z)("MuiButton",["root","active","disabled","focusVisible"])},520613:function(e,n,a){"use strict";a.r(n),a.d(n,{Button:function(){return o.z},buttonClasses:function(){return t.J},getButtonUtilityClass:function(){return t.F}});var o=a(355676),t=a(540608)},759216:function(e,n,a){"use strict";a.r(n),a.d(n,{Popper:function(){return o.r},getPopperUtilityClass:function(){return t.i},popperClasses:function(){return t.D}});var o=a(143221),t=a(279543)},528101:function(e,n,a){"use strict";a.r(n),a.d(n,{createFilterOptions:function(){return o.D},useAutocomplete:function(){return o.o}});var o=a(786923)},786923:function(e,n,a){"use strict";a.d(n,{D:function(){return m},o:function(){return k}});var o=a(163804),t=a(648611);a(508450);var r=a(378149),l=a.n(r),s=a(18281),i=a.n(s),p=a(667294),d=a(27262),c=a(245232),u=a(764028),b=a(92557),y=a(80303);function h(e){return void 0!==e.normalize?e.normalize("NFD").replace(/[\u0300-\u036f]/g,""):e}function m(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.ignoreAccents,a=void 0===n||n,o=e.ignoreCase,t=void 0===o||o,r=e.limit,l=e.matchFrom,s=void 0===l?"any":l,i=e.stringify,p=e.trim,d=void 0!==p&&p;return function(e,n){var o=n.inputValue,l=n.getOptionLabel,p=d?o.trim():o;t&&(p=p.toLowerCase()),a&&(p=h(p));var c=p?e.filter(function(e){var n=(i||l)(e);return t&&(n=n.toLowerCase()),a&&(n=h(n)),"start"===s?0===n.indexOf(p):n.indexOf(p)>-1}):e;return"number"==typeof r?c.slice(0,r):c}}function f(e,n){for(var a=0;a<e.length;a+=1)if(n(e[a]))return a;return -1}var g=m(),x=function(e){var n;return null!==e.current&&(null===(n=e.current.parentElement)||void 0===n?void 0:n.contains(document.activeElement))};function k(e){var n=e.unstable_isActiveElementInListbox,a=void 0===n?x:n,r=e.unstable_classNamePrefix,s=void 0===r?"Mui":r,h=e.autoComplete,m=void 0!==h&&h,k=e.autoHighlight,v=e.autoSelect,T=void 0!==v&&v,w=e.blurOnSelect,A=void 0!==w&&w,S=e.clearOnBlur,P=void 0===S?!e.freeSolo:S,C=e.clearOnEscape,D=void 0!==C&&C,I=e.componentName,R=void 0===I?"useAutocomplete":I,L=e.defaultValue,F=void 0===L?e.multiple?[]:null:L,M=e.disableClearable,O=void 0!==M&&M,B=e.disableCloseOnSelect,E=void 0!==B&&B,_=e.disabled,N=e.disabledItemsFocusable,Z=void 0!==N&&N,V=e.disableListWrap,G=void 0!==V&&V,j=e.filterOptions,$=e.filterSelectedOptions,z=void 0!==$&&$,W=e.freeSolo,H=void 0!==W&&W,K=e.getOptionDisabled,U=e.getOptionLabel,J=void 0===U?function(e){var n;return null!==(n=e.label)&&void 0!==n?n:e}:U,q=e.groupBy,Y=e.handleHomeEndKeys,X=void 0===Y?!e.freeSolo:Y,Q=e.id,ee=e.includeInputInList,en=void 0!==ee&&ee,ea=e.inputValue,eo=e.isOptionEqualToValue,et=void 0===eo?function(e,n){return e===n}:eo,er=e.multiple,el=void 0!==er&&er,es=e.onChange,ei=e.onClose,ep=e.onHighlightChange,ed=e.onInputChange,ec=e.onOpen,eu=e.open,eb=e.openOnFocus,ey=void 0!==eb&&eb,eh=e.options,em=e.readOnly,ef=void 0!==em&&em,eg=e.selectOnFocus,ex=void 0===eg?!e.freeSolo:eg,ek=e.value,ev=(0,d.Z)(Q),eT=J;eT=function(e){var n=J(e);return"string"!=typeof n?String(n):n};var ew=p.useRef(!1),eA=p.useRef(!0),eS=p.useRef(null),eP=p.useRef(null),eC=p.useState(null),eD=(0,t.Z)(eC,2),eI=eD[0],eR=eD[1],eL=p.useState(-1),eF=(0,t.Z)(eL,2),eM=eF[0],eO=eF[1],eB=void 0!==k&&k?0:-1,eE=p.useRef(eB),e_=(0,c.Z)({controlled:ek,default:F,name:R}),eN=(0,t.Z)(e_,2),eZ=eN[0],eV=eN[1],eG=(0,c.Z)({controlled:ea,default:"",name:R,state:"inputValue"}),ej=(0,t.Z)(eG,2),e$=ej[0],ez=ej[1],eW=p.useState(!1),eH=(0,t.Z)(eW,2),eK=eH[0],eU=eH[1],eJ=p.useCallback(function(e,n){var a;if((el?eZ.length<n.length:null!==n)||P){if(el)a="";else if(null==n)a="";else{var o=eT(n);a="string"==typeof o?o:""}e$!==a&&(ez(a),ed&&ed(e,a,"reset"))}},[eT,e$,el,ed,ez,P,eZ]),eq=(0,c.Z)({controlled:eu,default:!1,name:R,state:"open"}),eY=(0,t.Z)(eq,2),eX=eY[0],eQ=eY[1],e0=p.useState(!0),e1=(0,t.Z)(e0,2),e9=e1[0],e2=e1[1],e5=!el&&null!=eZ&&e$===eT(eZ),e4=eX&&!ef,e7=e4?(void 0===j?g:j)(eh.filter(function(e){return!(z&&(el?eZ:[eZ]).some(function(n){return null!==n&&et(e,n)}))}),{inputValue:e5&&e9?"":e$,getOptionLabel:eT}):[],e3=(0,u.Z)({filteredOptions:e7,value:eZ,inputValue:e$});p.useEffect(function(){var e=eZ!==e3.value;(!eK||e)&&(!H||e)&&eJ(null,eZ)},[eZ,eJ,eK,e3.value,H]);var e8=eX&&e7.length>0&&!ef,e6=(0,b.Z)(function(e){-1===e?eS.current.focus():eI.querySelector('[data-tag-index="'.concat(e,'"]')).focus()});p.useEffect(function(){el&&eM>eZ.length-1&&(eO(-1),e6(-1))},[eZ,el,eM,e6]);var ne=(0,b.Z)(function(e){var n=e.event,a=e.index,o=e.reason,t=void 0===o?"auto":o;if(eE.current=a,-1===a?eS.current.removeAttribute("aria-activedescendant"):eS.current.setAttribute("aria-activedescendant","".concat(ev,"-option-").concat(a)),ep&&ep(n,-1===a?null:e7[a],t),eP.current){var r=eP.current.querySelector('[role="option"].'.concat(s,"-focused"));r&&(r.classList.remove("".concat(s,"-focused")),r.classList.remove("".concat(s,"-focusVisible")));var l=eP.current;if("listbox"!==eP.current.getAttribute("role")&&(l=eP.current.parentElement.querySelector('[role="listbox"]')),l){if(-1===a){l.scrollTop=0;return}var i=eP.current.querySelector('[data-option-index="'.concat(a,'"]'));if(i&&(i.classList.add("".concat(s,"-focused")),"keyboard"===t&&i.classList.add("".concat(s,"-focusVisible")),l.scrollHeight>l.clientHeight&&"mouse"!==t&&"touch"!==t)){var p=l.clientHeight+l.scrollTop,d=i.offsetTop+i.offsetHeight;d>p?l.scrollTop=d-l.clientHeight:i.offsetTop-i.offsetHeight*(q?1.3:0)<l.scrollTop&&(l.scrollTop=i.offsetTop-i.offsetHeight*(q?1.3:0))}}}}),nn=(0,b.Z)(function(e){var n=e.event,a=e.diff,o=e.direction,t=e.reason;if(e4){var r=function(e,n){if(!eP.current||e<0||e>=e7.length)return -1;for(var a=e;;){var o=eP.current.querySelector('[data-option-index="'.concat(a,'"]')),t=!Z&&(!o||o.disabled||"true"===o.getAttribute("aria-disabled"));if(o&&o.hasAttribute("tabindex")&&!t)return a;if((a="next"===n?(a+1)%e7.length:(a-1+e7.length)%e7.length)===e)return -1}}(function(){var e=e7.length-1;if("reset"===a)return eB;if("start"===a)return 0;if("end"===a)return e;var n=eE.current+a;return n<0?-1===n&&en?-1:G&&-1!==eE.current||Math.abs(a)>1?0:e:n>e?n===e+1&&en?-1:G||Math.abs(a)>1?e:0:n}(),void 0===o?"next":o);if(ne({index:r,reason:void 0===t?"auto":t,event:n}),m&&"reset"!==a){if(-1===r)eS.current.value=e$;else{var l=eT(e7[r]);eS.current.value=l,0===l.toLowerCase().indexOf(e$.toLowerCase())&&e$.length>0&&eS.current.setSelectionRange(e$.length,l.length)}}}}),na=function(){var e;if(-1!==eE.current&&e3.filteredOptions&&e3.filteredOptions.length!==e7.length&&e3.inputValue===e$&&(el?eZ.length===e3.value.length&&e3.value.every(function(e,n){return eT(eZ[n])===eT(e)}):((e=e3.value)?eT(e):"")===(eZ?eT(eZ):""))){var n=e3.filteredOptions[eE.current];if(n&&e7.some(function(e){return eT(e)===eT(n)}))return!0}return!1},no=p.useCallback(function(){if(!(!e4||na())){var e=el?eZ[0]:eZ;if(0===e7.length||null==e){nn({diff:"reset"});return}if(eP.current){if(null!=e){var n=e7[eE.current];if(el&&n&&-1!==f(eZ,function(e){return et(n,e)}))return;var a=f(e7,function(n){return et(n,e)});-1===a?nn({diff:"reset"}):ne({index:a});return}if(eE.current>=e7.length-1){ne({index:e7.length-1});return}ne({index:eE.current})}}},[e7.length,!el&&eZ,z,nn,ne,e4,e$,el]),nt=(0,b.Z)(function(e){(0,y.Z)(eP,e),e&&no()});p.useEffect(function(){no()},[no]);var nr=function(e){!eX&&(eQ(!0),e2(!0),ec&&ec(e))},nl=function(e,n){eX&&(eQ(!1),ei&&ei(e,n))},ns=function(e,n,a,o){if(el){if(eZ.length===n.length&&eZ.every(function(e,a){return e===n[a]}))return}else if(eZ===n)return;es&&es(e,n,a,o),eV(n)},ni=p.useRef(!1),np=function(e,n){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"selectOption",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"options",t=a,r=n;if(el){var s=f(r=l()(eZ)?eZ.slice():[],function(e){return et(n,e)});-1===s?r.push(n):"freeSolo"!==o&&(r.splice(s,1),t="removeOption")}eJ(e,r),ns(e,r,t,{option:n}),E||e&&(e.ctrlKey||e.metaKey)||nl(e,t),(!0===A||"touch"===A&&ni.current||"mouse"===A&&!ni.current)&&eS.current.blur()},nd=function(e,n){if(el){""===e$&&nl(e,"toggleInput");var a=eM;-1===eM?""===e$&&"previous"===n&&(a=eZ.length-1):((a+="next"===n?1:-1)<0&&(a=0),a===eZ.length&&(a=-1)),eO(a=function(e,n){if(-1===e)return -1;for(var a=e;;){if("next"===n&&a===eZ.length||"previous"===n&&-1===a)return -1;var o=eI.querySelector('[data-tag-index="'.concat(a,'"]'));if(o&&o.hasAttribute("tabindex")&&!o.disabled&&"true"!==o.getAttribute("aria-disabled"))return a;a+="next"===n?1:-1}}(a,n)),e6(a)}},nc=function(e){ew.current=!0,ez(""),ed&&ed(e,"","clear"),ns(e,el?[]:null,"clear")},nu=function(e){eU(!0),ey&&!ew.current&&nr(e)},nb=function(e){if(a(eP)){eS.current.focus();return}eU(!1),eA.current=!0,ew.current=!1,T&&-1!==eE.current&&e4?np(e,e7[eE.current],"blur"):T&&H&&""!==e$?np(e,e$,"blur","freeSolo"):P&&eJ(e,eZ),nl(e,"blur")},ny=function(e){var n=e.target.value;e$!==n&&(ez(n),e2(!1),ed&&ed(e,n,"input")),""===n?O||el||ns(e,null,"clear"):nr(e)},nh=function(e){var n=Number(e.currentTarget.getAttribute("data-option-index"));eE.current!==n&&ne({event:e,index:n,reason:"mouse"})},nm=function(e){ne({event:e,index:Number(e.currentTarget.getAttribute("data-option-index")),reason:"touch"}),ni.current=!0},nf=function(e){var n=Number(e.currentTarget.getAttribute("data-option-index"));np(e,e7[n],"selectOption"),ni.current=!1},ng=function(e){eX?nl(e,"toggleInput"):nr(e)},nx=function(e){e.currentTarget.contains(e.target)&&e.target.getAttribute("id")!==ev&&e.preventDefault()},nk=function(e){e.currentTarget.contains(e.target)&&(eS.current.focus(),ex&&eA.current&&eS.current.selectionEnd-eS.current.selectionStart==0&&eS.current.select(),eA.current=!1)},nv=function(e){_||""!==e$&&eX||ng(e)},nT=H&&e$.length>0;nT=nT||(el?eZ.length>0:null!==eZ);var nw=e7;return q&&(new(i()),nw=e7.reduce(function(e,n,a){var o=q(n);return e.length>0&&e[e.length-1].group===o?e[e.length-1].options.push(n):e.push({key:a,index:a,group:o,options:[n]}),e},[])),_&&eK&&nb(),{getRootProps:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,o.Z)((0,o.Z)({"aria-owns":e8?"".concat(ev,"-listbox"):null},e),{},{onKeyDown:function(n){if(e.onKeyDown&&e.onKeyDown(n),!n.defaultMuiPrevented&&(-1!==eM&&-1===["ArrowLeft","ArrowRight"].indexOf(n.key)&&(eO(-1),e6(-1)),229!==n.which))switch(n.key){case"Home":e4&&X&&(n.preventDefault(),nn({diff:"start",direction:"next",reason:"keyboard",event:n}));break;case"End":e4&&X&&(n.preventDefault(),nn({diff:"end",direction:"previous",reason:"keyboard",event:n}));break;case"PageUp":n.preventDefault(),nn({diff:-5,direction:"previous",reason:"keyboard",event:n}),nr(n);break;case"PageDown":n.preventDefault(),nn({diff:5,direction:"next",reason:"keyboard",event:n}),nr(n);break;case"ArrowDown":n.preventDefault(),nn({diff:1,direction:"next",reason:"keyboard",event:n}),nr(n);break;case"ArrowUp":n.preventDefault(),nn({diff:-1,direction:"previous",reason:"keyboard",event:n}),nr(n);break;case"ArrowLeft":nd(n,"previous");break;case"ArrowRight":nd(n,"next");break;case"Enter":if(-1!==eE.current&&e4){var a=e7[eE.current],o=!!K&&K(a);if(n.preventDefault(),o)return;np(n,a,"selectOption"),m&&eS.current.setSelectionRange(eS.current.value.length,eS.current.value.length)}else H&&""!==e$&&!1===e5&&(el&&n.preventDefault(),np(n,e$,"createOption","freeSolo"));break;case"Escape":e4?(n.preventDefault(),n.stopPropagation(),nl(n,"escape")):D&&(""!==e$||el&&eZ.length>0)&&(n.preventDefault(),n.stopPropagation(),nc(n));break;case"Backspace":if(el&&!ef&&""===e$&&eZ.length>0){var t=-1===eM?eZ.length-1:eM,r=eZ.slice();r.splice(t,1),ns(n,r,"removeOption",{option:eZ[t]})}break;case"Delete":if(el&&!ef&&""===e$&&eZ.length>0&&-1!==eM){var l=eZ.slice();l.splice(eM,1),ns(n,l,"removeOption",{option:eZ[eM]})}}},onMouseDown:nx,onClick:nk})},getInputLabelProps:function(){return{id:"".concat(ev,"-label"),htmlFor:ev}},getInputProps:function(){return{id:ev,value:e$,onBlur:nb,onFocus:nu,onChange:ny,onMouseDown:nv,"aria-activedescendant":e4?"":null,"aria-autocomplete":m?"both":"list","aria-controls":e8?"".concat(ev,"-listbox"):void 0,"aria-expanded":e8,autoComplete:"off",ref:eS,autoCapitalize:"none",spellCheck:"false",role:"combobox",disabled:_}},getClearProps:function(){return{tabIndex:-1,type:"button",onClick:nc}},getPopupIndicatorProps:function(){return{tabIndex:-1,type:"button",onClick:ng}},getTagProps:function(e){var n=e.index;return(0,o.Z)({key:n,"data-tag-index":n,tabIndex:-1},!ef&&{onDelete:function(e){var a=eZ.slice();a.splice(n,1),ns(e,a,"removeOption",{option:eZ[n]})}})},getListboxProps:function(){return{role:"listbox",id:"".concat(ev,"-listbox"),"aria-labelledby":"".concat(ev,"-label"),ref:nt,onMouseDown:function(e){e.preventDefault()}}},getOptionProps:function(e){var n=e.index,a=e.option,o=(el?eZ:[eZ]).some(function(e){return null!=e&&et(a,e)}),t=!!K&&K(a);return{key:eT(a),tabIndex:-1,role:"option",id:"".concat(ev,"-option-").concat(n),onMouseMove:nh,onClick:nf,onTouchStart:nm,"data-option-index":n,"aria-disabled":t,"aria-selected":o}},id:ev,inputValue:e$,value:eZ,dirty:nT,expanded:e4&&eI,popupOpen:e4,focused:eK||-1!==eM,anchorEl:eI,setAnchorEl:eR,focusedTag:eM,groupedOptions:nw}}},928125:function(e,n,a){"use strict";function o(e,n){return function(){return null}}a.d(n,{Z:function(){return o}})},637873:function(e,n,a){"use strict";a.d(n,{Z:function(){return t}});var o=a(667294);function t(e){return o.Children.toArray(e).filter(function(e){return o.isValidElement(e)})}},836852:function(e,n,a){"use strict";a.r(n),a.d(n,{HTMLElementType:function(){return g},chainPropTypes:function(){return o.Z},deepmerge:function(){return t.Z},elementAcceptingRef:function(){return p},elementTypeAcceptingRef:function(){return d},exactProp:function(){return c},formatMuiErrorMessage:function(){return u.Z},getDisplayName:function(){return f},getValidReactChildren:function(){return V.Z},integerPropType:function(){return H},internal_resolveProps:function(){return K.Z},isPlainObject:function(){return t.P},ponyfillGlobal:function(){return x.Z},refType:function(){return k},unstable_ClassNameGenerator:function(){return Y.Z},unstable_capitalize:function(){return v.Z},unstable_composeClasses:function(){return U.Z},unstable_createChainedFunction:function(){return T.Z},unstable_debounce:function(){return w.Z},unstable_deprecatedPropType:function(){return A.Z},unstable_detectScrollType:function(){return N.E},unstable_generateUtilityClass:function(){return J.Z},unstable_generateUtilityClasses:function(){return q.Z},unstable_getNormalizedScrollLeft:function(){return N.T},unstable_getScrollbarSize:function(){return _.Z},unstable_isMuiElement:function(){return S.Z},unstable_ownerDocument:function(){return P.Z},unstable_ownerWindow:function(){return C.Z},unstable_requirePropFactory:function(){return D.Z},unstable_setRef:function(){return I.Z},unstable_unsupportedProp:function(){return F.Z},unstable_useControlled:function(){return M.Z},unstable_useEnhancedEffect:function(){return R.Z},unstable_useEventCallback:function(){return O.Z},unstable_useForkRef:function(){return B.Z},unstable_useId:function(){return L.Z},unstable_useIsFocusVisible:function(){return E.Z},usePreviousProps:function(){return Z.Z},visuallyHidden:function(){return G.Z}});var o=a(928125),t=a(208882),r=a(45697),l=a.n(r);function s(e,n,a,o,t){var r,l,s=e[n];if(null==s)return null;var i=s.type;return"function"!=typeof i||(void 0===(r=i.prototype)?{}:r).isReactComponent||(l="Did you accidentally use a plain function component for an element instead?"),void 0!==l?Error("Invalid ".concat(o," `").concat(t||n,"` supplied to `").concat(a,"`. ")+"Expected an element that can hold a ref. ".concat(l," ")+"For more information see https://mui.com/r/caveat-with-refs-guide"):null}var i=(0,o.Z)(l().element,s);i.isRequired=(0,o.Z)(l().element.isRequired,s);var p=i,d=(0,o.Z)(l().elementType,function(e,n,a,o,t){var r,l,s=e[n];return null==s?null:("function"!=typeof s||(void 0===(r=s.prototype)?{}:r).isReactComponent||(l="Did you accidentally provide a plain function component instead?"),void 0!==l?Error("Invalid ".concat(o," `").concat(t||n,"` supplied to `").concat(a,"`. ")+"Expected an element type that can hold a ref. ".concat(l," ")+"For more information see https://mui.com/r/caveat-with-refs-guide"):null)});function c(e){return e}a(777193),a(163804),a(726243);var u=a(242268),b=a(659864),y=/^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;function h(e){var n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return e.displayName||e.name||(n="".concat(e).match(y))&&n[1]||a}function m(e,n,a){var o=h(n);return e.displayName||(""!==o?"".concat(a,"(").concat(o,")"):a)}function f(e){if(null!=e){if("string"==typeof e)return e;if("function"==typeof e)return h(e,"Component");if("object"==typeof e)switch(e.$$typeof){case b.ForwardRef:return m(e,e.render,"ForwardRef");case b.Memo:return m(e,e.type,"memo")}}}function g(e,n,a,o,t){return null}var x=a(249591),k=l().oneOfType([l().func,l().object]),v=a(177811),T=a(83416),w=a(456667),A=a(80436),S=a(411200),P=a(564460),C=a(629558),D=a(241305),I=a(80303),R=a(375437),L=a(27262),F=a(221952),M=a(245232),O=a(92557),B=a(881886),E=a(562475),_=a(918514),N=a(817752),Z=a(764028),V=a(637873),G=a(548517),j=a(807520),$=a(136515),z=a(825733);function W(){return null}a.n(z)(),W.isRequired=W;var H=W,K=a(491705),U=a(829624),J=a(899933),q=a(173729),Y=a(334190)},548517:function(e,n){"use strict";n.Z={border:0,clip:"rect(0 0 0 0)",height:"1px",margin:-1,overflow:"hidden",padding:0,position:"absolute",whiteSpace:"nowrap",width:"1px"}},747892:function(e,n,a){"use strict";a.d(n,{Z:function(){return S}});var o,t,r,l,s,i=a(667294),p=a(514950),d=a(695093),c=a(34915),u=a.n(c),b=a(602688),y=a(941615),h=a(785893),m=(0,y.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{fill:"#FDB300",d:"M5.24 2.7L12 2l6.76.7L24 9.48 12 23 0 9.49z"}),(0,h.jsx)("path",{fill:"#EA6C00",d:"M4.85 9l7.13 14L0 9zM19.1 9l-7.12 14L23.95 9z"}),(0,h.jsx)("path",{fill:"#FDAD00",d:"M4.85 9H19.1l-7.12 14z"}),(0,h.jsxs)("g",{children:[(0,h.jsx)("path",{fill:"#FDD231",d:"M11.98 2l-6.75.65-.38 6.34zM11.98 2l6.75.65.37 6.34z"}),(0,h.jsx)("path",{fill:"#FDAD00",d:"M23.95 9l-5.22-6.35.37 6.34zM0 9l5.23-6.35-.38 6.34z"}),(0,h.jsx)("path",{fill:"#FEEEB7",d:"M11.98 2L4.85 9H19.1z"})]})]}),"Sketch"),f=(0,y.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M8 24a4 4 0 004-4v-4H8a4 4 0 000 8z",fill:"#0ACF83"}),(0,h.jsx)("path",{d:"M4 12a4 4 0 014-4h4v8H8a4 4 0 01-4-4z",fill:"#A259FF"}),(0,h.jsx)("path",{d:"M4 4a4 4 0 014-4h4v8H8a4 4 0 01-4-4z",fill:"#F24E1E"}),(0,h.jsx)("path",{d:"M12 0h4a4 4 0 010 8h-4V0z",fill:"#FF7262"}),(0,h.jsx)("path",{d:"M20 12a4 4 0 11-8 0 4 4 0 018 0z",fill:"#1ABCFE"})]}),"Figma"),g=(0,y.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M5.54 2h12.92C20.42 2 22 3.6 22 5.58v12.55a3.56 3.56 0 01-3.54 3.58H5.54A3.56 3.56 0 012 18.13V5.58A3.56 3.56 0 015.54 2z",fill:"#470137"}),(0,h.jsx)("path",{d:"M12.52 7.28L10 11.45l2.68 4.41c.01.04.02.07.01.1 0 .04-.04.01-.09.02H10.7c-.13 0-.22 0-.28-.1l-.54-1.04c-.17-.35-.36-.7-.57-1.06l-.6-1.1h-.02c-.17.36-.36.73-.56 1.09l-.57 1.07-.57 1.06c-.04.09-.1.1-.2.1H4.94c-.03 0-.06.01-.06-.03 0-.03 0-.07.02-.1l2.6-4.28-2.53-4.31c-.03-.04-.04-.07-.02-.09.02-.02.05-.03.09-.03h1.9a.5.5 0 01.11.01c.04.02.06.05.09.08.16.36.34.72.53 1.09l.6 1.06c.2.36.39.71.57 1.07h.01c.18-.37.36-.73.55-1.08.18-.36.37-.71.57-1.06l.56-1.06c0-.04.02-.07.05-.09.03-.01.06-.02.1-.01h1.77c.04-.01.09.01.1.06 0 0-.01.04-.03.05zM16.39 16.16c-.62 0-1.24-.12-1.8-.38a2.92 2.92 0 01-1.27-1.15 3.65 3.65 0 01-.46-1.91 3.46 3.46 0 011.8-3.08 4.27 4.27 0 012.29-.48c.07 0 .16 0 .26.02V6.52c0-.06.02-.1.08-.1H19c.04 0 .08.03.08.07v8.01l.02.51.03.49c0 .06-.02.11-.08.13a6.37 6.37 0 01-2.65.53zm.82-1.69v-3.7a2.11 2.11 0 00-1.45.16c-.29.15-.53.36-.71.63-.19.27-.28.63-.28 1.06 0 .3.04.6.14.87a1.44 1.44 0 00.95.93c.23.08.46.11.7.11a4.49 4.49 0 00.65-.06z",fill:"#FF61F6"})]}),"AdobeXD"),x=(0,y.Z)((0,h.jsxs)("g",{fill:"currentColor",fillRule:"nonzero",children:[(0,h.jsx)("path",{d:"M5.84 3c-.52 0-1 .25-1.3.67l-1.4 2.05c-.06.09-.1.19-.14.28h8V3H5.84zM20.86 5.72l-1.4-2.05c-.3-.42-.81-.67-1.33-.67H13v3h8c-.05-.1-.08-.2-.14-.28z",fillOpacity:".79"}),(0,h.jsx)("path",{d:"M20.98 7H3.02L3 7.11V19.4c0 .89.71 1.61 1.58 1.61h14.84A1.6 1.6 0 0021 19.4V7.1L20.98 7zm-6.87 5.36H9.89a1.6 1.6 0 01-1.58-1.61c0-.89.7-1.6 1.58-1.6h4.22c.87 0 1.58.71 1.58 1.6 0 .89-.7 1.6-1.58 1.6z",fillOpacity:".87"})]}),"BundleSize"),k=(0,y.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M6.92 6.1l2.33 7.99 2.32-8h6.3v.8l-2.37 4.14c.83.27 1.46.76 1.89 1.47.43.71.64 1.55.64 2.51 0 1.2-.31 2.2-.94 3a2.93 2.93 0 01-2.42 1.22 2.9 2.9 0 01-1.96-.72 4.25 4.25 0 01-1.23-1.96l1.31-.55c.2.5.45.9.76 1.18.32.28.69.43 1.12.43.44 0 .82-.26 1.13-.76.31-.51.47-1.12.47-1.84 0-.79-.17-1.4-.5-1.83-.38-.5-.99-.76-1.81-.76h-.64v-.78l2.24-3.92h-2.7l-.16.26-3.3 11.25h-.15l-2.4-8.14-2.41 8.14h-.16L.43 6.1H2.1l2.33 7.99L6 8.71 5.24 6.1h1.68z",fill:"#005A9C"}),(0,h.jsx)("g",{fill:"currentColor",children:(0,h.jsx)("path",{d:"M23.52 6.25l.28 1.62-.98 1.8s-.38-.76-1.01-1.19c-.53-.35-.87-.43-1.41-.33-.7.14-1.48.93-1.82 1.9-.41 1.18-.42 1.74-.43 2.26a4.9 4.9 0 00.11 1.33s-.6-1.06-.59-2.61c0-1.1.19-2.11.72-3.1.47-.87 1.17-1.4 1.8-1.45.63-.07 1.14.23 1.53.55.42.33.83 1.07.83 1.07l.97-1.85zM23.64 15.4s-.43.75-.7 1.04c-.27.28-.76.79-1.36 1.04-.6.25-.91.3-1.5.25a3.03 3.03 0 01-1.34-.52 5.08 5.08 0 01-1.67-2.04s.24.75.39 1.07c.09.18.36.74.74 1.23a3.5 3.5 0 002.1 1.42c1.04.18 1.76-.27 1.94-.38a5.32 5.32 0 001.4-1.43c.1-.14.25-.43.25-.43l-.25-1.25z"})})]}),"W3C"),v=(0,y.Z)((0,h.jsxs)("g",{fill:"none",fillRule:"evenodd",children:[(0,h.jsx)("circle",{fill:"#737373",cx:"12",cy:"12",r:"12"}),(0,h.jsx)("path",{fill:"#BDBDBD",d:"M4 4h16v16H4z"}),(0,h.jsx)("path",{fill:"#FFF",d:"M12 20l8-16H4z"})]}),"MaterialDesign"),T=a(692124),w=(0,b.ZP)("ul")({margin:0,padding:0,listStyle:"none",display:"flex",flexWrap:"wrap",gap:8,"& .MuiChip-root .MuiChip-iconSmall":{marginLeft:4}}),A={"material-ui":"@mui/material","joy-ui":"@mui/joy","base-ui":"@mui/base",system:"@mui/system"};function S(e){var n,a,c=e.markdown.headers,b=e.design,y=(0,T.useTranslate)(),S=null!==(n=null!==(a=c.packageName)&&void 0!==a?a:A[c.productId])&&void 0!==n?n:"@mui/material";return(0,h.jsxs)(w,{children:[c.githubLabel?(0,h.jsx)("li",{children:(0,h.jsx)(p.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"".concat("https://github.com/mui/material-ui","/labels/").concat(encodeURIComponent(c.githubLabel)),icon:o||(o=(0,h.jsx)(u(),{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":y("githubLabel"),"data-ga-event-split":"0.1",label:y("githubLabel")})}):null,(0,h.jsx)("li",{children:(0,h.jsx)(d.Z,{title:y("bundleSizeTooltip"),children:(0,h.jsx)(p.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://bundlephobia.com/package/".concat(S,"@latest"),icon:t||(t=(0,h.jsx)(x,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":y("bundleSize"),"data-ga-event-split":"0.1",label:y("bundleSize")})})}),c.waiAria?(0,h.jsx)("li",{children:(0,h.jsx)(p.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:c.waiAria,icon:r||(r=(0,h.jsx)(k,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"WAI-ARIA","data-ga-event-split":"0.1",label:"WAI-ARIA"})}):null,c.materialDesign?(0,h.jsx)("li",{children:(0,h.jsx)(p.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:c.materialDesign,icon:l||(l=(0,h.jsx)(v,{})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Material Design","data-ga-event-split":"0.1",label:"Material Design"})}):null,!1!==b?s||(s=(0,h.jsxs)(i.Fragment,{children:[(0,h.jsx)("li",{children:(0,h.jsx)(p.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/figma-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(f,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Figma","data-ga-event-split":"0.1",label:"Figma"})}),(0,h.jsx)("li",{children:(0,h.jsx)(p.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/adobe-xd-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(g,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Adobe XD","data-ga-event-split":"0.1",label:"Adobe"})}),(0,h.jsx)("li",{children:(0,h.jsx)(p.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/sketch-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(m,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Sketch","data-ga-event-split":"0.1",label:"Sketch"})})]})):null]})}},680662:function(e,n,a){"use strict";var o=a(526771),t=a(564836);o(n,"__esModule",{value:!0}),n.default=void 0;var r=t(a(391641)),l=a(785893),s=(0,r.default)((0,l.jsx)("path",{d:"m7 10 5 5 5-5z"}),"ArrowDropDown");n.default=s},34915:function(e,n,a){"use strict";var o=a(526771),t=a(564836);o(n,"__esModule",{value:!0}),n.default=void 0;var r=t(a(391641)),l=a(785893),s=(0,r.default)((0,l.jsx)("path",{d:"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM7 9h10c.55 0 1 .45 1 1s-.45 1-1 1H7c-.55 0-1-.45-1-1s.45-1 1-1zm6 5H7c-.55 0-1-.45-1-1s.45-1 1-1h6c.55 0 1 .45 1 1s-.45 1-1 1zm4-6H7c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1z"}),"ChatRounded");n.default=s},814697:function(e,n,a){"use strict";var o=a(526771),t=a(564836);o(n,"__esModule",{value:!0}),n.default=void 0;var r=t(a(391641)),l=a(785893),s=(0,r.default)((0,l.jsx)("path",{d:"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}),"Clear");n.default=s},335172:function(e,n,a){"use strict";a.r(n),a.d(n,{demoComponents:function(){return nn},demos:function(){return ne},docs:function(){return e6},srcComponents:function(){return na}});var o,t,r,l,s,i,p,d,c,u,b,y,h,m,f,g,x,k,v,T,w,A,S,P,C,D,I={};a.r(I),a.d(I,{default:function(){return j.Z}});var R=a(667294),L=a.t(R,2),F=a(528101),M=a(419443),O=a(45697),B=a(520613),E=a(759216),_=a(836852),N=a(680662),Z=a.n(N),V=a(814697),G=a.n(V),j=a(881886),$=a(490512),z=a(149472),W=a(935715),H=a(163804),K=a(648611),U=a(786923),J=a(811546),q=a(785893),Y={100:"#DAECFF",200:"#99CCF3",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0059B2",900:"#003A75"},X={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},Q=(0,J.default)("label")(o||(o=(0,W.Z)(["\n  display: block;\n  font-family: sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 4px;\n"]))),ee=(0,J.default)("div")(function(e){var n=e.theme;return"\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ".concat("dark"===n.palette.mode?X[300]:X[500],";\n  background: ").concat("dark"===n.palette.mode?X[900]:"#fff",";\n  border: 1px solid ").concat("dark"===n.palette.mode?X[700]:X[200],";\n  box-shadow: 0px 2px 4px ").concat("dark"===n.palette.mode?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n  display: flex;\n  gap: 5px;\n  padding-right: 5px;\n  overflow: hidden;\n  width: 320px;\n\n  &.focused {\n    border-color: ").concat(Y[400],";\n    box-shadow: 0 0 0 3px ").concat("dark"===n.palette.mode?Y[600]:Y[200],";\n  }\n\n  &:hover {\n    border-color: ").concat(Y[400],";\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n")}),en=(0,J.default)("input")(function(e){var n=e.theme;return"\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ".concat("dark"===n.palette.mode?X[300]:X[900],";\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n  flex: 1 0 auto;\n")}),ea=(0,J.default)("ul")(function(e){var n=e.theme;return"\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  padding: 6px;\n  margin: 12px 0;\n  width: 320px;\n  border-radius: 12px;\n  overflow: auto;\n  outline: 0px;\n  max-height: 300px;\n  z-index: 1;\n  position: absolute;\n  background: ".concat("dark"===n.palette.mode?X[900]:"#fff",";\n  border: 1px solid ").concat("dark"===n.palette.mode?X[700]:X[200],";\n  color: ").concat("dark"===n.palette.mode?X[300]:X[900],";\n  box-shadow: 0px 2px 3px ").concat("dark"===n.palette.mode?"rgba(0,0,0, 0.50)":"rgba(0,0,0, 0.05)",";\n  ")}),eo=(0,J.default)("li")(function(e){var n=e.theme;return"\n  list-style: none;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: default;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &[aria-selected=true] {\n    background-color: ".concat("dark"===n.palette.mode?Y[900]:Y[100],";\n    color: ").concat("dark"===n.palette.mode?Y[100]:Y[900],";\n  }\n\n  &.Mui-focused,\n  &.Mui-focusVisible {\n    background-color: ").concat("dark"===n.palette.mode?X[800]:X[100],";\n    color: ").concat("dark"===n.palette.mode?X[300]:X[900],";\n  }\n\n  &.Mui-focusVisible {\n    box-shadow: 0 0 0 3px ").concat("dark"===n.palette.mode?Y[500]:Y[200],";\n  }\n\n  &[aria-selected=true].Mui-focused,\n  &[aria-selected=true].Mui-focusVisible {\n    background-color: ").concat("dark"===n.palette.mode?Y[900]:Y[100],";\n    color: ").concat("dark"===n.palette.mode?Y[100]:Y[900],";\n  }\n  ")}),et=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],er=["Firefox","Google Chrome","Microsoft Edge","Safari","Opera"],el={100:"#DAECFF",200:"#99CCF3",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0059B2",900:"#003A75"},es={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},ei=(0,J.default)("div")(t||(t=(0,W.Z)(["\n  position: relative;\n"]))),ep=(0,J.default)("div")(function(e){var n=e.theme;return"\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ".concat("dark"===n.palette.mode?es[300]:es[500],";\n  background: ").concat("dark"===n.palette.mode?es[900]:"#fff",";\n  border: 1px solid ").concat("dark"===n.palette.mode?es[700]:es[200],";\n  box-shadow: 0px 2px 4px ").concat("dark"===n.palette.mode?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n  display: flex;\n  gap: 5px;\n  padding-right: 5px;\n  overflow: hidden;\n  width: 320px;\n\n  &.focused {\n    border-color: ").concat(el[400],";\n    box-shadow: 0 0 0 3px ").concat("dark"===n.palette.mode?el[700]:el[200],";\n  }\n\n  &:hover {\n    border-color: ").concat(el[400],";\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n")}),ed=(0,J.default)("input")(function(e){var n=e.theme;return"\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ".concat("dark"===n.palette.mode?es[300]:es[900],";\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n  flex: 1 0 auto;\n")}),ec=(0,J.default)("ul")(function(e){var n=e.theme;return"\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  padding: 6px;\n  margin: 12px 0;\n  max-width: 320px;\n  border-radius: 12px;\n  overflow: auto;\n  outline: 0px;\n  max-height: 300px;\n  z-index: 1;\n  position: absolute;\n  left: 0;\n  right: 0;\n  background: ".concat("dark"===n.palette.mode?es[900]:"#fff",";\n  border: 1px solid ").concat("dark"===n.palette.mode?es[700]:es[200],";\n  color: ").concat("dark"===n.palette.mode?es[300]:es[900],";\n  box-shadow: 0px 4px 6px ").concat("dark"===n.palette.mode?"rgba(0,0,0, 0.50)":"rgba(0,0,0, 0.05)",";\n  ")}),eu=(0,J.default)("li")(function(e){var n=e.theme;return"\n  list-style: none;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: default;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &[aria-selected=true] {\n    background-color: ".concat("dark"===n.palette.mode?el[900]:el[100],";\n    color: ").concat("dark"===n.palette.mode?el[100]:el[900],";\n  }\n\n  &.Mui-focused,\n  &.Mui-focusVisible {\n    background-color: ").concat("dark"===n.palette.mode?es[800]:es[100],";\n    color: ").concat("dark"===n.palette.mode?es[300]:es[900],";\n  }\n\n  &.Mui-focusVisible {\n    box-shadow: 0 0 0 3px ").concat("dark"===n.palette.mode?el[500]:el[200],";\n  }\n\n  &[aria-selected=true].Mui-focused,\n  &[aria-selected=true].Mui-focusVisible {\n    background-color: ").concat("dark"===n.palette.mode?el[900]:el[100],";\n    color: ").concat("dark"===n.palette.mode?el[100]:el[900],";\n  }\n  ")}),eb=(0,J.default)("div")(r||(r=(0,W.Z)(["\n  display: flex;\n  flex-flow: column nowrap;\n  gap: 4px;\n"]))),ey=(0,J.default)("pre")(function(e){var n=e.theme;return{margin:"0.5rem 0",fontSize:"0.75rem","& code":{backgroundColor:"light"===n.palette.mode?es[100]:es[900],border:"1px solid",borderColor:"light"===n.palette.mode?es[300]:es[700],color:"light"===n.palette.mode?"#000":"#fff",padding:"0.125rem 0.25rem",borderRadius:3}}}),eh=a(80117),em=a(355676),ef=a(143221),eg=["disableClearable","disabled","readOnly"],ex=R.forwardRef(function(e,n){var a=e.disableClearable,o=e.disabled,t=void 0!==o&&o,r=e.readOnly,p=void 0!==r&&r,d=(0,eh.Z)(e,eg),c=(0,U.o)((0,H.Z)((0,H.Z)({},e),{},{componentName:"BaseAutocompleteIntroduction"})),u=c.getRootProps,b=c.getInputProps,y=c.getPopupIndicatorProps,h=c.getClearProps,m=c.getListboxProps,f=c.getOptionProps,g=c.dirty,x=c.id,k=c.popupOpen,v=c.focused,T=c.anchorEl,w=c.setAnchorEl,A=c.groupedOptions,S=(0,j.Z)(n,w);return(0,q.jsxs)(R.Fragment,{children:[(0,q.jsxs)(eT,(0,H.Z)((0,H.Z)({},u(d)),{},{ref:S,className:v?"focused":void 0,children:[(0,q.jsx)(ew,(0,H.Z)({id:x,disabled:t,readOnly:p},b())),!(void 0!==a&&a)&&!t&&g&&!p&&(0,q.jsx)(eD,(0,H.Z)((0,H.Z)({},h()),{},{children:l||(l=(0,q.jsx)(G(),{}))})),(0,q.jsx)(eC,(0,H.Z)((0,H.Z)({},y()),{},{className:k?"popupOpen":void 0,children:s||(s=(0,q.jsx)(Z(),{}))}))]})),T?(0,q.jsx)(ef.r,{open:k,anchorEl:T,slots:{root:eA},modifiers:[{name:"flip",enabled:!1},{name:"preventOverflow",enabled:!1}],children:(0,q.jsxs)(eS,(0,H.Z)((0,H.Z)({},m()),{},{children:[A.map(function(e,n){var a=f({option:e,index:n});return(0,q.jsx)(eP,(0,H.Z)((0,H.Z)({},a),{},{children:e.label}))}),0===A.length&&(i||(i=(0,q.jsx)(eI,{children:"No results"})))]}))}):null]})}),ek={100:"#DAECFF",200:"#99CCF3",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0059B2",900:"#003A75"},ev={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},eT=(0,J.default)("div")(function(e){var n=e.theme;return"\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ".concat("dark"===n.palette.mode?ev[300]:ev[500],";\n  background: ").concat("dark"===n.palette.mode?ev[900]:"#fff",";\n  border: 1px solid ").concat("dark"===n.palette.mode?ev[700]:ev[200],";\n  box-shadow: 0px 2px 4px ").concat("dark"===n.palette.mode?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n  display: flex;\n  gap: 5px;\n  padding-right: 5px;\n  overflow: hidden;\n  width: 320px;\n\n  &.focused {\n    border-color: ").concat(ek[400],";\n    box-shadow: 0 0 0 3px ").concat("dark"===n.palette.mode?ek[700]:ek[200],";\n  }\n\n  &:hover {\n    background: ").concat("dark"===n.palette.mode?ev[800]:ev[50],";\n    border-color: ").concat("dark"===n.palette.mode?ev[600]:ev[300],";\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n")}),ew=(0,J.default)("input")(function(e){var n=e.theme;return"\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ".concat("dark"===n.palette.mode?ev[300]:ev[900],";\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n  flex: 1 0 auto;\n")}),eA=(0,J.default)("div")(d||(d=(0,W.Z)(["\n  position: relative;\n  z-index: 1001;\n  width: 320px;\n"]))),eS=(0,J.default)("ul")(function(e){var n=e.theme;return"\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  padding: 6px;\n  margin: 12px 0;\n  min-width: 320px;\n  border-radius: 12px;\n  overflow: auto;\n  outline: 0px;\n  max-height: 300px;\n  z-index: 1;\n  background: ".concat("dark"===n.palette.mode?ev[900]:"#fff",";\n  border: 1px solid ").concat("dark"===n.palette.mode?ev[700]:ev[200],";\n  color: ").concat("dark"===n.palette.mode?ev[300]:ev[900],";\n  box-shadow: 0px 4px 6px ").concat("dark"===n.palette.mode?"rgba(0,0,0, 0.3)":"rgba(0,0,0, 0.05)",";\n  ")}),eP=(0,J.default)("li")(function(e){var n=e.theme;return"\n  list-style: none;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: default;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &[aria-selected=true] {\n    background-color: ".concat("dark"===n.palette.mode?ek[900]:ek[100],";\n    color: ").concat("dark"===n.palette.mode?ek[100]:ek[900],";\n  }\n\n  &.Mui-focused,\n  &.Mui-focusVisible {\n    background-color: ").concat("dark"===n.palette.mode?ev[800]:ev[100],";\n    color: ").concat("dark"===n.palette.mode?ev[300]:ev[900],";\n  }\n\n  &.Mui-focusVisible {\n    box-shadow: 0 0 0 3px ").concat("dark"===n.palette.mode?ek[500]:ek[200],";\n  }\n\n  &[aria-selected=true].Mui-focused,\n  &[aria-selected=true].Mui-focusVisible {\n    background-color: ").concat("dark"===n.palette.mode?ek[900]:ek[100],";\n    color: ").concat("dark"===n.palette.mode?ek[100]:ek[900],";\n  }\n  ")}),eC=(0,J.default)(em.z)(function(e){var n=e.theme;return"\n    outline: 0;\n    box-shadow: none;\n    border: 0;\n    border-radius: 4px;\n    background-color: transparent;\n    align-self: center;\n    padding: 0 2px;\n\n    &:hover {\n      background-color: ".concat("dark"===n.palette.mode?ev[700]:ek[100],";\n      cursor: pointer;\n    }\n\n    & > svg {\n      transform: translateY(2px);\n    }\n\n    &.popupOpen > svg {\n      transform: translateY(2px) rotate(180deg);\n    }\n  ")}),eD=(0,J.default)(em.z)(function(e){var n=e.theme;return"\n    outline: 0;\n    box-shadow: none;\n    border: 0;\n    border-radius: 4px;\n    background-color: transparent;\n    align-self: center;\n    padding: 0 2px;\n\n    &:hover {\n      background-color: ".concat("dark"===n.palette.mode?ev[700]:ek[100],";\n      cursor: pointer;\n    }\n\n    & > svg {\n      transform: translateY(2px) scale(0.9);\n    }\n  ")}),eI=(0,J.default)("li")(c||(c=(0,W.Z)(["\n  list-style: none;\n  padding: 8px;\n  cursor: default;\n"]))),eR=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],eL=R.forwardRef(function(e,n){var a=(0,U.o)(e),o=a.getRootProps,t=a.getInputProps,r=a.getListboxProps,l=a.getOptionProps,s=a.groupedOptions,i=a.focused,p=a.popupOpen,d=a.anchorEl,c=a.setAnchorEl,b=(0,j.Z)(n,c);return(0,q.jsxs)(R.Fragment,{children:[(0,q.jsx)(eO,(0,H.Z)((0,H.Z)({},o()),{},{ref:b,className:i?"focused":"",children:(0,q.jsx)(eB,(0,H.Z)({},t()))})),d&&(0,q.jsx)(ef.r,{open:p,anchorEl:d,slots:{root:eE},children:(0,q.jsx)(e_,(0,H.Z)((0,H.Z)({},r()),{},{children:s.length>0?s.map(function(e,n){return(0,q.jsx)(eN,(0,H.Z)((0,H.Z)({},l({option:e,index:n})),{},{children:e.label}))}):u||(u=(0,q.jsx)(eZ,{children:"No results"}))}))})]})}),eF={100:"#DAECFF",200:"#99CCF3",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0059B2",900:"#003A75"},eM={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},eO=(0,J.default)("div")(function(e){var n=e.theme;return"\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ".concat("dark"===n.palette.mode?eM[300]:eM[500],";\n  background: ").concat("dark"===n.palette.mode?eM[900]:"#fff",";\n  border: 1px solid ").concat("dark"===n.palette.mode?eM[700]:eM[200],";\n  box-shadow: 0px 2px 4px ").concat("dark"===n.palette.mode?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n  display: flex;\n  gap: 5px;\n  padding-right: 5px;\n  overflow: hidden;\n  width: 320px;\n  margin: 1.5rem 0;\n\n  &.focused {\n    border-color: ").concat(eF[400],";\n    box-shadow: 0 0 0 3px ").concat("dark"===n.palette.mode?eF[700]:eF[200],";\n  }\n\n  &:hover {\n    border-color: ").concat(eF[400],";\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n")}),eB=(0,J.default)("input")(function(e){var n=e.theme;return"\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ".concat("dark"===n.palette.mode?eM[300]:eM[900],";\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n  flex: 1 0 auto;\n")}),eE=(0,J.default)("div")(b||(b=(0,W.Z)(["\n  position: relative;\n  z-index: 1001;\n  width: 320px;\n"]))),e_=(0,J.default)("ul")(function(e){var n=e.theme;return"\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  padding: 6px;\n  margin: 12px 0;\n  min-width: 320px;\n  border-radius: 12px;\n  overflow: auto;\n  outline: 0px;\n  max-height: 300px;\n  z-index: 1;\n  background: ".concat("dark"===n.palette.mode?eM[900]:"#fff",";\n  border: 1px solid ").concat("dark"===n.palette.mode?eM[700]:eM[200],";\n  color: ").concat("dark"===n.palette.mode?eM[300]:eM[900],";\n  box-shadow: 0px 4px 6px ").concat("dark"===n.palette.mode?"rgba(0,0,0, 0.50)":"rgba(0,0,0, 0.05)",";\n  ")}),eN=(0,J.default)("li")(function(e){var n=e.theme;return"\n  list-style: none;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: default;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &[aria-selected=true] {\n    background-color: ".concat("dark"===n.palette.mode?eF[900]:eF[100],";\n    color: ").concat("dark"===n.palette.mode?eF[100]:eF[900],";\n  }\n\n  &.Mui-focused,\n  &.Mui-focusVisible {\n    background-color: ").concat("dark"===n.palette.mode?eM[800]:eM[100],";\n    color: ").concat("dark"===n.palette.mode?eM[300]:eM[900],";\n  }\n\n  &.Mui-focusVisible {\n    box-shadow: 0 0 0 3px ").concat("dark"===n.palette.mode?eF[500]:eF[200],";\n  }\n\n  &[aria-selected=true].Mui-focused,\n  &[aria-selected=true].Mui-focusVisible {\n    background-color: ").concat("dark"===n.palette.mode?eF[900]:eF[100],";\n    color: ").concat("dark"===n.palette.mode?eF[100]:eF[900],";\n  }\n  ")}),eZ=(0,J.default)("li")(y||(y=(0,W.Z)(["\n  list-style: none;\n  padding: 8px;\n  cursor: default;\n"]))),eV=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],eG=["disableClearable","disabled","readOnly","options","isOptionEqualToValue"],ej=R.forwardRef(function(e,n){var a=e.disableClearable,o=e.disabled,t=void 0!==o&&o,r=e.readOnly,l=void 0!==r&&r,s=(e.options,e.isOptionEqualToValue,(0,eh.Z)(e,eG)),i=(0,U.o)((0,H.Z)((0,H.Z)({},e),{},{componentName:"BaseAutocompleteIntroduction"})),p=i.getRootProps,d=i.getInputProps,c=i.getPopupIndicatorProps,u=i.getClearProps,b=i.getListboxProps,y=i.getOptionProps,f=i.dirty,g=i.id,x=i.popupOpen,k=i.focused,v=i.anchorEl,T=i.setAnchorEl,w=i.groupedOptions,A=(0,j.Z)(n,T);return(0,q.jsxs)(R.Fragment,{children:[(0,q.jsxs)("div",(0,H.Z)((0,H.Z)({},p(s)),{},{ref:A,className:"flex gap-[5px] pr-[5px] overflow-hidden w-80 rounded-lg bg-white dark:bg-gray-800 border border-solid border-gray-200 dark:border-gray-700 hover:border-violet-400 dark:hover:border-violet-400 focus-visible:outline-0 shadow-[0_2px_4px_rgb(0_0_0_/_0.05)] dark:shadow-[0_2px_4px_rgb(0_0_0_/_0.5)] "+(k?"border-violet-400 dark:border-violet-400 shadow-[0_0_0_3px_transparent] shadow-violet-200 dark:shadow-violet-500":"shadow-[0_2px_2px_transparent] shadow-gray-50 dark:shadow-gray-900"),children:[(0,q.jsx)("input",(0,H.Z)((0,H.Z)({id:g,disabled:t,readOnly:l},d()),{},{className:"text-sm leading-[1.5] text-gray-900 dark:text-gray-300 bg-inherit border-0 rounded-[inherit] px-3 py-2 outline-0 grow shrink-0 basis-auto"})),!(void 0!==a&&a)&&!t&&f&&!l&&(0,q.jsx)(em.z,(0,H.Z)((0,H.Z)({},u()),{},{className:"self-center outline-0 shadow-none border-0 py-0 px-0.5 rounded-[4px] bg-transparent hover:bg-violet-100 dark:hover:bg-gray-700 hover:cursor-pointer",children:h||(h=(0,q.jsx)(G(),{className:"translate-y-[2px] scale-90"}))})),(0,q.jsx)(em.z,(0,H.Z)((0,H.Z)({},c()),{},{className:"self-center outline-0 shadow-none border-0 py-0 px-0.5 rounded-[4px] bg-transparent hover:bg-violet-100 dark:hover:bg-gray-700 hover:cursor-pointer",children:(0,q.jsx)(Z(),{className:"translate-y-[2px]"+(x?" rotate-180":"")})}))]})),v&&(0,q.jsx)(ef.r,{open:x,anchorEl:v,slotProps:{root:{className:"relative z-[1001] w-80"}},modifiers:[{name:"flip",enabled:!1},{name:"preventOverflow",enabled:!1}],children:(0,q.jsxs)("ul",(0,H.Z)((0,H.Z)({},b()),{},{className:"text-sm box-border p-1.5 my-3 mx-0 min-w-[320px] rounded-xl overflow-auto outline-0 max-h-[300px] z-[1] bg-white dark:bg-gray-800 border border-solid border-gray-200 dark:border-gray-900 text-gray-900 dark:text-gray-200 shadow-[0_4px_30px_transparent] shadow-gray-200 dark:shadow-gray-900",children:[w.map(function(e,n){var a=y({option:e,index:n});return(0,q.jsx)("li",(0,H.Z)((0,H.Z)({},a),{},{className:"list-none p-2 rounded-lg cursor-default last-of-type:border-b-0 hover:cursor-pointer aria-selected:bg-violet-100 dark:aria-selected:bg-violet-900 aria-selected:text-violet-900 dark:aria-selected:text-violet-100 ui-focused:bg-gray-100 dark:ui-focused:bg-gray-700 ui-focus-visible:bg-gray-100 dark:ui-focus-visible:bg-gray-800 ui-focused:text-gray-900 dark:ui-focused:text-gray-300 ui-focus-visible:text-gray-900 dark:ui-focus-visible:text-gray-300 ui-focus-visible:shadow-[0_0_0_3px_transparent] ui-focus-visible:shadow-violet-200 dark:ui-focus-visible:shadow-violet-500 ui-focused:aria-selected:bg-violet-100 dark:ui-focused:aria-selected:bg-violet-900 ui-focus-visible:aria-selected:bg-violet-100 dark:ui-focus-visible:aria-selected:bg-violet-900 ui-focused:aria-selected:text-violet-900 dark:ui-focused:aria-selected:text-violet-100 ui-focus-visible:aria-selected:text-violet-900 dark:ui-focus-visible:aria-selected:text-violet-100",children:e.label}))}),0===w.length&&(m||(m=(0,q.jsx)("li",{className:"list-none p-2 cursor-default",children:"No results"})))]}))})]})}),e$=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],ez=["disableClearable","disabled","readOnly","options","isOptionEqualToValue"],eW=R.forwardRef(function(e,n){var a=e.disableClearable,o=e.disabled,t=void 0!==o&&o,r=e.readOnly,l=void 0!==r&&r,s=(e.options,e.isOptionEqualToValue,(0,eh.Z)(e,ez)),i=(0,U.o)((0,H.Z)((0,H.Z)({},e),{},{componentName:"BaseAutocompleteIntroduction"})),p=i.getRootProps,d=i.getInputProps,c=i.getPopupIndicatorProps,u=i.getClearProps,b=i.getListboxProps,y=i.getOptionProps,h=i.dirty,m=i.id,x=i.popupOpen,k=i.focused,v=i.anchorEl,T=i.setAnchorEl,w=i.groupedOptions,A=(0,j.Z)(n,T);return(0,q.jsxs)(R.Fragment,{children:[(0,q.jsxs)("div",(0,H.Z)((0,H.Z)({},p(s)),{},{ref:A,className:"flex gap-[5px] pr-[5px] overflow-hidden w-80 rounded-lg bg-white dark:bg-gray-800 border border-solid border-gray-200 dark:border-gray-700 hover:border-violet-400 dark:hover:border-violet-400 focus-visible:outline-0 shadow-[0_2px_4px_rgb(0_0_0_/_0.05)] dark:shadow-[0_2px_4px_rgb(0_0_0_/_0.5)] "+(k?"border-violet-400 dark:border-violet-400 shadow-[0_0_0_3px_transparent] shadow-violet-200 dark:shadow-violet-500":"shadow-[0_2px_2px_transparent] shadow-gray-50 dark:shadow-gray-900"),children:[(0,q.jsx)("input",(0,H.Z)((0,H.Z)({id:m,disabled:t,readOnly:l},d()),{},{className:"text-sm leading-[1.5] text-gray-900 dark:text-gray-300 bg-inherit border-0 rounded-[inherit] px-3 py-2 outline-0 grow shrink-0 basis-auto"})),!(void 0!==a&&a)&&!t&&h&&!l&&(0,q.jsx)(em.z,(0,H.Z)((0,H.Z)({},u()),{},{className:"self-center outline-0 shadow-none border-0 py-0 px-0.5 rounded-[4px] bg-transparent hover:bg-violet-100 dark:hover:bg-gray-700 hover:cursor-pointer",children:f||(f=(0,q.jsx)(G(),{className:"translate-y-[2px] scale-90"}))})),(0,q.jsx)(em.z,(0,H.Z)((0,H.Z)({},c()),{},{className:"self-center outline-0 shadow-none border-0 py-0 px-0.5 rounded-[4px] bg-transparent hover:bg-violet-100 dark:hover:bg-gray-700 hover:cursor-pointer",children:(0,q.jsx)(Z(),{className:"translate-y-[2px]"+(x?" rotate-180":"")})}))]})),v&&(0,q.jsx)(ef.r,{open:x,anchorEl:v,slotProps:{root:{className:"relative z-[1001] w-80"}},modifiers:[{name:"flip",enabled:!1},{name:"preventOverflow",enabled:!1}],children:(0,q.jsxs)("ul",(0,H.Z)((0,H.Z)({},b()),{},{className:"text-sm box-border p-1.5 my-3 mx-0 min-w-[320px] rounded-xl overflow-auto outline-0 max-h-[300px] z-[1] bg-white dark:bg-gray-800 border border-solid border-gray-200 dark:border-gray-900 text-gray-900 dark:text-gray-200 shadow-[0_4px_30px_transparent] shadow-gray-200 dark:shadow-gray-900",children:[w.map(function(e,n){var a=y({option:e,index:n});return(0,q.jsx)("li",(0,H.Z)((0,H.Z)({},a),{},{className:"list-none p-2 rounded-lg cursor-default last-of-type:border-b-0 hover:cursor-pointer aria-selected:bg-violet-100 dark:aria-selected:bg-violet-900 aria-selected:text-violet-900 dark:aria-selected:text-violet-100 ui-focused:bg-gray-100 dark:ui-focused:bg-gray-700 ui-focus-visible:bg-gray-100 dark:ui-focus-visible:bg-gray-800 ui-focused:text-gray-900 dark:ui-focused:text-gray-300 ui-focus-visible:text-gray-900 dark:ui-focus-visible:text-gray-300 ui-focus-visible:shadow-[0_0_0_3px_transparent] ui-focus-visible:shadow-violet-200 dark:ui-focus-visible:shadow-violet-500 ui-focused:aria-selected:bg-violet-100 dark:ui-focused:aria-selected:bg-violet-900 ui-focus-visible:aria-selected:bg-violet-100 dark:ui-focus-visible:aria-selected:bg-violet-900 ui-focused:aria-selected:text-violet-900 dark:ui-focused:aria-selected:text-violet-100 ui-focus-visible:aria-selected:text-violet-900 dark:ui-focus-visible:aria-selected:text-violet-100",children:e.label}))}),0===w.length&&(g||(g=(0,q.jsx)("li",{className:"list-none p-2 cursor-default",children:"No results"})))]}))})]})}),eH=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],eK=a(248683),eU=a(721923),eJ=["disableClearable","disabled","readOnly","options"],eq=R.forwardRef(function(e,n){var a=e.disableClearable,o=e.disabled,t=void 0!==o&&o,r=e.readOnly,l=void 0!==r&&r,s=(e.options,(0,eh.Z)(e,eJ)),i=(0,U.o)((0,H.Z)((0,H.Z)({},e),{},{componentName:"BaseAutocompleteIntroduction"})),p=i.getRootProps,d=i.getInputProps,c=i.getPopupIndicatorProps,u=i.getClearProps,b=i.getListboxProps,y=i.getOptionProps,h=i.dirty,m=i.id,f=i.popupOpen,g=i.focused,w=i.anchorEl,A=i.setAnchorEl,S=i.groupedOptions,P=(0,j.Z)(n,A);return(0,q.jsxs)(R.Fragment,{children:[(0,q.jsxs)("div",(0,H.Z)((0,H.Z)({},p(s)),{},{ref:P,className:"Autocomplete__root"+(g?" focused":""),children:[(0,q.jsx)(eK.I,{id:m,ref:A,disabled:t,readOnly:l,slotProps:{root:{className:"Autocomplete__input-root"},input:(0,H.Z)({className:"Autocomplete__input"},d())}}),!(void 0!==a&&a)&&!t&&h&&!l&&(0,q.jsx)(em.z,(0,H.Z)((0,H.Z)({},u()),{},{className:"Autocomplete__indicator clear-indicator",children:x||(x=(0,q.jsx)(G(),{}))})),(0,q.jsx)(em.z,(0,H.Z)((0,H.Z)({},c()),{},{className:"Autocomplete__indicator popup-indicator"+(f?" popupOpen":""),children:k||(k=(0,q.jsx)(Z(),{}))}))]})),w?(0,q.jsx)(ef.r,{open:f,anchorEl:w,slotProps:{root:{className:"Autocomplete__popper"}},modifiers:[{name:"flip",enabled:!1},{name:"preventOverflow",enabled:!1}],children:(0,q.jsxs)("ul",(0,H.Z)((0,H.Z)({},b()),{},{className:"Autocomplete__listbox",children:[S.map(function(e,n){var a=y({option:e,index:n});return(0,q.jsx)("li",(0,H.Z)((0,H.Z)({},a),{},{className:"Autocomplete__option",children:e.label}))}),0===S.length&&(v||(v=(0,q.jsx)("li",{className:"Autocomplete__no-options",children:"No results"})))]}))}):null,T||(T=(0,q.jsx)(eQ,{}))]})}),eY={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},eX={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function eQ(){var e="dark"===(0,eU.Z)().palette.mode;return(0,q.jsx)("style",{children:"\n      .Autocomplete__root {\n        font-family: IBM Plex Sans, sans-serif;\n        font-weight: 400;\n        border-radius: 8px;\n        background: ".concat(e?eX[900]:"#fff",";\n        border: 1px solid ").concat(e?eX[700]:eX[200],";\n        color: ").concat(e?eX[300]:eX[900],";\n        box-shadow: 0px 2px 4px ").concat(e?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n        display: flex;\n        gap: 5px;\n        overflow: hidden;\n        width: 320px;\n\n        &.focused {\n          border-color: ").concat(eY[400],";\n          box-shadow: 0 0 0 3px ").concat(e?eY[500]:eY[200],";\n        }\n\n        &:hover {\n          border-color: ").concat(eY[400],";\n        }\n\n        &:focus-visible {\n          outline: 0;\n        }\n      }\n\n      .Autocomplete__popper {\n        position: relative;\n        z-index: 1001;\n        width: 320px;\n      }\n\n      .Autocomplete__input-root {\n        background: inherit;\n        border-radius: inherit;\n        flex: 1 0 auto;\n      }\n\n      .Autocomplete__input {\n        font-size: 0.875rem;\n        font-family: inherit;\n        font-weight: 400;\n        line-height: 1.5;\n        color: ").concat(e?eX[300]:eX[900],";\n        background: inherit;\n        border: none;\n        border-radius: inherit;\n        padding: 8px 12px;\n        outline: 0;\n      }\n\n      .Autocomplete__indicator {\n        outline: 0;\n        box-shadow: none;\n        border: 0;\n        border-radius: 4px;\n        background-color: transparent;\n        align-self: center;\n        padding: 0 2px;\n        margin-right: 4px;\n\n        &:hover {\n          background-color: ").concat(e?eX[700]:eY[100],";\n          cursor: pointer;\n        }\n      }\n\n      .Autocomplete__indicator.popup-indicator > svg {\n        transform: translateY(2px);\n      }\n\n      .Autocomplete__indicator.popup-indicator.popupOpen > svg {\n        transform: translateY(2px) rotate(180deg);\n      }\n\n      .Autocomplete__indicator.clear-indicator > svg {\n        transform: translateY(2px) scale(0.9);\n      }\n\n      .Autocomplete__listbox {\n        font-family: IBM Plex Sans, sans-serif;\n        font-size: 0.875rem;\n        box-sizing: border-box;\n        padding: 6px;\n        margin: 12px 0;\n        width: 100%;\n        border-radius: 12px;\n        overflow: auto;\n        outline: 0px;\n        max-height: 300px;\n        z-index: 1;\n        position: absolute;\n        background: ").concat(e?eX[900]:"#fff",";\n        border: 1px solid ").concat(e?eX[700]:eX[200],";\n        color: ").concat(e?eX[300]:eX[900],";\n        box-shadow: 0px 4px 6px ").concat(e?"rgba(0,0,0, 0.50)":"rgba(0,0,0, 0.05)",";\n      }\n\n      .Autocomplete__option {\n        list-style: none;\n        padding: 8px;\n        border-radius: 8px;\n        cursor: default;\n\n        &:last-of-type {\n          border-bottom: none;\n        }\n\n        &:hover {\n          cursor: pointer;\n        }\n\n        &[aria-selected=true] {\n          background-color: ").concat(e?eY[900]:eY[100],";\n          color: ").concat(e?eY[100]:eY[900],";\n        }\n\n        &.Mui-focused,\n        &.Mui-focusVisible {\n          background-color: ").concat(e?eX[800]:eX[100],";\n          color: ").concat(e?eX[300]:eX[900],";\n        }\n\n        &.Mui-focusVisible {\n          box-shadow: 0 0 0 3px ").concat(e?eY[500]:eY[200],";\n        }\n\n        &[aria-selected=true].Mui-focused,\n        &[aria-selected=true].Mui-focusVisible {\n          background-color: ").concat(e?eY[900]:eY[100],";\n          color: ").concat(e?eY[100]:eY[900],";\n        }\n      }\n\n      .Autocomplete__no-options {\n        list-style: none;\n        padding: 8px;\n        cursor: default;\n      }\n      ")})}var e0=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],e1=["disableClearable","disabled","readOnly","options"],e9=R.forwardRef(function(e,n){var a=e.disableClearable,o=e.disabled,t=void 0!==o&&o,r=e.readOnly,l=void 0!==r&&r,s=(e.options,(0,eh.Z)(e,e1)),i=(0,U.o)((0,H.Z)((0,H.Z)({},e),{},{componentName:"BaseAutocompleteIntroduction"})),p=i.getRootProps,d=i.getInputProps,c=i.getPopupIndicatorProps,u=i.getClearProps,b=i.getListboxProps,y=i.getOptionProps,h=i.dirty,m=i.id,f=i.popupOpen,g=i.focused,x=i.anchorEl,k=i.setAnchorEl,v=i.groupedOptions,T=(0,j.Z)(n,k);return(0,q.jsxs)(R.Fragment,{children:[(0,q.jsxs)("div",(0,H.Z)((0,H.Z)({},p(s)),{},{ref:T,className:"Autocomplete__root"+(g?" focused":""),children:[(0,q.jsx)(eK.I,{id:m,ref:k,disabled:t,readOnly:l,slotProps:{root:{className:"Autocomplete__input-root"},input:(0,H.Z)({className:"Autocomplete__input"},d())}}),!(void 0!==a&&a)&&!t&&h&&!l&&(0,q.jsx)(em.z,(0,H.Z)((0,H.Z)({},u()),{},{className:"Autocomplete__indicator clear-indicator",children:A||(A=(0,q.jsx)(G(),{}))})),(0,q.jsx)(em.z,(0,H.Z)((0,H.Z)({},c()),{},{className:"Autocomplete__indicator popup-indicator"+(f?" popupOpen":""),children:S||(S=(0,q.jsx)(Z(),{}))}))]})),x?(0,q.jsx)(ef.r,{open:f,anchorEl:x,slotProps:{root:{className:"Autocomplete__popper"}},modifiers:[{name:"flip",enabled:!1},{name:"preventOverflow",enabled:!1}],children:(0,q.jsxs)("ul",(0,H.Z)((0,H.Z)({},b()),{},{className:"Autocomplete__listbox",children:[v.map(function(e,n){var a=y({option:e,index:n});return(0,q.jsx)("li",(0,H.Z)((0,H.Z)({},a),{},{className:"Autocomplete__option",children:e.label}))}),0===v.length&&(P||(P=(0,q.jsx)("li",{className:"Autocomplete__no-options",children:"No results"})))]}))}):null,C||(C=(0,q.jsx)(e4,{}))]})}),e2={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},e5={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function e4(){var e="dark"===(0,eU.Z)().palette.mode;return(0,q.jsx)("style",{children:"\n      .Autocomplete__root {\n        font-family: IBM Plex Sans, sans-serif;\n        font-weight: 400;\n        border-radius: 8px;\n        background: ".concat(e?e5[900]:"#fff",";\n        border: 1px solid ").concat(e?e5[700]:e5[200],";\n        color: ").concat(e?e5[300]:e5[900],";\n        box-shadow: 0px 2px 4px ").concat(e?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n        display: flex;\n        gap: 5px;\n        overflow: hidden;\n        width: 320px;\n\n        &.focused {\n          border-color: ").concat(e2[400],";\n          box-shadow: 0 0 0 3px ").concat(e?e2[500]:e2[200],";\n        }\n\n        &:hover {\n          border-color: ").concat(e2[400],";\n        }\n\n        &:focus-visible {\n          outline: 0;\n        }\n      }\n\n      .Autocomplete__popper {\n        position: relative;\n        z-index: 1001;\n        width: 320px;\n      }\n\n      .Autocomplete__input-root {\n        background: inherit;\n        border-radius: inherit;\n        flex: 1 0 auto;\n      }\n\n      .Autocomplete__input {\n        font-size: 0.875rem;\n        font-family: inherit;\n        font-weight: 400;\n        line-height: 1.5;\n        color: ").concat(e?e5[300]:e5[900],";\n        background: inherit;\n        border: none;\n        border-radius: inherit;\n        padding: 8px 12px;\n        outline: 0;\n      }\n\n      .Autocomplete__indicator {\n        outline: 0;\n        box-shadow: none;\n        border: 0;\n        border-radius: 4px;\n        background-color: transparent;\n        align-self: center;\n        padding: 0 2px;\n        margin-right: 4px;\n\n        &:hover {\n          background-color: ").concat(e?e5[700]:e2[100],";\n          cursor: pointer;\n        }\n      }\n\n      .Autocomplete__indicator.popup-indicator > svg {\n        transform: translateY(2px);\n      }\n\n      .Autocomplete__indicator.popup-indicator.popupOpen > svg {\n        transform: translateY(2px) rotate(180deg);\n      }\n\n      .Autocomplete__indicator.clear-indicator > svg {\n        transform: translateY(2px) scale(0.9);\n      }\n\n      .Autocomplete__listbox {\n        font-family: IBM Plex Sans, sans-serif;\n        font-size: 0.875rem;\n        box-sizing: border-box;\n        padding: 6px;\n        margin: 12px 0;\n        width: 100%;\n        border-radius: 12px;\n        overflow: auto;\n        outline: 0px;\n        max-height: 300px;\n        z-index: 1;\n        position: absolute;\n        background: ").concat(e?e5[900]:"#fff",";\n        border: 1px solid ").concat(e?e5[700]:e5[200],";\n        color: ").concat(e?e5[300]:e5[900],";\n        box-shadow: 0px 4px 6px ").concat(e?"rgba(0,0,0, 0.50)":"rgba(0,0,0, 0.05)",";\n      }\n\n      .Autocomplete__option {\n        list-style: none;\n        padding: 8px;\n        border-radius: 8px;\n        cursor: default;\n\n        &:last-of-type {\n          border-bottom: none;\n        }\n\n        &:hover {\n          cursor: pointer;\n        }\n\n        &[aria-selected=true] {\n          background-color: ").concat(e?e2[900]:e2[100],";\n          color: ").concat(e?e2[100]:e2[900],";\n        }\n\n        &.Mui-focused,\n        &.Mui-focusVisible {\n          background-color: ").concat(e?e5[800]:e5[100],";\n          color: ").concat(e?e5[300]:e5[900],";\n        }\n\n        &.Mui-focusVisible {\n          box-shadow: 0 0 0 3px ").concat(e?e2[500]:e2[200],";\n        }\n\n        &[aria-selected=true].Mui-focused,\n        &[aria-selected=true].Mui-focusVisible {\n          background-color: ").concat(e?e2[900]:e2[100],";\n          color: ").concat(e?e2[100]:e2[900],";\n        }\n      }\n\n      .Autocomplete__no-options {\n        list-style: none;\n        padding: 8px;\n        cursor: default;\n      }\n      ")})}var e7=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],e3=a(747892),e8=a(510185),e6={en:{description:"An autocomplete component is a text input enhanced by a panel of suggested options.",location:"/brickmmo-docs-v2/data/base/components/autocomplete/autocomplete.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<h1>Autocomplete</h1><p class="description">An autocomplete component is a text input enhanced by a panel of suggested options.</p>\n\n',{component:"modules/components/ComponentLinkHeader.js",design:!1},{component:"modules/components/ComponentPageTabs.js"},'<h2 id="introduction">Introduction<a aria-labelledby="introduction" class="anchor-link" href="#introduction" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="introduction"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>An autocomplete component is an enhanced text input that shows a list of suggested options as users type, and lets them select an option from the list.</p>\n<p>Base UI provides the <code>useAutocomplete</code> hook for building a custom Autocomplete.\nIt implements the WAI-ARIA Combobox pattern, and is typically used to assist users in completing form inputs or search queries faster.</p>\n',{demo:"AutocompleteIntroduction",defaultCodeOpen:!1,bg:"gradient"},'<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Material UI and Joy UI have Autocomplete components that are built using the <code>useAutocomplete</code> hook, and they include many features not yet described here.</p>\n<p>To learn more about implementing a custom Autocomplete, you can explore the <a href="/base-ui/react-autocomplete/hooks-api/#use-autocomplete"><code>useAutocomplete</code> API docs</a>, or reference the Material UI and Joy UI implementations:</p>\n<ul>\n<li><a href="/material-ui/react-autocomplete/">Material UI Autocomplete</a></li>\n<li><a href="/joy-ui/react-autocomplete/">Joy UI Autocomplete</a></li>\n</ul>\n\n</div></aside><h2 id="hook">Hook<a aria-labelledby="hook" class="anchor-link" href="#hook" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="hook"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useAutocomplete <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/base/useAutocomplete\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The <code>useAutocomplete</code> hook requires a list of <code>options</code> to be displayed when the textbox receives focus.\nThe value must be chosen from a predefined set of values.</p>\n<p>The following demo shows how to create a simple combobox, apply styles, and write the selected value to a state variable using the <code>onChange</code> prop:</p>\n',{demo:"UseAutocomplete.js"},'<h2 id="customization">Customization<a aria-labelledby="customization" class="anchor-link" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="customization"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="rendering-options">Rendering options<a aria-labelledby="rendering-options" class="anchor-link" href="#rendering-options" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="rendering-options"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>By default, the <code>options</code> prop accepts an array of <code>string</code>s or <code>{ label: string }</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'The Godfather\'</span><span class="token punctuation">,</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'Pulp Fiction\'</span><span class="token punctuation">,</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// or</span>\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'The Godfather\'</span><span class="token punctuation">,</span> <span class="token string">\'Pulp Fiction\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>If you need to use a different structure for options, you must provide a function to the <code>getOptionLabel</code> prop that resolves each option to a unique value.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">issuer</span><span class="token operator">:</span> <span class="token string">\'Bank of America\'</span><span class="token punctuation">,</span> <span class="token literal-property property">brand</span><span class="token operator">:</span> <span class="token string">\'Visa\'</span><span class="token punctuation">,</span> <span class="token literal-property property">last4</span><span class="token operator">:</span> <span class="token string">\'1234\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">issuer</span><span class="token operator">:</span> <span class="token string">\'Bank of America\'</span><span class="token punctuation">,</span> <span class="token literal-property property">brand</span><span class="token operator">:</span> <span class="token string">\'MasterCard\'</span><span class="token punctuation">,</span> <span class="token literal-property property">last4</span><span class="token operator">:</span> <span class="token string">\'5678\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">issuer</span><span class="token operator">:</span> <span class="token string">\'Barclays\'</span><span class="token punctuation">,</span> <span class="token literal-property property">brand</span><span class="token operator">:</span> <span class="token string">\'Visa\'</span><span class="token punctuation">,</span> <span class="token literal-property property">last4</span><span class="token operator">:</span> <span class="token string">\'4698\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  getRootProps<span class="token punctuation">,</span>\n  <span class="token comment">// etc</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAutocomplete</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">getOptionLabel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">option</span><span class="token punctuation">)</span> <span class="token operator">=></span> option<span class="token punctuation">.</span>last4<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="controlled-states">Controlled states<a aria-labelledby="controlled-states" class="anchor-link" href="#controlled-states" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="controlled-states"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The <code>useAutocomplete</code> hook has two states that can be controlled:</p>\n<ol>\n<li>the &quot;value&quot; state with the <code>value</code>/<code>onChange</code> props combination. This state represents the value selected by the user, for instance when pressing <kbd class="key">Enter</kbd>.</li>\n<li>the &quot;input value&quot; state with the <code>inputValue</code>/<code>onInputChange</code> props combination. This state represents the value displayed in the textbox.</li>\n</ol>\n<p>These two states are isolated, and should be controlled independently.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <ul>\n<li>A component is <strong>controlled</strong> when it&#39;s managed by its parent using props.</li>\n<li>A component is <strong>uncontrolled</strong> when it&#39;s managed by its own local state.</li>\n</ul>\n<p>Learn more about controlled and uncontrolled components in the <a href="https://react.dev/learn/sharing-state-between-components#controlled-and-uncontrolled-components">React documentation</a>.</p>\n\n</div></aside>',{demo:"ControlledStates.js"},'<h3 id="using-a-portal">Using a portal<a aria-labelledby="using-a-portal" class="anchor-link" href="#using-a-portal" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="using-a-portal"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>React Portals can be used to render the listbox outside of the DOM hierarchy, making it easier to allow it to &quot;float&quot; above adjacent elements.</p>\n<p>Base UI provides a <a href="/base-ui/react-popper/">Popper</a> component built around React&#39;s <code>createPortal()</code> for exactly this purpose, and additionally helps you manage keyboard focus as it moves in and out of the portal.</p>\n<p>To render the listbox in Base UI&#39;s Popper, the <code>ref</code>s must be merged as follows:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useAutocomplete <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/base/useAutocomplete\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Popper <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/base/Popper\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> unstable_useForkRef <span class="token keyword">as</span> useForkRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/utils\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span>\n    getRootProps<span class="token punctuation">,</span>\n    getInputProps<span class="token punctuation">,</span>\n    getListboxProps<span class="token punctuation">,</span>\n    getOptionProps<span class="token punctuation">,</span>\n    popupOpen<span class="token punctuation">,</span>\n    anchorEl<span class="token punctuation">,</span>\n    setAnchorEl<span class="token punctuation">,</span>\n    groupedOptions<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAutocomplete</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> rootRef <span class="token operator">=</span> <span class="token function">useForkRef</span><span class="token punctuation">(</span>ref<span class="token punctuation">,</span> setAnchorEl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">React.Fragment</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">getRootProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rootRef<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">getInputProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>anchorEl <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Popper</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>popupOpen<span class="token punctuation">}</span></span> <span class="token attr-name">anchorEl</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>anchorEl<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>groupedOptions<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">getListboxProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token punctuation">{</span>groupedOptions<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">option<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">getOptionProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span> option<span class="token punctuation">,</span> index <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>option<span class="token punctuation">.</span>label<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n              <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Popper</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">React.Fragment</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Here&#39;s a complete demo that renders the listbox inside a Popper:</p>\n',{demo:"UseAutocompletePopper.js",defaultCodeOpen:!1}],toc:[{text:"Introduction",level:2,hash:"introduction",children:[]},{text:"Hook",level:2,hash:"hook",children:[]},{text:"Customization",level:2,hash:"customization",children:[{text:"Rendering options",level:3,hash:"rendering-options"},{text:"Controlled states",level:3,hash:"controlled-states"},{text:"Using a portal",level:3,hash:"using-a-portal"}]}],title:"React Autocomplete hook",headers:{productId:"base-ui",title:"React Autocomplete hook",hooks:["useAutocomplete"],githubLabel:"component: autocomplete",waiAria:"https://www.w3.org/WAI/ARIA/apg/patterns/combobox/",components:[]}}},ne={"UseAutocomplete.js":{module:"./UseAutocomplete.js",raw:"import * as React from 'react';\nimport { useAutocomplete } from '@mui/base/useAutocomplete';\nimport { styled } from '@mui/system';\n\nexport default function UseAutocomplete() {\n  const [value, setValue] = React.useState(null);\n\n  const {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    focused,\n  } = useAutocomplete({\n    id: 'use-autocomplete-demo',\n    options: top100Films,\n    getOptionLabel: (option) => option.label,\n    value,\n    onChange: (event, newValue) => setValue(newValue),\n  });\n\n  return (\n    <div style={{ marginBottom: 24 }}>\n      <StyledLabel {...getInputLabelProps()}>Pick a movie</StyledLabel>\n      <StyledAutocompleteRoot\n        {...getRootProps()}\n        className={focused ? 'focused' : ''}\n      >\n        <StyledInput {...getInputProps()} />\n      </StyledAutocompleteRoot>\n      {groupedOptions.length > 0 && (\n        <StyledListbox {...getListboxProps()}>\n          {groupedOptions.map((option, index) => (\n            <StyledOption {...getOptionProps({ option, index })}>\n              {option.label}\n            </StyledOption>\n          ))}\n        </StyledListbox>\n      )}\n    </div>\n  );\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#99CCF3',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst StyledLabel = styled('label')`\n  display: block;\n  font-family: sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 4px;\n`;\n\nconst StyledAutocompleteRoot = styled('div')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[500]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n  display: flex;\n  gap: 5px;\n  padding-right: 5px;\n  overflow: hidden;\n  width: 320px;\n\n  &.focused {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n  }\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n\nconst StyledInput = styled('input')(\n  ({ theme }) => `\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n  flex: 1 0 auto;\n`,\n);\n\nconst StyledListbox = styled('ul')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  padding: 6px;\n  margin: 12px 0;\n  width: 320px;\n  border-radius: 12px;\n  overflow: auto;\n  outline: 0px;\n  max-height: 300px;\n  z-index: 1;\n  position: absolute;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  box-shadow: 0px 2px 3px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.50)' : 'rgba(0,0,0, 0.05)'\n  };\n  `,\n);\n\nconst StyledOption = styled('li')(\n  ({ theme }) => `\n  list-style: none;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: default;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &[aria-selected=true] {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n\n  &.Mui-focused,\n  &.Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? grey[800] : grey[100]};\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  }\n\n  &.Mui-focusVisible {\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n\n  &[aria-selected=true].Mui-focused,\n  &[aria-selected=true].Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n  `,\n);\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",jsxPreview:"<StyledLabel {...getInputLabelProps()}>Pick a movie</StyledLabel>\n<StyledAutocompleteRoot\n  {...getRootProps()}\n  className={focused ? 'focused' : ''}\n>\n  <StyledInput {...getInputProps()} />\n</StyledAutocompleteRoot>\n{groupedOptions.length > 0 && (\n  <StyledListbox {...getListboxProps()}>\n    {(groupedOptions as typeof top100Films).map((option, index) => (\n      <StyledOption {...getOptionProps({ option, index })}>\n        {option.label}\n      </StyledOption>\n    ))}\n  </StyledListbox>\n)}",moduleTS:"./UseAutocomplete.js",rawTS:"import * as React from 'react';\nimport { useAutocomplete } from '@mui/base/useAutocomplete';\nimport { styled } from '@mui/system';\n\nexport default function UseAutocomplete() {\n  const [value, setValue] = React.useState<(typeof top100Films)[number] | null>(\n    null,\n  );\n\n  const {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    focused,\n  } = useAutocomplete({\n    id: 'use-autocomplete-demo',\n    options: top100Films,\n    getOptionLabel: (option) => option.label,\n    value,\n    onChange: (event, newValue) => setValue(newValue),\n  });\n\n  return (\n    <div style={{ marginBottom: 24 }}>\n      <StyledLabel {...getInputLabelProps()}>Pick a movie</StyledLabel>\n      <StyledAutocompleteRoot\n        {...getRootProps()}\n        className={focused ? 'focused' : ''}\n      >\n        <StyledInput {...getInputProps()} />\n      </StyledAutocompleteRoot>\n      {groupedOptions.length > 0 && (\n        <StyledListbox {...getListboxProps()}>\n          {(groupedOptions as typeof top100Films).map((option, index) => (\n            <StyledOption {...getOptionProps({ option, index })}>\n              {option.label}\n            </StyledOption>\n          ))}\n        </StyledListbox>\n      )}\n    </div>\n  );\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#99CCF3',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst StyledLabel = styled('label')`\n  display: block;\n  font-family: sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 4px;\n`;\n\nconst StyledAutocompleteRoot = styled('div')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[500]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n  display: flex;\n  gap: 5px;\n  padding-right: 5px;\n  overflow: hidden;\n  width: 320px;\n\n  &.focused {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n  }\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n\nconst StyledInput = styled('input')(\n  ({ theme }) => `\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n  flex: 1 0 auto;\n`,\n);\n\nconst StyledListbox = styled('ul')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  padding: 6px;\n  margin: 12px 0;\n  width: 320px;\n  border-radius: 12px;\n  overflow: auto;\n  outline: 0px;\n  max-height: 300px;\n  z-index: 1;\n  position: absolute;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  box-shadow: 0px 2px 3px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.50)' : 'rgba(0,0,0, 0.05)'\n  };\n  `,\n);\n\nconst StyledOption = styled('li')(\n  ({ theme }) => `\n  list-style: none;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: default;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &[aria-selected=true] {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n\n  &.Mui-focused,\n  &.Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? grey[800] : grey[100]};\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  }\n\n  &.Mui-focusVisible {\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n\n  &[aria-selected=true].Mui-focused,\n  &[aria-selected=true].Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n  `,\n);\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"ControlledStates.js":{module:"./ControlledStates.js",raw:"import * as React from 'react';\nimport { useAutocomplete } from '@mui/base/useAutocomplete';\nimport { styled } from '@mui/system';\n\nconst options = ['Firefox', 'Google Chrome', 'Microsoft Edge', 'Safari', 'Opera'];\n\nexport default function ControlledStates() {\n  const [value, setValue] = React.useState(options[0]);\n  const [inputValue, setInputValue] = React.useState('');\n\n  const {\n    getRootProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    focused,\n  } = useAutocomplete({\n    id: 'controlled-state-demo',\n    options,\n    value,\n    onChange: (event, newValue) => setValue(newValue),\n    inputValue,\n    onInputChange: (event, newInputValue) => setInputValue(newInputValue),\n  });\n\n  return (\n    <Layout>\n      <Pre>\n        value: <code>{value ?? ' '}</code>\n      </Pre>\n      <Pre>\n        inputValue: <code>{inputValue ?? ' '}</code>\n      </Pre>\n      <StyledAutocomplete>\n        <StyledInputRoot {...getRootProps()} className={focused ? 'focused' : ''}>\n          <StyledInput {...getInputProps()} />\n        </StyledInputRoot>\n        {groupedOptions.length > 0 && (\n          <StyledListbox {...getListboxProps()}>\n            {groupedOptions.map((option, index) => (\n              <StyledOption {...getOptionProps({ option, index })}>\n                {option}\n              </StyledOption>\n            ))}\n          </StyledListbox>\n        )}\n      </StyledAutocomplete>\n    </Layout>\n  );\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#99CCF3',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst StyledAutocomplete = styled('div')`\n  position: relative;\n`;\n\nconst StyledInputRoot = styled('div')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[500]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n  display: flex;\n  gap: 5px;\n  padding-right: 5px;\n  overflow: hidden;\n  width: 320px;\n\n  &.focused {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[700] : blue[200]};\n  }\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n\nconst StyledInput = styled('input')(\n  ({ theme }) => `\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n  flex: 1 0 auto;\n`,\n);\n\nconst StyledListbox = styled('ul')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  padding: 6px;\n  margin: 12px 0;\n  max-width: 320px;\n  border-radius: 12px;\n  overflow: auto;\n  outline: 0px;\n  max-height: 300px;\n  z-index: 1;\n  position: absolute;\n  left: 0;\n  right: 0;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  box-shadow: 0px 4px 6px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.50)' : 'rgba(0,0,0, 0.05)'\n  };\n  `,\n);\n\nconst StyledOption = styled('li')(\n  ({ theme }) => `\n  list-style: none;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: default;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &[aria-selected=true] {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n\n  &.Mui-focused,\n  &.Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? grey[800] : grey[100]};\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  }\n\n  &.Mui-focusVisible {\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n\n  &[aria-selected=true].Mui-focused,\n  &[aria-selected=true].Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n  `,\n);\n\nconst Layout = styled('div')`\n  display: flex;\n  flex-flow: column nowrap;\n  gap: 4px;\n`;\n\nconst Pre = styled('pre')(({ theme }) => ({\n  margin: '0.5rem 0',\n  fontSize: '0.75rem',\n  '& code': {\n    backgroundColor: theme.palette.mode === 'light' ? grey[100] : grey[900],\n    border: '1px solid',\n    borderColor: theme.palette.mode === 'light' ? grey[300] : grey[700],\n    color: theme.palette.mode === 'light' ? '#000' : '#fff',\n    padding: '0.125rem 0.25rem',\n    borderRadius: 3,\n  },\n}));\n",moduleTS:"./ControlledStates.js",rawTS:"import * as React from 'react';\nimport { useAutocomplete } from '@mui/base/useAutocomplete';\nimport { styled } from '@mui/system';\n\nconst options = ['Firefox', 'Google Chrome', 'Microsoft Edge', 'Safari', 'Opera'];\n\nexport default function ControlledStates() {\n  const [value, setValue] = React.useState<string | null>(options[0]);\n  const [inputValue, setInputValue] = React.useState('');\n\n  const {\n    getRootProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    focused,\n  } = useAutocomplete({\n    id: 'controlled-state-demo',\n    options,\n    value,\n    onChange: (event, newValue) => setValue(newValue),\n    inputValue,\n    onInputChange: (event, newInputValue) => setInputValue(newInputValue),\n  });\n\n  return (\n    <Layout>\n      <Pre>\n        value: <code>{value ?? ' '}</code>\n      </Pre>\n      <Pre>\n        inputValue: <code>{inputValue ?? ' '}</code>\n      </Pre>\n      <StyledAutocomplete>\n        <StyledInputRoot {...getRootProps()} className={focused ? 'focused' : ''}>\n          <StyledInput {...getInputProps()} />\n        </StyledInputRoot>\n        {groupedOptions.length > 0 && (\n          <StyledListbox {...getListboxProps()}>\n            {(groupedOptions as string[]).map((option, index) => (\n              <StyledOption {...getOptionProps({ option, index })}>\n                {option}\n              </StyledOption>\n            ))}\n          </StyledListbox>\n        )}\n      </StyledAutocomplete>\n    </Layout>\n  );\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#99CCF3',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst StyledAutocomplete = styled('div')`\n  position: relative;\n`;\n\nconst StyledInputRoot = styled('div')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[500]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n  display: flex;\n  gap: 5px;\n  padding-right: 5px;\n  overflow: hidden;\n  width: 320px;\n\n  &.focused {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[700] : blue[200]};\n  }\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n\nconst StyledInput = styled('input')(\n  ({ theme }) => `\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n  flex: 1 0 auto;\n`,\n);\n\nconst StyledListbox = styled('ul')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  padding: 6px;\n  margin: 12px 0;\n  max-width: 320px;\n  border-radius: 12px;\n  overflow: auto;\n  outline: 0px;\n  max-height: 300px;\n  z-index: 1;\n  position: absolute;\n  left: 0;\n  right: 0;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  box-shadow: 0px 4px 6px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.50)' : 'rgba(0,0,0, 0.05)'\n  };\n  `,\n);\n\nconst StyledOption = styled('li')(\n  ({ theme }) => `\n  list-style: none;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: default;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &[aria-selected=true] {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n\n  &.Mui-focused,\n  &.Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? grey[800] : grey[100]};\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  }\n\n  &.Mui-focusVisible {\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n\n  &[aria-selected=true].Mui-focused,\n  &[aria-selected=true].Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n  `,\n);\n\nconst Layout = styled('div')`\n  display: flex;\n  flex-flow: column nowrap;\n  gap: 4px;\n`;\n\nconst Pre = styled('pre')(({ theme }) => ({\n  margin: '0.5rem 0',\n  fontSize: '0.75rem',\n  '& code': {\n    backgroundColor: theme.palette.mode === 'light' ? grey[100] : grey[900],\n    border: '1px solid',\n    borderColor: theme.palette.mode === 'light' ? grey[300] : grey[700],\n    color: theme.palette.mode === 'light' ? '#000' : '#fff',\n    padding: '0.125rem 0.25rem',\n    borderRadius: 3,\n  },\n}));\n"},AutocompleteIntroduction:{module:"./AutocompleteIntroduction/system/index.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useAutocomplete } from '@mui/base/useAutocomplete';\nimport { Button } from '@mui/base/Button';\nimport { Popper } from '@mui/base/Popper';\nimport { styled } from '@mui/system';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClearIcon from '@mui/icons-material/Clear';\n\nconst Autocomplete = React.forwardRef(function Autocomplete(props, ref) {\n  const {\n    disableClearable = false,\n    disabled = false,\n    readOnly = false,\n    ...other\n  } = props;\n\n  const {\n    getRootProps,\n    getInputProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getListboxProps,\n    getOptionProps,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    anchorEl,\n    setAnchorEl,\n    groupedOptions,\n  } = useAutocomplete({\n    ...props,\n    componentName: 'BaseAutocompleteIntroduction',\n  });\n\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n\n  const rootRef = useForkRef(ref, setAnchorEl);\n\n  return (\n    <React.Fragment>\n      <StyledAutocompleteRoot\n        {...getRootProps(other)}\n        ref={rootRef}\n        className={focused ? 'focused' : undefined}\n      >\n        <StyledInput\n          id={id}\n          disabled={disabled}\n          readOnly={readOnly}\n          {...getInputProps()}\n        />\n        {hasClearIcon && (\n          <StyledClearIndicator {...getClearProps()}>\n            <ClearIcon />\n          </StyledClearIndicator>\n        )}\n\n        <StyledPopupIndicator\n          {...getPopupIndicatorProps()}\n          className={popupOpen ? 'popupOpen' : undefined}\n        >\n          <ArrowDropDownIcon />\n        </StyledPopupIndicator>\n      </StyledAutocompleteRoot>\n      {anchorEl ? (\n        <Popper\n          open={popupOpen}\n          anchorEl={anchorEl}\n          slots={{\n            root: StyledPopper,\n          }}\n          modifiers={[\n            { name: 'flip', enabled: false },\n            { name: 'preventOverflow', enabled: false },\n          ]}\n        >\n          <StyledListbox {...getListboxProps()}>\n            {groupedOptions.map((option, index) => {\n              const optionProps = getOptionProps({ option, index });\n\n              return <StyledOption {...optionProps}>{option.label}</StyledOption>;\n            })}\n\n            {groupedOptions.length === 0 && (\n              <StyledNoOptions>No results</StyledNoOptions>\n            )}\n          </StyledListbox>\n        </Popper>\n      ) : null}\n    </React.Fragment>\n  );\n});\n\nAutocomplete.propTypes = {\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.oneOf([false]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n};\n\nexport default function AutocompleteIntroduction() {\n  return <Autocomplete options={top100Films} />;\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#99CCF3',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst StyledAutocompleteRoot = styled('div')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[500]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n  display: flex;\n  gap: 5px;\n  padding-right: 5px;\n  overflow: hidden;\n  width: 320px;\n\n  &.focused {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[700] : blue[200]};\n  }\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? grey[800] : grey[50]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[300]};\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n\nconst StyledInput = styled('input')(\n  ({ theme }) => `\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n  flex: 1 0 auto;\n`,\n);\n\n// ComponentPageTabs has z-index: 1000\nconst StyledPopper = styled('div')`\n  position: relative;\n  z-index: 1001;\n  width: 320px;\n`;\n\nconst StyledListbox = styled('ul')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  padding: 6px;\n  margin: 12px 0;\n  min-width: 320px;\n  border-radius: 12px;\n  overflow: auto;\n  outline: 0px;\n  max-height: 300px;\n  z-index: 1;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  box-shadow: 0px 4px 6px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.3)' : 'rgba(0,0,0, 0.05)'\n  };\n  `,\n);\n\nconst StyledOption = styled('li')(\n  ({ theme }) => `\n  list-style: none;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: default;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &[aria-selected=true] {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n\n  &.Mui-focused,\n  &.Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? grey[800] : grey[100]};\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  }\n\n  &.Mui-focusVisible {\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n\n  &[aria-selected=true].Mui-focused,\n  &[aria-selected=true].Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n  `,\n);\n\nconst StyledPopupIndicator = styled(Button)(\n  ({ theme }) => `\n    outline: 0;\n    box-shadow: none;\n    border: 0;\n    border-radius: 4px;\n    background-color: transparent;\n    align-self: center;\n    padding: 0 2px;\n\n    &:hover {\n      background-color: ${theme.palette.mode === 'dark' ? grey[700] : blue[100]};\n      cursor: pointer;\n    }\n\n    & > svg {\n      transform: translateY(2px);\n    }\n\n    &.popupOpen > svg {\n      transform: translateY(2px) rotate(180deg);\n    }\n  `,\n);\n\nconst StyledClearIndicator = styled(Button)(\n  ({ theme }) => `\n    outline: 0;\n    box-shadow: none;\n    border: 0;\n    border-radius: 4px;\n    background-color: transparent;\n    align-self: center;\n    padding: 0 2px;\n\n    &:hover {\n      background-color: ${theme.palette.mode === 'dark' ? grey[700] : blue[100]};\n      cursor: pointer;\n    }\n\n    & > svg {\n      transform: translateY(2px) scale(0.9);\n    }\n  `,\n);\n\nconst StyledNoOptions = styled('li')`\n  list-style: none;\n  padding: 8px;\n  cursor: default;\n`;\n\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",moduleTailwind:"./AutocompleteIntroduction/tailwind/index.js",rawTailwind:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useAutocomplete } from '@mui/base/useAutocomplete';\nimport { Button } from '@mui/base/Button';\nimport { Popper } from '@mui/base/Popper';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport clsx from 'clsx';\n\nconst Autocomplete = React.forwardRef(function Autocomplete(props, ref) {\n  const {\n    disableClearable = false,\n    disabled = false,\n    readOnly = false,\n    options,\n    isOptionEqualToValue,\n    ...other\n  } = props;\n\n  const {\n    getRootProps,\n    getInputProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getListboxProps,\n    getOptionProps,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    anchorEl,\n    setAnchorEl,\n    groupedOptions,\n  } = useAutocomplete({\n    ...props,\n    componentName: 'BaseAutocompleteIntroduction',\n  });\n\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n\n  const rootRef = useForkRef(ref, setAnchorEl);\n\n  return (\n    <React.Fragment>\n      <div\n        {...getRootProps(other)}\n        ref={rootRef}\n        className={clsx(\n          'flex gap-[5px] pr-[5px] overflow-hidden w-80 rounded-lg bg-white dark:bg-gray-800 border border-solid border-gray-200 dark:border-gray-700 hover:border-violet-400 dark:hover:border-violet-400 focus-visible:outline-0 shadow-[0_2px_4px_rgb(0_0_0_/_0.05)] dark:shadow-[0_2px_4px_rgb(0_0_0_/_0.5)]',\n          !focused &&\n            'shadow-[0_2px_2px_transparent] shadow-gray-50 dark:shadow-gray-900',\n          focused &&\n            'border-violet-400 dark:border-violet-400 shadow-[0_0_0_3px_transparent] shadow-violet-200 dark:shadow-violet-500',\n        )}\n      >\n        <input\n          id={id}\n          disabled={disabled}\n          readOnly={readOnly}\n          {...getInputProps()}\n          className=\"text-sm leading-[1.5] text-gray-900 dark:text-gray-300 bg-inherit border-0 rounded-[inherit] px-3 py-2 outline-0 grow shrink-0 basis-auto\"\n        />\n        {hasClearIcon && (\n          <Button\n            {...getClearProps()}\n            className=\"self-center outline-0 shadow-none border-0 py-0 px-0.5 rounded-[4px] bg-transparent hover:bg-violet-100 dark:hover:bg-gray-700 hover:cursor-pointer\"\n          >\n            <ClearIcon className=\"translate-y-[2px] scale-90\" />\n          </Button>\n        )}\n\n        <Button\n          {...getPopupIndicatorProps()}\n          className=\"self-center outline-0 shadow-none border-0 py-0 px-0.5 rounded-[4px] bg-transparent hover:bg-violet-100 dark:hover:bg-gray-700 hover:cursor-pointer\"\n        >\n          <ArrowDropDownIcon\n            className={clsx('translate-y-[2px]', popupOpen && 'rotate-180')}\n          />\n        </Button>\n      </div>\n      {anchorEl && (\n        <Popper\n          open={popupOpen}\n          anchorEl={anchorEl}\n          slotProps={{\n            root: {\n              className: 'relative z-[1001] w-80', // z-index: 1001 is needed to override ComponentPageTabs with z-index: 1000\n            },\n          }}\n          modifiers={[\n            { name: 'flip', enabled: false },\n            { name: 'preventOverflow', enabled: false },\n          ]}\n        >\n          <ul\n            {...getListboxProps()}\n            className=\"text-sm box-border p-1.5 my-3 mx-0 min-w-[320px] rounded-xl overflow-auto outline-0 max-h-[300px] z-[1] bg-white dark:bg-gray-800 border border-solid border-gray-200 dark:border-gray-900 text-gray-900 dark:text-gray-200 shadow-[0_4px_30px_transparent] shadow-gray-200 dark:shadow-gray-900\"\n          >\n            {groupedOptions.map((option, index) => {\n              const optionProps = getOptionProps({ option, index });\n\n              return (\n                <li\n                  {...optionProps}\n                  className=\"list-none p-2 rounded-lg cursor-default last-of-type:border-b-0 hover:cursor-pointer aria-selected:bg-violet-100 dark:aria-selected:bg-violet-900 aria-selected:text-violet-900 dark:aria-selected:text-violet-100 ui-focused:bg-gray-100 dark:ui-focused:bg-gray-700 ui-focus-visible:bg-gray-100 dark:ui-focus-visible:bg-gray-800 ui-focused:text-gray-900 dark:ui-focused:text-gray-300 ui-focus-visible:text-gray-900 dark:ui-focus-visible:text-gray-300 ui-focus-visible:shadow-[0_0_0_3px_transparent] ui-focus-visible:shadow-violet-200 dark:ui-focus-visible:shadow-violet-500 ui-focused:aria-selected:bg-violet-100 dark:ui-focused:aria-selected:bg-violet-900 ui-focus-visible:aria-selected:bg-violet-100 dark:ui-focus-visible:aria-selected:bg-violet-900 ui-focused:aria-selected:text-violet-900 dark:ui-focused:aria-selected:text-violet-100 ui-focus-visible:aria-selected:text-violet-900 dark:ui-focus-visible:aria-selected:text-violet-100\"\n                >\n                  {option.label}\n                </li>\n              );\n            })}\n\n            {groupedOptions.length === 0 && (\n              <li className=\"list-none p-2 cursor-default\">No results</li>\n            )}\n          </ul>\n        </Popper>\n      )}\n    </React.Fragment>\n  );\n});\n\nAutocomplete.propTypes = {\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.oneOf([false]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {Value} option The option to test.\n   * @param {Value} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      year: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n};\n\nexport default function AutocompleteIntroduction() {\n  return (\n    <Autocomplete\n      options={top100Films}\n      isOptionEqualToValue={(option, value) => option.label === value.label}\n    />\n  );\n}\n\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",moduleTSTailwind:"./AutocompleteIntroduction/tailwind/index.tsx",rawTailwindTS:"import * as React from 'react';\nimport { useAutocomplete, UseAutocompleteProps } from '@mui/base/useAutocomplete';\nimport { Button } from '@mui/base/Button';\nimport { Popper } from '@mui/base/Popper';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport clsx from 'clsx';\n\nconst Autocomplete = React.forwardRef(function Autocomplete(\n  props: UseAutocompleteProps<(typeof top100Films)[number], false, false, false>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    disableClearable = false,\n    disabled = false,\n    readOnly = false,\n    options,\n    isOptionEqualToValue,\n    ...other\n  } = props;\n\n  const {\n    getRootProps,\n    getInputProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getListboxProps,\n    getOptionProps,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    anchorEl,\n    setAnchorEl,\n    groupedOptions,\n  } = useAutocomplete({\n    ...props,\n    componentName: 'BaseAutocompleteIntroduction',\n  });\n\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n\n  const rootRef = useForkRef(ref, setAnchorEl);\n\n  return (\n    <React.Fragment>\n      <div\n        {...getRootProps(other)}\n        ref={rootRef}\n        className={clsx(\n          'flex gap-[5px] pr-[5px] overflow-hidden w-80 rounded-lg bg-white dark:bg-gray-800 border border-solid border-gray-200 dark:border-gray-700 hover:border-violet-400 dark:hover:border-violet-400 focus-visible:outline-0 shadow-[0_2px_4px_rgb(0_0_0_/_0.05)] dark:shadow-[0_2px_4px_rgb(0_0_0_/_0.5)]',\n          !focused &&\n            'shadow-[0_2px_2px_transparent] shadow-gray-50 dark:shadow-gray-900',\n          focused &&\n            'border-violet-400 dark:border-violet-400 shadow-[0_0_0_3px_transparent] shadow-violet-200 dark:shadow-violet-500',\n        )}\n      >\n        <input\n          id={id}\n          disabled={disabled}\n          readOnly={readOnly}\n          {...getInputProps()}\n          className=\"text-sm leading-[1.5] text-gray-900 dark:text-gray-300 bg-inherit border-0 rounded-[inherit] px-3 py-2 outline-0 grow shrink-0 basis-auto\"\n        />\n        {hasClearIcon && (\n          <Button\n            {...getClearProps()}\n            className=\"self-center outline-0 shadow-none border-0 py-0 px-0.5 rounded-[4px] bg-transparent hover:bg-violet-100 dark:hover:bg-gray-700 hover:cursor-pointer\"\n          >\n            <ClearIcon className=\"translate-y-[2px] scale-90\" />\n          </Button>\n        )}\n        <Button\n          {...getPopupIndicatorProps()}\n          className=\"self-center outline-0 shadow-none border-0 py-0 px-0.5 rounded-[4px] bg-transparent hover:bg-violet-100 dark:hover:bg-gray-700 hover:cursor-pointer\"\n        >\n          <ArrowDropDownIcon\n            className={clsx('translate-y-[2px]', popupOpen && 'rotate-180')}\n          />\n        </Button>\n      </div>\n      {anchorEl && (\n        <Popper\n          open={popupOpen}\n          anchorEl={anchorEl}\n          slotProps={{\n            root: {\n              className: 'relative z-[1001] w-80', // z-index: 1001 is needed to override ComponentPageTabs with z-index: 1000\n            },\n          }}\n          modifiers={[\n            { name: 'flip', enabled: false },\n            { name: 'preventOverflow', enabled: false },\n          ]}\n        >\n          <ul\n            {...getListboxProps()}\n            className=\"text-sm box-border p-1.5 my-3 mx-0 min-w-[320px] rounded-xl overflow-auto outline-0 max-h-[300px] z-[1] bg-white dark:bg-gray-800 border border-solid border-gray-200 dark:border-gray-900 text-gray-900 dark:text-gray-200 shadow-[0_4px_30px_transparent] shadow-gray-200 dark:shadow-gray-900\"\n          >\n            {(groupedOptions as typeof top100Films).map((option, index) => {\n              const optionProps = getOptionProps({ option, index });\n\n              return (\n                <li\n                  {...optionProps}\n                  className=\"list-none p-2 rounded-lg cursor-default last-of-type:border-b-0 hover:cursor-pointer aria-selected:bg-violet-100 dark:aria-selected:bg-violet-900 aria-selected:text-violet-900 dark:aria-selected:text-violet-100 ui-focused:bg-gray-100 dark:ui-focused:bg-gray-700 ui-focus-visible:bg-gray-100 dark:ui-focus-visible:bg-gray-800 ui-focused:text-gray-900 dark:ui-focused:text-gray-300 ui-focus-visible:text-gray-900 dark:ui-focus-visible:text-gray-300 ui-focus-visible:shadow-[0_0_0_3px_transparent] ui-focus-visible:shadow-violet-200 dark:ui-focus-visible:shadow-violet-500 ui-focused:aria-selected:bg-violet-100 dark:ui-focused:aria-selected:bg-violet-900 ui-focus-visible:aria-selected:bg-violet-100 dark:ui-focus-visible:aria-selected:bg-violet-900 ui-focused:aria-selected:text-violet-900 dark:ui-focused:aria-selected:text-violet-100 ui-focus-visible:aria-selected:text-violet-900 dark:ui-focus-visible:aria-selected:text-violet-100\"\n                >\n                  {option.label}\n                </li>\n              );\n            })}\n\n            {groupedOptions.length === 0 && (\n              <li className=\"list-none p-2 cursor-default\">No results</li>\n            )}\n          </ul>\n        </Popper>\n      )}\n    </React.Fragment>\n  );\n});\n\nexport default function AutocompleteIntroduction() {\n  return (\n    <Autocomplete\n      options={top100Films}\n      isOptionEqualToValue={(option, value) => option.label === value.label}\n    />\n  );\n}\n\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",moduleCSS:"./AutocompleteIntroduction/css/index.js",rawCSS:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useAutocomplete } from '@mui/base/useAutocomplete';\nimport { Button } from '@mui/base/Button';\nimport { Input } from '@mui/base/Input';\nimport { Popper } from '@mui/base/Popper';\nimport { useTheme } from '@mui/system';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport clsx from 'clsx';\n\nconst Autocomplete = React.forwardRef(function Autocomplete(props, ref) {\n  const {\n    disableClearable = false,\n    disabled = false,\n    readOnly = false,\n    options,\n    ...other\n  } = props;\n\n  const {\n    getRootProps,\n    getInputProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getListboxProps,\n    getOptionProps,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    anchorEl,\n    setAnchorEl,\n    groupedOptions,\n  } = useAutocomplete({\n    ...props,\n    componentName: 'BaseAutocompleteIntroduction',\n  });\n\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n\n  const rootRef = useForkRef(ref, setAnchorEl);\n\n  return (\n    <React.Fragment>\n      <div\n        {...getRootProps(other)}\n        ref={rootRef}\n        className={clsx('Autocomplete__root', focused && 'focused')}\n      >\n        <Input\n          id={id}\n          ref={setAnchorEl}\n          disabled={disabled}\n          readOnly={readOnly}\n          slotProps={{\n            root: {\n              className: 'Autocomplete__input-root',\n            },\n            input: {\n              className: 'Autocomplete__input',\n              ...getInputProps(),\n            },\n          }}\n        />\n        {hasClearIcon && (\n          <Button\n            {...getClearProps()}\n            className=\"Autocomplete__indicator clear-indicator\"\n          >\n            <ClearIcon />\n          </Button>\n        )}\n\n        <Button\n          {...getPopupIndicatorProps()}\n          className={clsx(\n            'Autocomplete__indicator',\n            'popup-indicator',\n            popupOpen && 'popupOpen',\n          )}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </div>\n      {anchorEl ? (\n        <Popper\n          open={popupOpen}\n          anchorEl={anchorEl}\n          slotProps={{\n            root: { className: 'Autocomplete__popper' },\n          }}\n          modifiers={[\n            { name: 'flip', enabled: false },\n            { name: 'preventOverflow', enabled: false },\n          ]}\n        >\n          <ul {...getListboxProps()} className=\"Autocomplete__listbox\">\n            {groupedOptions.map((option, index) => {\n              const optionProps = getOptionProps({ option, index });\n\n              return (\n                <li {...optionProps} className=\"Autocomplete__option\">\n                  {option.label}\n                </li>\n              );\n            })}\n\n            {groupedOptions.length === 0 && (\n              <li className=\"Autocomplete__no-options\">No results</li>\n            )}\n          </ul>\n        </Popper>\n      ) : null}\n      <Styles />\n    </React.Fragment>\n  );\n});\n\nAutocomplete.propTypes = {\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.oneOf([false]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      year: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n};\n\nexport default function AutocompleteIntroduction() {\n  return <Autocomplete options={top100Films} />;\n}\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <style>\n      {`\n      .Autocomplete__root {\n        font-family: IBM Plex Sans, sans-serif;\n        font-weight: 400;\n        border-radius: 8px;\n        background: ${isDarkMode ? grey[900] : '#fff'};\n        border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n        color: ${isDarkMode ? grey[300] : grey[900]};\n        box-shadow: 0px 2px 4px ${\n          isDarkMode ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n        };\n        display: flex;\n        gap: 5px;\n        overflow: hidden;\n        width: 320px;\n\n        &.focused {\n          border-color: ${cyan[400]};\n          box-shadow: 0 0 0 3px ${isDarkMode ? cyan[500] : cyan[200]};\n        }\n\n        &:hover {\n          border-color: ${cyan[400]};\n        }\n\n        &:focus-visible {\n          outline: 0;\n        }\n      }\n\n      .Autocomplete__popper {\n        position: relative;\n        z-index: 1001;\n        width: 320px;\n      }\n\n      .Autocomplete__input-root {\n        background: inherit;\n        border-radius: inherit;\n        flex: 1 0 auto;\n      }\n\n      .Autocomplete__input {\n        font-size: 0.875rem;\n        font-family: inherit;\n        font-weight: 400;\n        line-height: 1.5;\n        color: ${isDarkMode ? grey[300] : grey[900]};\n        background: inherit;\n        border: none;\n        border-radius: inherit;\n        padding: 8px 12px;\n        outline: 0;\n      }\n\n      .Autocomplete__indicator {\n        outline: 0;\n        box-shadow: none;\n        border: 0;\n        border-radius: 4px;\n        background-color: transparent;\n        align-self: center;\n        padding: 0 2px;\n        margin-right: 4px;\n\n        &:hover {\n          background-color: ${isDarkMode ? grey[700] : cyan[100]};\n          cursor: pointer;\n        }\n      }\n\n      .Autocomplete__indicator.popup-indicator > svg {\n        transform: translateY(2px);\n      }\n\n      .Autocomplete__indicator.popup-indicator.popupOpen > svg {\n        transform: translateY(2px) rotate(180deg);\n      }\n\n      .Autocomplete__indicator.clear-indicator > svg {\n        transform: translateY(2px) scale(0.9);\n      }\n\n      .Autocomplete__listbox {\n        font-family: IBM Plex Sans, sans-serif;\n        font-size: 0.875rem;\n        box-sizing: border-box;\n        padding: 6px;\n        margin: 12px 0;\n        width: 100%;\n        border-radius: 12px;\n        overflow: auto;\n        outline: 0px;\n        max-height: 300px;\n        z-index: 1;\n        position: absolute;\n        background: ${isDarkMode ? grey[900] : '#fff'};\n        border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n        color: ${isDarkMode ? grey[300] : grey[900]};\n        box-shadow: 0px 4px 6px ${\n          isDarkMode ? 'rgba(0,0,0, 0.50)' : 'rgba(0,0,0, 0.05)'\n        };\n      }\n\n      .Autocomplete__option {\n        list-style: none;\n        padding: 8px;\n        border-radius: 8px;\n        cursor: default;\n\n        &:last-of-type {\n          border-bottom: none;\n        }\n\n        &:hover {\n          cursor: pointer;\n        }\n\n        &[aria-selected=true] {\n          background-color: ${isDarkMode ? cyan[900] : cyan[100]};\n          color: ${isDarkMode ? cyan[100] : cyan[900]};\n        }\n\n        &.Mui-focused,\n        &.Mui-focusVisible {\n          background-color: ${isDarkMode ? grey[800] : grey[100]};\n          color: ${isDarkMode ? grey[300] : grey[900]};\n        }\n\n        &.Mui-focusVisible {\n          box-shadow: 0 0 0 3px ${isDarkMode ? cyan[500] : cyan[200]};\n        }\n\n        &[aria-selected=true].Mui-focused,\n        &[aria-selected=true].Mui-focusVisible {\n          background-color: ${isDarkMode ? cyan[900] : cyan[100]};\n          color: ${isDarkMode ? cyan[100] : cyan[900]};\n        }\n      }\n\n      .Autocomplete__no-options {\n        list-style: none;\n        padding: 8px;\n        cursor: default;\n      }\n      `}\n    </style>\n  );\n}\n\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",moduleTSCSS:"./AutocompleteIntroduction/css/index.tsx",rawCSSTS:"import * as React from 'react';\nimport { useAutocomplete, UseAutocompleteProps } from '@mui/base/useAutocomplete';\nimport { Button } from '@mui/base/Button';\nimport { Input } from '@mui/base/Input';\nimport { Popper } from '@mui/base/Popper';\nimport { useTheme } from '@mui/system';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport clsx from 'clsx';\n\nconst Autocomplete = React.forwardRef(function Autocomplete(\n  props: UseAutocompleteProps<(typeof top100Films)[number], false, false, false>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    disableClearable = false,\n    disabled = false,\n    readOnly = false,\n    options,\n    ...other\n  } = props;\n\n  const {\n    getRootProps,\n    getInputProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getListboxProps,\n    getOptionProps,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    anchorEl,\n    setAnchorEl,\n    groupedOptions,\n  } = useAutocomplete({\n    ...props,\n    componentName: 'BaseAutocompleteIntroduction',\n  });\n\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n\n  const rootRef = useForkRef(ref, setAnchorEl);\n\n  return (\n    <React.Fragment>\n      <div\n        {...getRootProps(other)}\n        ref={rootRef}\n        className={clsx('Autocomplete__root', focused && 'focused')}\n      >\n        <Input\n          id={id}\n          ref={setAnchorEl}\n          disabled={disabled}\n          readOnly={readOnly}\n          slotProps={{\n            root: {\n              className: 'Autocomplete__input-root',\n            },\n            input: {\n              className: 'Autocomplete__input',\n              ...getInputProps(),\n            },\n          }}\n        />\n        {hasClearIcon && (\n          <Button\n            {...getClearProps()}\n            className=\"Autocomplete__indicator clear-indicator\"\n          >\n            <ClearIcon />\n          </Button>\n        )}\n        <Button\n          {...getPopupIndicatorProps()}\n          className={clsx(\n            'Autocomplete__indicator',\n            'popup-indicator',\n            popupOpen && 'popupOpen',\n          )}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </div>\n      {anchorEl ? (\n        <Popper\n          open={popupOpen}\n          anchorEl={anchorEl}\n          slotProps={{\n            root: { className: 'Autocomplete__popper' },\n          }}\n          modifiers={[\n            { name: 'flip', enabled: false },\n            { name: 'preventOverflow', enabled: false },\n          ]}\n        >\n          <ul {...getListboxProps()} className=\"Autocomplete__listbox\">\n            {(groupedOptions as typeof top100Films).map((option, index) => {\n              const optionProps = getOptionProps({ option, index });\n\n              return (\n                <li {...optionProps} className=\"Autocomplete__option\">\n                  {option.label}\n                </li>\n              );\n            })}\n\n            {groupedOptions.length === 0 && (\n              <li className=\"Autocomplete__no-options\">No results</li>\n            )}\n          </ul>\n        </Popper>\n      ) : null}\n      <Styles />\n    </React.Fragment>\n  );\n});\n\nexport default function AutocompleteIntroduction() {\n  return <Autocomplete options={top100Films} />;\n}\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <style>\n      {`\n      .Autocomplete__root {\n        font-family: IBM Plex Sans, sans-serif;\n        font-weight: 400;\n        border-radius: 8px;\n        background: ${isDarkMode ? grey[900] : '#fff'};\n        border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n        color: ${isDarkMode ? grey[300] : grey[900]};\n        box-shadow: 0px 2px 4px ${\n          isDarkMode ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n        };\n        display: flex;\n        gap: 5px;\n        overflow: hidden;\n        width: 320px;\n\n        &.focused {\n          border-color: ${cyan[400]};\n          box-shadow: 0 0 0 3px ${isDarkMode ? cyan[500] : cyan[200]};\n        }\n\n        &:hover {\n          border-color: ${cyan[400]};\n        }\n\n        &:focus-visible {\n          outline: 0;\n        }\n      }\n\n      .Autocomplete__popper {\n        position: relative;\n        z-index: 1001;\n        width: 320px;\n      }\n\n      .Autocomplete__input-root {\n        background: inherit;\n        border-radius: inherit;\n        flex: 1 0 auto;\n      }\n\n      .Autocomplete__input {\n        font-size: 0.875rem;\n        font-family: inherit;\n        font-weight: 400;\n        line-height: 1.5;\n        color: ${isDarkMode ? grey[300] : grey[900]};\n        background: inherit;\n        border: none;\n        border-radius: inherit;\n        padding: 8px 12px;\n        outline: 0;\n      }\n\n      .Autocomplete__indicator {\n        outline: 0;\n        box-shadow: none;\n        border: 0;\n        border-radius: 4px;\n        background-color: transparent;\n        align-self: center;\n        padding: 0 2px;\n        margin-right: 4px;\n\n        &:hover {\n          background-color: ${isDarkMode ? grey[700] : cyan[100]};\n          cursor: pointer;\n        }\n      }\n\n      .Autocomplete__indicator.popup-indicator > svg {\n        transform: translateY(2px);\n      }\n\n      .Autocomplete__indicator.popup-indicator.popupOpen > svg {\n        transform: translateY(2px) rotate(180deg);\n      }\n\n      .Autocomplete__indicator.clear-indicator > svg {\n        transform: translateY(2px) scale(0.9);\n      }\n\n      .Autocomplete__listbox {\n        font-family: IBM Plex Sans, sans-serif;\n        font-size: 0.875rem;\n        box-sizing: border-box;\n        padding: 6px;\n        margin: 12px 0;\n        width: 100%;\n        border-radius: 12px;\n        overflow: auto;\n        outline: 0px;\n        max-height: 300px;\n        z-index: 1;\n        position: absolute;\n        background: ${isDarkMode ? grey[900] : '#fff'};\n        border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n        color: ${isDarkMode ? grey[300] : grey[900]};\n        box-shadow: 0px 4px 6px ${\n          isDarkMode ? 'rgba(0,0,0, 0.50)' : 'rgba(0,0,0, 0.05)'\n        };\n      }\n\n      .Autocomplete__option {\n        list-style: none;\n        padding: 8px;\n        border-radius: 8px;\n        cursor: default;\n\n        &:last-of-type {\n          border-bottom: none;\n        }\n\n        &:hover {\n          cursor: pointer;\n        }\n\n        &[aria-selected=true] {\n          background-color: ${isDarkMode ? cyan[900] : cyan[100]};\n          color: ${isDarkMode ? cyan[100] : cyan[900]};\n        }\n\n        &.Mui-focused,\n        &.Mui-focusVisible {\n          background-color: ${isDarkMode ? grey[800] : grey[100]};\n          color: ${isDarkMode ? grey[300] : grey[900]};\n        }\n\n        &.Mui-focusVisible {\n          box-shadow: 0 0 0 3px ${isDarkMode ? cyan[500] : cyan[200]};\n        }\n\n        &[aria-selected=true].Mui-focused,\n        &[aria-selected=true].Mui-focusVisible {\n          background-color: ${isDarkMode ? cyan[900] : cyan[100]};\n          color: ${isDarkMode ? cyan[100] : cyan[900]};\n        }\n      }\n\n      .Autocomplete__no-options {\n        list-style: none;\n        padding: 8px;\n        cursor: default;\n      }\n      `}\n    </style>\n  );\n}\n\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",tailwindJsxPreview:"<Autocomplete\n  options={top100Films}\n  isOptionEqualToValue={(option, value) => option.label === value.label}\n/>",cssJsxPreview:"<Autocomplete options={top100Films} />",jsxPreview:"<Autocomplete options={top100Films} />",moduleTS:"./AutocompleteIntroduction/system/index.js",rawTS:"import * as React from 'react';\nimport { useAutocomplete, UseAutocompleteProps } from '@mui/base/useAutocomplete';\nimport { Button } from '@mui/base/Button';\nimport { Popper } from '@mui/base/Popper';\nimport { styled } from '@mui/system';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClearIcon from '@mui/icons-material/Clear';\n\nconst Autocomplete = React.forwardRef(function Autocomplete(\n  props: UseAutocompleteProps<(typeof top100Films)[number], false, false, false>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    disableClearable = false,\n    disabled = false,\n    readOnly = false,\n    ...other\n  } = props;\n\n  const {\n    getRootProps,\n    getInputProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getListboxProps,\n    getOptionProps,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    anchorEl,\n    setAnchorEl,\n    groupedOptions,\n  } = useAutocomplete({\n    ...props,\n    componentName: 'BaseAutocompleteIntroduction',\n  });\n\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n\n  const rootRef = useForkRef(ref, setAnchorEl);\n\n  return (\n    <React.Fragment>\n      <StyledAutocompleteRoot\n        {...getRootProps(other)}\n        ref={rootRef}\n        className={focused ? 'focused' : undefined}\n      >\n        <StyledInput\n          id={id}\n          disabled={disabled}\n          readOnly={readOnly}\n          {...getInputProps()}\n        />\n        {hasClearIcon && (\n          <StyledClearIndicator {...getClearProps()}>\n            <ClearIcon />\n          </StyledClearIndicator>\n        )}\n        <StyledPopupIndicator\n          {...getPopupIndicatorProps()}\n          className={popupOpen ? 'popupOpen' : undefined}\n        >\n          <ArrowDropDownIcon />\n        </StyledPopupIndicator>\n      </StyledAutocompleteRoot>\n      {anchorEl ? (\n        <Popper\n          open={popupOpen}\n          anchorEl={anchorEl}\n          slots={{\n            root: StyledPopper,\n          }}\n          modifiers={[\n            { name: 'flip', enabled: false },\n            { name: 'preventOverflow', enabled: false },\n          ]}\n        >\n          <StyledListbox {...getListboxProps()}>\n            {(groupedOptions as typeof top100Films).map((option, index) => {\n              const optionProps = getOptionProps({ option, index });\n\n              return <StyledOption {...optionProps}>{option.label}</StyledOption>;\n            })}\n\n            {groupedOptions.length === 0 && (\n              <StyledNoOptions>No results</StyledNoOptions>\n            )}\n          </StyledListbox>\n        </Popper>\n      ) : null}\n    </React.Fragment>\n  );\n});\n\nexport default function AutocompleteIntroduction() {\n  return <Autocomplete options={top100Films} />;\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#99CCF3',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst StyledAutocompleteRoot = styled('div')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[500]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n  display: flex;\n  gap: 5px;\n  padding-right: 5px;\n  overflow: hidden;\n  width: 320px;\n\n  &.focused {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[700] : blue[200]};\n  }\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? grey[800] : grey[50]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[600] : grey[300]};\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n\nconst StyledInput = styled('input')(\n  ({ theme }) => `\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n  flex: 1 0 auto;\n`,\n);\n\n// ComponentPageTabs has z-index: 1000\nconst StyledPopper = styled('div')`\n  position: relative;\n  z-index: 1001;\n  width: 320px;\n`;\n\nconst StyledListbox = styled('ul')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  padding: 6px;\n  margin: 12px 0;\n  min-width: 320px;\n  border-radius: 12px;\n  overflow: auto;\n  outline: 0px;\n  max-height: 300px;\n  z-index: 1;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  box-shadow: 0px 4px 6px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.3)' : 'rgba(0,0,0, 0.05)'\n  };\n  `,\n);\n\nconst StyledOption = styled('li')(\n  ({ theme }) => `\n  list-style: none;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: default;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &[aria-selected=true] {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n\n  &.Mui-focused,\n  &.Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? grey[800] : grey[100]};\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  }\n\n  &.Mui-focusVisible {\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n\n  &[aria-selected=true].Mui-focused,\n  &[aria-selected=true].Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n  `,\n);\n\nconst StyledPopupIndicator = styled(Button)(\n  ({ theme }) => `\n    outline: 0;\n    box-shadow: none;\n    border: 0;\n    border-radius: 4px;\n    background-color: transparent;\n    align-self: center;\n    padding: 0 2px;\n\n    &:hover {\n      background-color: ${theme.palette.mode === 'dark' ? grey[700] : blue[100]};\n      cursor: pointer;\n    }\n\n    & > svg {\n      transform: translateY(2px);\n    }\n\n    &.popupOpen > svg {\n      transform: translateY(2px) rotate(180deg);\n    }\n  `,\n);\n\nconst StyledClearIndicator = styled(Button)(\n  ({ theme }) => `\n    outline: 0;\n    box-shadow: none;\n    border: 0;\n    border-radius: 4px;\n    background-color: transparent;\n    align-self: center;\n    padding: 0 2px;\n\n    &:hover {\n      background-color: ${theme.palette.mode === 'dark' ? grey[700] : blue[100]};\n      cursor: pointer;\n    }\n\n    & > svg {\n      transform: translateY(2px) scale(0.9);\n    }\n  `,\n);\n\nconst StyledNoOptions = styled('li')`\n  list-style: none;\n  padding: 8px;\n  cursor: default;\n`;\n\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"UseAutocompletePopper.js":{module:"./UseAutocompletePopper.js",raw:"import * as React from 'react';\nimport { useAutocomplete } from '@mui/base/useAutocomplete';\nimport { Popper } from '@mui/base/Popper';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\n\nconst Autocomplete = React.forwardRef(function Autocomplete(props, ref) {\n  const {\n    getRootProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    focused,\n    popupOpen,\n    anchorEl,\n    setAnchorEl,\n  } = useAutocomplete(props);\n\n  const rootRef = useForkRef(ref, setAnchorEl);\n\n  return (\n    <React.Fragment>\n      <StyledAutocompleteRoot\n        {...getRootProps()}\n        ref={rootRef}\n        className={focused ? 'focused' : ''}\n      >\n        <StyledInput {...getInputProps()} />\n      </StyledAutocompleteRoot>\n      {anchorEl && (\n        <Popper\n          open={popupOpen}\n          anchorEl={anchorEl}\n          slots={{\n            root: StyledPopper,\n          }}\n        >\n          <StyledListbox {...getListboxProps()}>\n            {groupedOptions.length > 0 ? (\n              groupedOptions.map((option, index) => (\n                <StyledOption {...getOptionProps({ option, index })}>\n                  {option.label}\n                </StyledOption>\n              ))\n            ) : (\n              <StyledNoOptions>No results</StyledNoOptions>\n            )}\n          </StyledListbox>\n        </Popper>\n      )}\n    </React.Fragment>\n  );\n});\n\nexport default function UseAutocompletePopper() {\n  const [value, setValue] = React.useState(null);\n\n  const handleChange = (event, newValue) => setValue(newValue);\n\n  return (\n    <Autocomplete options={top100Films} value={value} onChange={handleChange} />\n  );\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#99CCF3',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst StyledAutocompleteRoot = styled('div')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[500]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n  display: flex;\n  gap: 5px;\n  padding-right: 5px;\n  overflow: hidden;\n  width: 320px;\n  margin: 1.5rem 0;\n\n  &.focused {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[700] : blue[200]};\n  }\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n\nconst StyledInput = styled('input')(\n  ({ theme }) => `\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n  flex: 1 0 auto;\n`,\n);\n\n// ComponentPageTabs has z-index: 1000\nconst StyledPopper = styled('div')`\n  position: relative;\n  z-index: 1001;\n  width: 320px;\n`;\n\nconst StyledListbox = styled('ul')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  padding: 6px;\n  margin: 12px 0;\n  min-width: 320px;\n  border-radius: 12px;\n  overflow: auto;\n  outline: 0px;\n  max-height: 300px;\n  z-index: 1;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  box-shadow: 0px 4px 6px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.50)' : 'rgba(0,0,0, 0.05)'\n  };\n  `,\n);\n\nconst StyledOption = styled('li')(\n  ({ theme }) => `\n  list-style: none;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: default;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &[aria-selected=true] {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n\n  &.Mui-focused,\n  &.Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? grey[800] : grey[100]};\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  }\n\n  &.Mui-focusVisible {\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n\n  &[aria-selected=true].Mui-focused,\n  &[aria-selected=true].Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n  `,\n);\n\nconst StyledNoOptions = styled('li')`\n  list-style: none;\n  padding: 8px;\n  cursor: default;\n`;\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",jsxPreview:"<Autocomplete options={top100Films} value={value} onChange={handleChange} />",moduleTS:"./UseAutocompletePopper.js",rawTS:"import * as React from 'react';\nimport { useAutocomplete, UseAutocompleteProps } from '@mui/base/useAutocomplete';\nimport { Popper } from '@mui/base/Popper';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\n\nconst Autocomplete = React.forwardRef(function Autocomplete(\n  props: UseAutocompleteProps<(typeof top100Films)[number], false, false, false>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    getRootProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    focused,\n    popupOpen,\n    anchorEl,\n    setAnchorEl,\n  } = useAutocomplete(props);\n\n  const rootRef = useForkRef(ref, setAnchorEl);\n\n  return (\n    <React.Fragment>\n      <StyledAutocompleteRoot\n        {...getRootProps()}\n        ref={rootRef}\n        className={focused ? 'focused' : ''}\n      >\n        <StyledInput {...getInputProps()} />\n      </StyledAutocompleteRoot>\n      {anchorEl && (\n        <Popper\n          open={popupOpen}\n          anchorEl={anchorEl}\n          slots={{\n            root: StyledPopper,\n          }}\n        >\n          <StyledListbox {...getListboxProps()}>\n            {groupedOptions.length > 0 ? (\n              (groupedOptions as typeof top100Films).map((option, index) => (\n                <StyledOption {...getOptionProps({ option, index })}>\n                  {option.label}\n                </StyledOption>\n              ))\n            ) : (\n              <StyledNoOptions>No results</StyledNoOptions>\n            )}\n          </StyledListbox>\n        </Popper>\n      )}\n    </React.Fragment>\n  );\n});\n\nexport default function UseAutocompletePopper() {\n  const [value, setValue] = React.useState<(typeof top100Films)[number] | null>(\n    null,\n  );\n\n  const handleChange = (\n    event: React.SyntheticEvent,\n    newValue: (typeof top100Films)[number] | null,\n  ) => setValue(newValue);\n\n  return (\n    <Autocomplete options={top100Films} value={value} onChange={handleChange} />\n  );\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#99CCF3',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst StyledAutocompleteRoot = styled('div')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[500]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n  display: flex;\n  gap: 5px;\n  padding-right: 5px;\n  overflow: hidden;\n  width: 320px;\n  margin: 1.5rem 0;\n\n  &.focused {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[700] : blue[200]};\n  }\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n\nconst StyledInput = styled('input')(\n  ({ theme }) => `\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n  flex: 1 0 auto;\n`,\n);\n\n// ComponentPageTabs has z-index: 1000\nconst StyledPopper = styled('div')`\n  position: relative;\n  z-index: 1001;\n  width: 320px;\n`;\n\nconst StyledListbox = styled('ul')(\n  ({ theme }) => `\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n  padding: 6px;\n  margin: 12px 0;\n  min-width: 320px;\n  border-radius: 12px;\n  overflow: auto;\n  outline: 0px;\n  max-height: 300px;\n  z-index: 1;\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  box-shadow: 0px 4px 6px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.50)' : 'rgba(0,0,0, 0.05)'\n  };\n  `,\n);\n\nconst StyledOption = styled('li')(\n  ({ theme }) => `\n  list-style: none;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: default;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &[aria-selected=true] {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n\n  &.Mui-focused,\n  &.Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? grey[800] : grey[100]};\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  }\n\n  &.Mui-focusVisible {\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n\n  &[aria-selected=true].Mui-focused,\n  &[aria-selected=true].Mui-focusVisible {\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\n  }\n  `,\n);\n\nconst StyledNoOptions = styled('li')`\n  list-style: none;\n  padding: 8px;\n  cursor: default;\n`;\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"}};ne.scope={process:{},import:{react:L,"@mui/base/useAutocomplete":F,"@mui/system":M,"prop-types":O,"@mui/base/Button":B,"@mui/base/Popper":E,"@mui/utils":_,"@mui/icons-material/ArrowDropDown":N,"@mui/icons-material/Clear":V,"@mui/utils/useForkRef":I,clsx:$,"@mui/base/Input":z}};var nn={"./UseAutocomplete.js":function(){var e=R.useState(null),n=(0,K.Z)(e,2),a=n[0],o=n[1],t=(0,U.o)({id:"use-autocomplete-demo",options:et,getOptionLabel:function(e){return e.label},value:a,onChange:function(e,n){return o(n)}}),r=t.getRootProps,l=t.getInputLabelProps,s=t.getInputProps,i=t.getListboxProps,p=t.getOptionProps,d=t.groupedOptions,c=t.focused;return(0,q.jsxs)("div",{style:{marginBottom:24},children:[(0,q.jsx)(Q,(0,H.Z)((0,H.Z)({},l()),{},{children:"Pick a movie"})),(0,q.jsx)(ee,(0,H.Z)((0,H.Z)({},r()),{},{className:c?"focused":"",children:(0,q.jsx)(en,(0,H.Z)({},s()))})),d.length>0&&(0,q.jsx)(ea,(0,H.Z)((0,H.Z)({},i()),{},{children:d.map(function(e,n){return(0,q.jsx)(eo,(0,H.Z)((0,H.Z)({},p({option:e,index:n})),{},{children:e.label}))})}))]})},"./ControlledStates.js":function(){var e=R.useState("Firefox"),n=(0,K.Z)(e,2),a=n[0],o=n[1],t=R.useState(""),r=(0,K.Z)(t,2),l=r[0],s=r[1],i=(0,U.o)({id:"controlled-state-demo",options:er,value:a,onChange:function(e,n){return o(n)},inputValue:l,onInputChange:function(e,n){return s(n)}}),p=i.getRootProps,d=i.getInputProps,c=i.getListboxProps,u=i.getOptionProps,b=i.groupedOptions,y=i.focused;return(0,q.jsxs)(eb,{children:[(0,q.jsxs)(ey,{children:["value: ",(0,q.jsx)("code",{children:null!=a?a:" "})]}),(0,q.jsxs)(ey,{children:["inputValue: ",(0,q.jsx)("code",{children:null!=l?l:" "})]}),(0,q.jsxs)(ei,{children:[(0,q.jsx)(ep,(0,H.Z)((0,H.Z)({},p()),{},{className:y?"focused":"",children:(0,q.jsx)(ed,(0,H.Z)({},d()))})),b.length>0&&(0,q.jsx)(ec,(0,H.Z)((0,H.Z)({},c()),{},{children:b.map(function(e,n){return(0,q.jsx)(eu,(0,H.Z)((0,H.Z)({},u({option:e,index:n})),{},{children:e}))})}))]})]})},"./AutocompleteIntroduction/system/index.js":function(){return p||(p=(0,q.jsx)(ex,{options:eR}))},"./UseAutocompletePopper.js":function(){var e=R.useState(null),n=(0,K.Z)(e,2),a=n[0],o=n[1];return(0,q.jsx)(eL,{options:eV,value:a,onChange:function(e,n){return o(n)}})},"./AutocompleteIntroduction/tailwind/index.js":function(){return(0,q.jsx)(ej,{options:e$,isOptionEqualToValue:function(e,n){return e.label===n.label}})},"./AutocompleteIntroduction/tailwind/index.tsx":function(){return(0,q.jsx)(eW,{options:eH,isOptionEqualToValue:function(e,n){return e.label===n.label}})},"./AutocompleteIntroduction/css/index.js":function(){return w||(w=(0,q.jsx)(eq,{options:e0}))},"./AutocompleteIntroduction/css/index.tsx":function(){return D||(D=(0,q.jsx)(e9,{options:e7}))}},na={"modules/components/ComponentLinkHeader.js":e3.Z,"modules/components/ComponentPageTabs.js":e8.Z}},136515:function(e,n,a){e.exports=a(465317)}}]);