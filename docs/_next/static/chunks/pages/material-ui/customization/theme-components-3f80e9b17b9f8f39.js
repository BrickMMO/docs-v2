(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[10327],{458190:function(n,e,a){"use strict";a.r(e),a.d(e,{default:function(){return t.Z}});var t=a(333346)},950052:function(n,e,a){"use strict";a.r(e),a.d(e,{buttonClasses:function(){return s.Z},default:function(){return t.Z},getButtonUtilityClass:function(){return s.F}});var t=a(964882),s=a(862007)},39381:function(n,e,a){"use strict";a.r(e),a.d(e,{chipClasses:function(){return s.Z},default:function(){return t.Z},getChipUtilityClass:function(){return s.z}});var t=a(514950),s=a(884614)},832320:function(n,e,a){"use strict";a.r(e),a.d(e,{SliderMark:function(){return t.jz},SliderMarkLabel:function(){return t.J$},SliderRail:function(){return t._U},SliderRoot:function(){return t.l7},SliderThumb:function(){return t.gs},SliderTrack:function(){return t.Uj},SliderValueLabel:function(){return t.Kq},default:function(){return t.ZP},getSliderUtilityClass:function(){return s.k},sliderClasses:function(){return s.Z}});var t=a(57046),s=a(167474)},245406:function(n,e,a){"use strict";a.r(e),a.d(e,{alignProperty:function(){return l},convertLength:function(){return c},fontGrid:function(){return u},getUnit:function(){return p},isUnitless:function(){return r},responsiveProperty:function(){return d},toUnitless:function(){return i}});var t=a(777193),s=a(262207),o=a.n(s);function r(n){return String(o()(n)).length===String(n).length}function p(n){return String(n).match(/[\d.\-+]*\s*(.*)/)[1]||""}function i(n){return o()(n)}function c(n){return function(e,a){var t=p(e);if(t===a)return e;var s=i(e);"px"!==t&&("em"===t?s=i(e)*i(n):"rem"===t&&(s=i(e)*i(n)));var r=s;if("px"!==a){if("em"===a)r=s/i(n);else{if("rem"!==a)return e;r=s/i(n)}}return o()(r.toFixed(5))+a}}function l(n){var e=n.size,a=n.grid,t=e-e%a,s=t+a;return e-t<s-e?t:s}function u(n){var e=n.lineHeight;return n.pixels/(e*n.htmlFontSize)}function d(n){var e=n.cssProperty,a=n.min,s=n.max,o=n.unit,r=void 0===o?"rem":o,p=n.breakpoints,i=void 0===p?[600,900,1200]:p,c=n.transform,l=void 0===c?null:c,u=(0,t.Z)({},e,"".concat(a).concat(r)),d=(s-a)/i[i.length-1];return i.forEach(function(n){var s=a+d*n;null!==l&&(s=l(s)),u["@media (min-width:".concat(n,"px)")]=(0,t.Z)({},e,"".concat(Math.round(1e4*s)/1e4).concat(r))}),u}},415142:function(n,e,a){"use strict";a.r(e),a.d(e,{Experimental_CssVarsProvider:function(){return L.CM},StyledEngineProvider:function(){return M.Z},THEME_ID:function(){return s.Z},ThemeProvider:function(){return P.Z},adaptV4Theme:function(){return h},alpha:function(){return k.Fq},createMuiTheme:function(){return v.A},createStyles:function(){return x},createTheme:function(){return v.Z},css:function(){return f.css},darken:function(){return k._j},decomposeColor:function(){return k.tB},duration:function(){return w.x9},easing:function(){return w.Ui},emphasize:function(){return k._4},experimentalStyled:function(){return Z.ZP},experimental_extendTheme:function(){return R.Z},experimental_sx:function(){return A},getContrastRatio:function(){return k.mi},getInitColorSchemeScript:function(){return L.JO},getLuminance:function(){return k.H3},getOverlayAlpha:function(){return V.Z},hexToRgb:function(){return k.oo},hslToRgb:function(){return k.ve},keyframes:function(){return f.keyframes},lighten:function(){return k.$n},makeStyles:function(){return j},private_createTypography:function(){return G.Z},private_excludeVariablesFromRoot:function(){return H.Z},recomposeColor:function(){return k.wy},responsiveFontSizes:function(){return C.Z},rgbToHex:function(){return k.vq},shouldSkipGeneratingVar:function(){return _.Z},styled:function(){return Z.ZP},unstable_createMuiStrictModeTheme:function(){return g},unstable_getUnit:function(){return T.getUnit},unstable_toUnitless:function(){return T.toUnitless},useColorScheme:function(){return L.tv},useTheme:function(){return S.Z},useThemeProps:function(){return B.Z},withStyles:function(){return z},withTheme:function(){return O}});var t=a(242268),s=a(543690),o=a(777193),r=a(163804),p=a(80117),i=a(726243),c=a.n(i),l=a(366537),u=a(820928),d=["defaultProps","mixins","overrides","palette","props","styleOverrides"],m=["type","mode"];function h(n){var e=n.defaultProps,a=void 0===e?{}:e,t=n.mixins,s=void 0===t?{}:t,i=n.overrides,h=void 0===i?{}:i,k=n.palette,f=void 0===k?{}:k,v=n.props,y=void 0===v?{}:v,g=n.styleOverrides,b=void 0===g?{}:g,x=(0,p.Z)(n,d),T=(0,r.Z)((0,r.Z)({},x),{},{components:{}});c()(a).forEach(function(n){var e=T.components[n]||{};e.defaultProps=a[n],T.components[n]=e}),c()(y).forEach(function(n){var e=T.components[n]||{};e.defaultProps=y[n],T.components[n]=e}),c()(b).forEach(function(n){var e=T.components[n]||{};e.styleOverrides=b[n],T.components[n]=e}),c()(h).forEach(function(n){var e=T.components[n]||{};e.styleOverrides=h[n],T.components[n]=e}),T.spacing=(0,l.Z)(n.spacing);var C=(0,u.Z)(n.breakpoints||{}),w=T.spacing;T.mixins=(0,r.Z)({gutters:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,r.Z)((0,r.Z)({paddingLeft:w(2),paddingRight:w(2)},n),{},(0,o.Z)({},C.up("sm"),(0,r.Z)({paddingLeft:w(3),paddingRight:w(3)},n[C.up("sm")])))}},s);var S=f.type,B=f.mode,Z=(0,p.Z)(f,m),P=B||S||"light";return T.palette=(0,r.Z)({text:{hint:"dark"===P?"rgba(255, 255, 255, 0.5)":"rgba(0, 0, 0, 0.38)"},mode:P,type:P},Z),T}var k=a(992443),f=a(370917),v=a(867851),y=a(208882);function g(n){for(var e=arguments.length,a=Array(e>1?e-1:0),t=1;t<e;t++)a[t-1]=arguments[t];return v.Z.apply(void 0,[(0,y.Z)({unstable_strictMode:!0},n)].concat(a))}var b=!1;function x(n){return b||(console.warn("MUI: createStyles from @mui/material/styles is deprecated.\nPlease use @mui/styles/createStyles"),b=!0),n}var T=a(245406),C=a(997640),w=a(904159),S=a(178198),B=a(424633),Z=a(602688),P=a(675812),M=a(980615);function j(){throw Error((0,t.Z)(14))}function z(){throw Error((0,t.Z)(15))}function O(){throw Error((0,t.Z)(16))}var L=a(698147),R=a(382388),V=a(335197),_=a(990687),G=a(10110),H=a(674199);function A(){throw Error((0,t.Z)(20))}},997640:function(n,e,a){"use strict";a.d(e,{Z:function(){return i}});var t=a(163804),s=a(242268),o=a(262207),r=a.n(o),p=a(245406);function i(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=e.breakpoints,o=e.disableAlign,i=void 0!==o&&o,c=e.factor,l=void 0===c?2:c,u=e.variants,d=(0,t.Z)({},n);d.typography=(0,t.Z)({},d.typography);var m=d.typography,h=(0,p.convertLength)(m.htmlFontSize),k=(void 0===a?["sm","md","lg"]:a).map(function(n){return d.breakpoints.values[n]});return(void 0===u?["h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","button","overline"]:u).forEach(function(n){var e=m[n],a=r()(h(e.fontSize,"rem"));if(!(a<=1)){var o=1+(a-1)/l,c=e.lineHeight;if(!(0,p.isUnitless)(c)&&!i)throw Error((0,s.Z)(6));(0,p.isUnitless)(c)||(c=r()(h(c,"rem"))/r()(a));var u=null;i||(u=function(n){return(0,p.alignProperty)({size:n,grid:(0,p.fontGrid)({pixels:4,lineHeight:c,htmlFontSize:m.htmlFontSize})})}),m[n]=(0,t.Z)((0,t.Z)({},e),(0,p.responsiveProperty)({cssProperty:"fontSize",min:o,max:a,unit:"rem",breakpoints:k,transform:u}))}}),d}},980615:function(n,e,a){"use strict";a.d(e,{Z:function(){return p}}),a(667294);var t,s=a(679626),o=a(826077),r=a(785893);function p(n){var e=n.injectFirst,a=n.children;return e&&t?(0,r.jsx)(s.C,{value:t,children:a}):a}"object"==typeof document&&(t=(0,o.default)({key:"css",prepend:!0}))},548517:function(n,e){"use strict";e.Z={border:0,clip:"rect(0 0 0 0)",height:"1px",margin:-1,overflow:"hidden",padding:0,position:"absolute",whiteSpace:"nowrap",width:"1px"}},562437:function(n,e,a){"use strict";a.r(e),a.d(e,{default:function(){return E}});var t,s,o,r,p={};a.r(p),a.d(p,{demoComponents:function(){return H},demos:function(){return G},docs:function(){return _},srcComponents:function(){return A}});var i=a(163804),c=a(667294),l=a.t(c,2),u=a(165492),d=a(415142),m=a(950052),h=a(39381),k=a(52774),f=a.n(k),v=a(458190),y=a(832320),g=a(867851),b=a(675812),x=a(964882),T=a(785893),C=(0,g.Z)({components:{MuiButtonBase:{defaultProps:{disableRipple:!0}}}}),w=(0,g.Z)({components:{MuiButton:{styleOverrides:{root:{fontSize:"1rem"}}}}}),S=a(514950),B=(0,g.Z)({components:{MuiChip:{styleOverrides:{root:function(n){return n.theme.unstable_sx({px:1,py:.25,borderRadius:1})},label:{padding:"initial"},icon:function(n){return n.theme.unstable_sx({mr:.5,ml:"-2px"})}}}}}),Z=a(777193),P=a(333346),M=a(167474),j=a(57046),z=(0,g.Z)({components:{MuiSlider:{styleOverrides:{valueLabel:function(n){var e=n.ownerState,a=n.theme;return(0,i.Z)((0,i.Z)({},"vertical"===e.orientation&&{backgroundColor:"transparent",color:a.palette.grey[500],fontWeight:700,padding:0,left:"3rem"}),{},(0,Z.Z)({},"&.".concat(M.Z.valueLabelOpen),{transform:"none",top:"initial"}))}}}}});function O(n){return"".concat(n,"\xb0C")}var L=(0,g.Z)(),R=(0,g.Z)({components:{MuiButton:{variants:[{props:{variant:"dashed"},style:{textTransform:"none",border:"2px dashed ".concat(L.palette.primary.main),color:L.palette.primary.main}},{props:{variant:"dashed",color:"secondary"},style:{border:"2px dashed ".concat(L.palette.secondary.main),color:L.palette.secondary.main}},{props:{variant:"dashed",size:"large"},style:{borderWidth:4}},{props:{variant:"dashed",color:"secondary",size:"large"},style:{fontSize:18}}]}}}),V=(0,g.Z)({typography:{button:{fontSize:"1rem"}}}),_={en:{description:"You can customize a component's styles, default props, and more by using its component key inside the theme.",location:"/brickmmo-docs-v2/data/material/customization/theme-components/theme-components.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<h1>Themed components</h1><p class="description">You can customize a component\'s styles, default props, and more by using its component key inside the theme.</p>\n\n<p>The <code>components</code> key in the theme helps to achieve styling consistency across your application.\nHowever, the theme isn&#39;t tree-shakable, prefer creating new components for heavy customizations.</p>\n<h2 id="theme-default-props">Theme default props<a aria-labelledby="theme-default-props" class="anchor-link" href="#theme-default-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="theme-default-props"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Every Material UI component has default values for each of its props.\nTo change these default values, use the <code>defaultProps</code> key exposed in the theme&#39;s <code>components</code> key:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Name of the component</span>\n    <span class="token literal-property property">MuiButtonBase</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">defaultProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// The props to change the default for.</span>\n        <span class="token literal-property property">disableRipple</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// No more ripple, on the whole application \uD83D\uDCA3!</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"DefaultProps.js"},'<p>If you&#39;re using TypeScript and <a href="/material-ui/about-the-lab/">lab components</a>, check <a href="/material-ui/about-the-lab/#typescript">this article to learn how to override their styles</a>.</p>\n<h2 id="theme-style-overrides">Theme style overrides<a aria-labelledby="theme-style-overrides" class="anchor-link" href="#theme-style-overrides" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="theme-style-overrides"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The theme&#39;s <code>styleOverrides</code> key makes it possible to potentially change every single style injected by Material UI into the DOM.\nThis is useful if you want to apply a fully custom design system to Material UI&#39;s components.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Name of the component</span>\n    <span class="token literal-property property">MuiButton</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Name of the slot</span>\n        <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// Some CSS</span>\n          <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">\'1rem\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"GlobalThemeOverride.js"},'<p>Each component is composed of several different parts.\nThese parts correspond to classes that are available to the component—see the <strong>CSS</strong> section of the component&#39;s API page for a detailed list.\nYou can use these classes inside the <code>styleOverrides</code> key to modify the corresponding parts of the component.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiButton</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> ownerState <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>variant <span class="token operator">===</span> <span class="token string">\'contained\'</span> <span class="token operator">&amp;&amp;</span>\n            ownerState<span class="token punctuation">.</span>color <span class="token operator">===</span> <span class="token string">\'primary\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n              <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">\'#202020\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'#fff\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="overrides-based-on-props">Overrides based on props<a aria-labelledby="overrides-based-on-props" class="anchor-link" href="#overrides-based-on-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="overrides-based-on-props"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>You can pass a callback as a value in each slot of the component&#39;s <code>styleOverrides</code> to apply styles based on props.</p>\n<p>The <code>ownerState</code> prop is a combination of public props that you pass to the component + internal state of the component.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> finalTheme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiSlider</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">valueLabel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> ownerState<span class="token punctuation">,</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>orientation <span class="token operator">===</span> <span class="token string">\'vertical\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">\'transparent\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>grey<span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"GlobalThemeOverrideCallback.js"},'<h3 id="the-sx-syntax-experimental">The <code>sx</code> syntax (experimental)<a aria-labelledby="the-sx-syntax-experimental" class="anchor-link" href="#the-sx-syntax-experimental" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="the-sx-syntax-experimental"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The <code>sx</code> prop acts as a shortcut for defining custom styles that access the theme object.\nThis prop lets you write inline styles using a superset of CSS.\nLearn more about <a href="/system/getting-started/the-sx-prop/">the concept behind the <code>sx</code> prop</a> and <a href="/system/styled/#difference-with-the-sx-prop">how <code>sx</code> differs from the <code>styled</code> utility</a>.</p>\n<p>You can use the <code>sx</code> prop inside the <code>styleOverrides</code> key to modify styles within the theme using shorthand CSS notation.\nThis is especially handy if you&#39;re already using the <code>sx</code> prop with your components, because you can use the same syntax in your theme and quickly transfer styles between the two.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The <code>sx</code> prop is a stable feature for customizing components in Material UI v5, but it is still considered <em>experimental</em> when used directly inside the theme object.</p>\n\n</div></aside>',{demo:"GlobalThemeOverrideSx.js",defaultCodeOpen:!1},'<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token keyword">const</span> finalTheme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  components<span class="token operator">:</span> <span class="token punctuation">{</span>\n    MuiChip<span class="token operator">:</span> <span class="token punctuation">{</span>\n      styleOverrides<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> theme <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n          theme<span class="token punctuation">.</span><span class="token function">unstable_sx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            px<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            py<span class="token operator">:</span> <span class="token number">0.25</span><span class="token punctuation">,</span>\n            borderRadius<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        label<span class="token operator">:</span> <span class="token punctuation">{</span>\n          padding<span class="token operator">:</span> <span class="token string">\'initial\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">icon</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> theme <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n          theme<span class="token punctuation">.</span><span class="token function">unstable_sx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            mr<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\n            ml<span class="token operator">:</span> <span class="token string">\'-2px\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="specificity">Specificity<a aria-labelledby="specificity" class="anchor-link" href="#specificity" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="specificity"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>If you use the theming approach to customize the components, you&#39;ll still be able to override them using the <code>sx</code> prop as it has a higher CSS specificity, even if you&#39;re using the experimental <code>sx</code> syntax within the theme.</p>\n<h2 id="creating-new-component-variants">Creating new component variants<a aria-labelledby="creating-new-component-variants" class="anchor-link" href="#creating-new-component-variants" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="creating-new-component-variants"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>You can use the <code>variants</code> key in the theme&#39;s <code>components</code> section to create new variants to Material UI components. These new variants can specify what styles the component should have when that specific variant prop value is applied.</p>\n<p>The definitions are specified in an array, under the component&#39;s name. For each of them a CSS class is added to the HTML <code>&lt;head&gt;</code>. The order is important, so make sure that the styles that should win are specified last.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiButton</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">variants</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">variant</span><span class="token operator">:</span> <span class="token string">\'dashed\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">textTransform</span><span class="token operator">:</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">2px dashed </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>blue<span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">variant</span><span class="token operator">:</span> <span class="token string">\'dashed\'</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'secondary\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">4px dashed </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>red<span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>If you&#39;re using TypeScript, you&#39;ll need to specify your new variants/colors, using <a href="https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation">module augmentation</a>.</p>\n<!-- Tested with packages/mui-material/test/typescript/augmentation/themeComponents.spec.ts -->\n\n<div class="MuiCode-root"><pre><code class="language-tsx">declare module <span class="token string">\'@mui/material/Button\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">ButtonPropsVariantOverrides</span> <span class="token punctuation">{</span>\n    dashed<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"GlobalThemeVariants.js"},'<h2 id="theme-variables">Theme variables<a aria-labelledby="theme-variables" class="anchor-link" href="#theme-variables" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="theme-variables"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Another way to override the look of all component instances is to adjust the <a href="/material-ui/customization/theming/#theme-configuration-variables">theme configuration variables</a>.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">typography</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">button</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">\'1rem\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"ThemeVariables.js"}],toc:[{text:"Theme default props",level:2,hash:"theme-default-props",children:[]},{text:"Theme style overrides",level:2,hash:"theme-style-overrides",children:[{text:"Overrides based on props",level:3,hash:"overrides-based-on-props"},{text:"The sx syntax (experimental)",level:3,hash:"the-sx-syntax-experimental"},{text:"Specificity",level:3,hash:"specificity"}]},{text:"Creating new component variants",level:2,hash:"creating-new-component-variants",children:[]},{text:"Theme variables",level:2,hash:"theme-variables",children:[]}],title:"Themed components",headers:{components:[]}}},G={"DefaultProps.js":{module:"./DefaultProps.js",raw:"import * as React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nconst theme = createTheme({\n  components: {\n    // Name of the component ⚛️\n    MuiButtonBase: {\n      defaultProps: {\n        // The default props to change\n        disableRipple: true, // No more ripple, on the whole application \uD83D\uDCA3!\n      },\n    },\n  },\n});\n\nexport default function DefaultProps() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Button>This button has disabled ripples.</Button>\n    </ThemeProvider>\n  );\n}\n",jsxPreview:"<ThemeProvider theme={theme}>\n  <Button>This button has disabled ripples.</Button>\n</ThemeProvider>",moduleTS:"./DefaultProps.js",rawTS:"import * as React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nconst theme = createTheme({\n  components: {\n    // Name of the component ⚛️\n    MuiButtonBase: {\n      defaultProps: {\n        // The default props to change\n        disableRipple: true, // No more ripple, on the whole application \uD83D\uDCA3!\n      },\n    },\n  },\n});\n\nexport default function DefaultProps() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Button>This button has disabled ripples.</Button>\n    </ThemeProvider>\n  );\n}\n"},"GlobalThemeOverride.js":{module:"./GlobalThemeOverride.js",raw:"import * as React from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nconst theme = createTheme({\n  components: {\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          fontSize: '1rem',\n        },\n      },\n    },\n  },\n});\n\nexport default function GlobalThemeOverride() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Button>font-size: 1rem</Button>\n    </ThemeProvider>\n  );\n}\n",jsxPreview:"<ThemeProvider theme={theme}>\n  <Button>font-size: 1rem</Button>\n</ThemeProvider>",moduleTS:"./GlobalThemeOverride.js",rawTS:"import * as React from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nconst theme = createTheme({\n  components: {\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          fontSize: '1rem',\n        },\n      },\n    },\n  },\n});\n\nexport default function GlobalThemeOverride() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Button>font-size: 1rem</Button>\n    </ThemeProvider>\n  );\n}\n"},"GlobalThemeOverrideSx.js":{module:"./GlobalThemeOverrideSx.js",raw:"import * as React from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Chip from '@mui/material/Chip';\nimport Check from '@mui/icons-material/Check';\n\nconst finalTheme = createTheme({\n  components: {\n    MuiChip: {\n      styleOverrides: {\n        root: ({ theme }) =>\n          theme.unstable_sx({\n            // https://mui.com/system/getting-started/the-sx-prop/#spacing\n            px: 1,\n            py: 0.25,\n            // https://mui.com/system/borders/#border-radius\n            borderRadius: 1, // 4px as default.\n          }),\n        label: {\n          padding: 'initial',\n        },\n        icon: ({ theme }) =>\n          theme.unstable_sx({\n            mr: 0.5,\n            ml: '-2px',\n          }),\n      },\n    },\n  },\n});\n\nexport default function GlobalThemeOverrideSx() {\n  return (\n    <ThemeProvider theme={finalTheme}>\n      <Chip\n        color=\"success\"\n        label={\n          <span>\n            <b>Status:</b> Completed\n          </span>\n        }\n        icon={<Check fontSize=\"small\" />}\n      />\n    </ThemeProvider>\n  );\n}\n",jsxPreview:'<ThemeProvider theme={finalTheme}>\n  <Chip\n    color="success"\n    label={\n      <span>\n        <b>Status:</b> Completed\n      </span>\n    }\n    icon={<Check fontSize="small" />}\n  />\n</ThemeProvider>',moduleTS:"./GlobalThemeOverrideSx.js",rawTS:"import * as React from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Chip from '@mui/material/Chip';\nimport Check from '@mui/icons-material/Check';\n\nconst finalTheme = createTheme({\n  components: {\n    MuiChip: {\n      styleOverrides: {\n        root: ({ theme }) =>\n          theme.unstable_sx({\n            // https://mui.com/system/getting-started/the-sx-prop/#spacing\n            px: 1,\n            py: 0.25,\n            // https://mui.com/system/borders/#border-radius\n            borderRadius: 1, // 4px as default.\n          }),\n        label: {\n          padding: 'initial',\n        },\n        icon: ({ theme }) =>\n          theme.unstable_sx({\n            mr: 0.5,\n            ml: '-2px',\n          }),\n      },\n    },\n  },\n});\n\nexport default function GlobalThemeOverrideSx() {\n  return (\n    <ThemeProvider theme={finalTheme}>\n      <Chip\n        color=\"success\"\n        label={\n          <span>\n            <b>Status:</b> Completed\n          </span>\n        }\n        icon={<Check fontSize=\"small\" />}\n      />\n    </ThemeProvider>\n  );\n}\n"},"GlobalThemeOverrideCallback.js":{module:"./GlobalThemeOverrideCallback.js",raw:"import * as React from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Slider, { sliderClasses } from '@mui/material/Slider';\n\nconst finalTheme = createTheme({\n  components: {\n    MuiSlider: {\n      styleOverrides: {\n        valueLabel: ({ ownerState, theme }) => ({\n          ...(ownerState.orientation === 'vertical' && {\n            backgroundColor: 'transparent',\n            color: theme.palette.grey[500],\n            fontWeight: 700,\n            padding: 0,\n            left: '3rem',\n          }),\n          [`&.${sliderClasses.valueLabelOpen}`]: {\n            transform: 'none',\n            top: 'initial',\n          },\n        }),\n      },\n    },\n  },\n});\n\nfunction valuetext(value) {\n  return `${value}\xb0C`;\n}\n\nexport default function GlobalThemeOverrideCallback() {\n  return (\n    <ThemeProvider theme={finalTheme}>\n      <Box sx={{ height: 180, display: 'inline-block' }}>\n        <Slider\n          getAriaLabel={() => 'Temperature'}\n          orientation=\"vertical\"\n          getAriaValueText={valuetext}\n          defaultValue={[25, 50]}\n          marks={[\n            { value: 0 },\n            { value: 25 },\n            { value: 50 },\n            { value: 75 },\n            { value: 100 },\n          ]}\n          valueLabelFormat={valuetext}\n          valueLabelDisplay=\"on\"\n        />\n      </Box>\n    </ThemeProvider>\n  );\n}\n",moduleTS:"./GlobalThemeOverrideCallback.js",rawTS:"import * as React from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Slider, { sliderClasses } from '@mui/material/Slider';\n\nconst finalTheme = createTheme({\n  components: {\n    MuiSlider: {\n      styleOverrides: {\n        valueLabel: ({ ownerState, theme }) => ({\n          ...(ownerState.orientation === 'vertical' && {\n            backgroundColor: 'transparent',\n            color: theme.palette.grey[500],\n            fontWeight: 700,\n            padding: 0,\n            left: '3rem',\n          }),\n          [`&.${sliderClasses.valueLabelOpen}`]: {\n            transform: 'none',\n            top: 'initial',\n          },\n        }),\n      },\n    },\n  },\n});\n\nfunction valuetext(value: number) {\n  return `${value}\xb0C`;\n}\n\nexport default function GlobalThemeOverrideCallback() {\n  return (\n    <ThemeProvider theme={finalTheme}>\n      <Box sx={{ height: 180, display: 'inline-block' }}>\n        <Slider\n          getAriaLabel={() => 'Temperature'}\n          orientation=\"vertical\"\n          getAriaValueText={valuetext}\n          defaultValue={[25, 50]}\n          marks={[\n            { value: 0 },\n            { value: 25 },\n            { value: 50 },\n            { value: 75 },\n            { value: 100 },\n          ]}\n          valueLabelFormat={valuetext}\n          valueLabelDisplay=\"on\"\n        />\n      </Box>\n    </ThemeProvider>\n  );\n}\n"},"GlobalThemeVariants.js":{module:"./GlobalThemeVariants.js",raw:"import * as React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nconst defaultTheme = createTheme();\n\nconst theme = createTheme({\n  components: {\n    MuiButton: {\n      variants: [\n        {\n          props: { variant: 'dashed' },\n          style: {\n            textTransform: 'none',\n            border: `2px dashed ${defaultTheme.palette.primary.main}`,\n            color: defaultTheme.palette.primary.main,\n          },\n        },\n        {\n          props: { variant: 'dashed', color: 'secondary' },\n          style: {\n            border: `2px dashed ${defaultTheme.palette.secondary.main}`,\n            color: defaultTheme.palette.secondary.main,\n          },\n        },\n        {\n          props: { variant: 'dashed', size: 'large' },\n          style: {\n            borderWidth: 4,\n          },\n        },\n        {\n          props: { variant: 'dashed', color: 'secondary', size: 'large' },\n          style: {\n            fontSize: 18,\n          },\n        },\n      ],\n    },\n  },\n});\n\nexport default function GlobalThemeVariants() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Button variant=\"dashed\" sx={{ m: 1 }}>\n        Dashed\n      </Button>\n      <Button variant=\"dashed\" color=\"secondary\" sx={{ m: 1 }}>\n        Secondary\n      </Button>\n      <Button variant=\"dashed\" size=\"large\" sx={{ m: 1 }}>\n        Large\n      </Button>\n      <Button variant=\"dashed\" color=\"secondary\" size=\"large\" sx={{ m: 1 }}>\n        Secondary large\n      </Button>\n    </ThemeProvider>\n  );\n}\n",jsxPreview:'<ThemeProvider theme={theme}>\n  <Button variant="dashed" sx={{ m: 1 }}>\n    Dashed\n  </Button>\n  <Button variant="dashed" color="secondary" sx={{ m: 1 }}>\n    Secondary\n  </Button>\n  <Button variant="dashed" size="large" sx={{ m: 1 }}>\n    Large\n  </Button>\n  <Button variant="dashed" color="secondary" size="large" sx={{ m: 1 }}>\n    Secondary large\n  </Button>\n</ThemeProvider>',moduleTS:"./GlobalThemeVariants.js",rawTS:"import * as React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\ndeclare module '@mui/material/Button' {\n  interface ButtonPropsVariantOverrides {\n    dashed: true;\n  }\n}\n\nconst defaultTheme = createTheme();\n\nconst theme = createTheme({\n  components: {\n    MuiButton: {\n      variants: [\n        {\n          props: { variant: 'dashed' },\n          style: {\n            textTransform: 'none',\n            border: `2px dashed ${defaultTheme.palette.primary.main}`,\n            color: defaultTheme.palette.primary.main,\n          },\n        },\n        {\n          props: { variant: 'dashed', color: 'secondary' },\n          style: {\n            border: `2px dashed ${defaultTheme.palette.secondary.main}`,\n            color: defaultTheme.palette.secondary.main,\n          },\n        },\n        {\n          props: { variant: 'dashed', size: 'large' },\n          style: {\n            borderWidth: 4,\n          },\n        },\n        {\n          props: { variant: 'dashed', color: 'secondary', size: 'large' },\n          style: {\n            fontSize: 18,\n          },\n        },\n      ],\n    },\n  },\n});\n\nexport default function GlobalThemeVariants() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Button variant=\"dashed\" sx={{ m: 1 }}>\n        Dashed\n      </Button>\n      <Button variant=\"dashed\" color=\"secondary\" sx={{ m: 1 }}>\n        Secondary\n      </Button>\n      <Button variant=\"dashed\" size=\"large\" sx={{ m: 1 }}>\n        Large\n      </Button>\n      <Button variant=\"dashed\" color=\"secondary\" size=\"large\" sx={{ m: 1 }}>\n        Secondary large\n      </Button>\n    </ThemeProvider>\n  );\n}\n"},"ThemeVariables.js":{module:"./ThemeVariables.js",raw:"import * as React from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nconst theme = createTheme({\n  typography: {\n    button: {\n      fontSize: '1rem',\n    },\n  },\n});\n\nexport default function ThemeVariables() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Button>font-size: 1rem</Button>\n    </ThemeProvider>\n  );\n}\n",jsxPreview:"<ThemeProvider theme={theme}>\n  <Button>font-size: 1rem</Button>\n</ThemeProvider>",moduleTS:"./ThemeVariables.js",rawTS:"import * as React from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nconst theme = createTheme({\n  typography: {\n    button: {\n      fontSize: '1rem',\n    },\n  },\n});\n\nexport default function ThemeVariables() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Button>font-size: 1rem</Button>\n    </ThemeProvider>\n  );\n}\n"}};G.scope={process:{},import:{react:l,"@mui/material/styles":d,"@mui/material/Button":m,"@mui/material/Chip":h,"@mui/icons-material/Check":k,"@mui/material/Box":v,"@mui/material/Slider":y}};var H={"./DefaultProps.js":function(){return t||(t=(0,T.jsx)(b.Z,{theme:C,children:(0,T.jsx)(x.Z,{children:"This button has disabled ripples."})}))},"./GlobalThemeOverride.js":function(){return s||(s=(0,T.jsx)(b.Z,{theme:w,children:(0,T.jsx)(x.Z,{children:"font-size: 1rem"})}))},"./GlobalThemeOverrideSx.js":function(){return o||(o=(0,T.jsx)(b.Z,{theme:B,children:(0,T.jsx)(S.Z,{color:"success",label:(0,T.jsxs)("span",{children:[(0,T.jsx)("b",{children:"Status:"})," Completed"]}),icon:(0,T.jsx)(f(),{fontSize:"small"})})}))},"./GlobalThemeOverrideCallback.js":function(){return(0,T.jsx)(b.Z,{theme:z,children:(0,T.jsx)(P.Z,{sx:{height:180,display:"inline-block"},children:(0,T.jsx)(j.ZP,{getAriaLabel:function(){return"Temperature"},orientation:"vertical",getAriaValueText:O,defaultValue:[25,50],marks:[{value:0},{value:25},{value:50},{value:75},{value:100}],valueLabelFormat:O,valueLabelDisplay:"on"})})})},"./GlobalThemeVariants.js":function(){return(0,T.jsxs)(b.Z,{theme:R,children:[(0,T.jsx)(x.Z,{variant:"dashed",sx:{m:1},children:"Dashed"}),(0,T.jsx)(x.Z,{variant:"dashed",color:"secondary",sx:{m:1},children:"Secondary"}),(0,T.jsx)(x.Z,{variant:"dashed",size:"large",sx:{m:1},children:"Large"}),(0,T.jsx)(x.Z,{variant:"dashed",color:"secondary",size:"large",sx:{m:1},children:"Secondary large"})]})},"./ThemeVariables.js":function(){return r||(r=(0,T.jsx)(b.Z,{theme:V,children:(0,T.jsx)(x.Z,{children:"font-size: 1rem"})}))}},A={};function E(){return(0,T.jsx)(u.Z,(0,i.Z)({},p))}},165492:function(n,e,a){"use strict";a.d(e,{Z:function(){return b}});var t,s=a(163804),o=a(667294),r=a(45697),p=a.n(r),i=a(811163),c=a(721923),l=a(875795),u=a(608144),d=a(772184),m=a(400438),h=a(692124),k=a(261589),f=a(703391),v=a(662208),y=a(785893);function g(n){var e=n.mode,a=(0,l.tv)().setMode;return o.useEffect(function(){a(e)},[e,a]),null}function b(n){var e=(0,c.Z)(),a=(0,i.useRouter)(),r=(0,d.ln)(a.asPath).canonicalAs,p=n.disableAd,b=void 0!==p&&p,x=n.disableToc,T=n.disableCssVarsProvider,C=n.demos,w=void 0===C?{}:C,S=n.docs,B=n.demoComponents,Z=n.srcComponents,P=S[(0,h.useUserLanguage)()]||S.en,M=r.startsWith("/joy-ui/")&&!(void 0!==T&&T),j=M?l.lL:o.Fragment,z=M?k.default:o.Fragment,O=(0,s.Z)({},M&&{mode:e.palette.mode});return(0,y.jsxs)(m.Z,{description:P.description,disableAd:b,disableToc:void 0!==x&&x,location:P.location,title:P.title,toc:P.toc,children:[b?null:t||(t=(0,y.jsx)(k.default,{children:(0,y.jsx)(v.Z,{children:(0,y.jsx)(f.ZP,{})})})),(0,y.jsxs)(j,{children:[M&&(0,y.jsx)(g,{mode:e.palette.mode}),P.rendered.map(function(n,a){return(0,y.jsx)(u.Z,{demoComponents:B,demos:w,disableAd:b,localizedDoc:P,renderedMarkdownOrDemo:n,srcComponents:Z,theme:e,WrapperComponent:z,wrapperProps:O},"demos-section-".concat(a))})]})]})}g.propTypes={mode:p().oneOf(["light","dark"])}},52774:function(n,e,a){"use strict";var t=a(526771),s=a(564836);t(e,"__esModule",{value:!0}),e.default=void 0;var o=s(a(391641)),r=a(785893),p=(0,o.default)((0,r.jsx)("path",{d:"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"}),"Check");e.default=p},490357:function(n,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/customization/theme-components",function(){return a(562437)}])}},function(n){n.O(0,[52996,8365,82961,61532,41159,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43765,95965,44749,67461,33335,98147,57046,49774,92888,40179],function(){return n(n.s=490357)}),_N_E=n.O()}]);