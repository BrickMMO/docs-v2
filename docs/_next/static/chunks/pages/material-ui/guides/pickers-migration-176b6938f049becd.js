(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[76880],{693313:function(n,a,s){"use strict";s.r(a),s.d(a,{default:function(){return d}});var e={};s.r(e),s.d(e,{demoComponents:function(){return i},demos:function(){return c},docs:function(){return p},srcComponents:function(){return l}});var t=s(163804);s(667294);var o=s(165492),p={en:{description:"<code>@material-ui/pickers</code> was moved to the <code>@mui/lab</code>.",location:"/brickmmo-docs-v2/data/material/guides/pickers-migration/pickers-migration.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<h1>Migration from @material-ui/pickers</h1><p class="description"><code>@material-ui/pickers</code> was moved to the <code>@mui/lab</code>.</p>\n\n<aside class="MuiCallout-root MuiCallout-success">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#success-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p><strong>Only use this migration guide if you need to use Date and Time pickers from <code>@mui/lab</code>.</strong></p>\n<p>The components are available in alpha version in the lab between <code>v5.0.0-alpha.30</code> and <code>v5.0.0-alpha.89</code> inclusively.\nThey won&#39;t receive any new feature of bug fixes and won&#39;t be compatible with future major releases of MUI packages.</p>\n<p>If you want to use the <strong>stable version</strong> of those components, please have a look at the new <a href="/x/react-date-pickers/getting-started/">MUI X packages</a> <code>@mui/x-date-pickers</code> and <code>@mui/x-date-pickers-pro</code>.</p>\n<p>To migrate from <code>@mui/lab</code> to <code>@mui/x-date-pickers</code> you can follow the dedicated <a href="/x/migration/migration-pickers-lab/">migration guide</a>.</p>\n\n</div></aside><aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p><strong>The date picker components were rewritten</strong>. In most places, the logic was rewritten from scratch, so it isn&#39;t possible to maintain the whole list of changes. Here&#39;s an overview of the most important concepts that were changed. If you are going to upgrade,\xa0the easiest way might be to go through each picker usage in your codebase, and rewrite them one at a time. Don&#39;t forget to run your tests after each!</p>\n\n</div></aside><p>This guide is an overview of the core concepts that were changed from pickers v3.2.10.</p>\n<h2 id="installation">Installation<a aria-labelledby="installation" class="anchor-link" href="#installation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="installation"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>You need to install the <code>@mui/lab</code> package if it&#39;s not already installed.\n⚠️ Make sure you have installed a version between <code>v5.0.0-alpha.30</code> and <code>v5.0.0-alpha.89</code> inclusively.</p>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The pickers are no longer available in <code>@mui/lab</code> starting <code>v5.0.0-alpha.90</code>.\nPlease refer to the information on top of the page to use the latest pickers components.</p>\n\n</div></aside><h2 id="imports">Imports<a aria-labelledby="imports" class="anchor-link" href="#imports" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="imports"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The <code>keyboard</code> version of pickers is no longer published. All versions of mobile and desktop pickers implement keyboard input for accessibility.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { KeyboardDatePicker } from \'@material-ui/pickers\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import DatePicker from \'@mui/lab/DatePicker\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">&lt;KeyboardDatePicker />\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">&lt;DatePicker /></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Also, instead of providing a <code>variant</code> prop, these were moved to different imports, meaning that your bundle won&#39;t include <code>Dialog</code> if you are using only the desktop picker.</p>\n<ul>\n<li><code>&lt;DesktopDatePicker /&gt;</code> –\xa0Only desktop view.</li>\n<li><code>&lt;MobileDatePicker /&gt;</code> –\xa0Only mobile view.</li>\n<li><code>&lt;DatePicker /&gt;</code> – Mobile or Desktop view according to the user <strong>pointer</strong> preference.</li>\n<li><code>&lt;StaticDatePicker /&gt;</code> – The picker view itself, without input or any other wrapper.</li>\n</ul>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { DatePicker } from \'@material-ui/pickers\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import DesktopDatePicker from \'@mui/lab/DesktopDatePicker\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">&lt;DatePicker variant="inline" />\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">&lt;DesktopDatePicker /></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The same convention applies to <code>TimePicker</code> – <code>&lt;DesktopTimePicker&gt;</code> and <code>&lt;MobileTimePicker /&gt;</code>.</p>\n<h2 id="muipickersutilsprovider">MuiPickersUtilsProvider<a aria-labelledby="muipickersutilsprovider" class="anchor-link" href="#muipickersutilsprovider" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="muipickersutilsprovider"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The <code>MuiPickersUtilsProvider</code> was removed in favor of <code>LocalizationProvider</code>. Also, pickers do not require you to install date-io adapters manually. Everything is included with the <code>lab</code>.</p>\n<p>❌ Before:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> AdapterDateFns <span class="token keyword">from</span> <span class="token string">\'@date-io/date-fns\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> MuiPickersUtilsProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/pickers\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>✅ After:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> AdapterDateFns <span class="token keyword">from</span> <span class="token string">\'@mui/lab/AdapterDateFns\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> LocalizationProvider <span class="token keyword">from</span> <span class="token string">\'@mui/lab/LocalizationProvider\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LocalizationProvider</span></span> <span class="token attr-name">dateAdapter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>AdapterDateFns<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token operator">...</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">LocalizationProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="render-input">Render input<a aria-labelledby="render-input" class="anchor-link" href="#render-input" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="render-input"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>We introduced a new <strong>required</strong> <code>renderInput</code> prop. This simplifies using non-Material UI text field input components.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DatePicker</span></span> <span class="token attr-name">renderInput</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TimePicker</span></span> <span class="token attr-name">renderInput</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Previously, props were spread on the <code>&lt;TextField /&gt;</code> component. From now on you will need to use the new <code>renderInput</code> prop to provide these:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">&lt;DatePicker\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  label="Date"\n</span><span class="token prefix deleted">-</span><span class="token line">  helperText="Something"\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  renderInput={props => &lt;TextField label="Date" helperText="Something" /> }\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="state-management">State management<a aria-labelledby="state-management" class="anchor-link" href="#state-management" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="state-management"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The state/value management logic for pickers was rewritten from scratch. Pickers will now call the <code>onChange</code> prop when each view of the date picker ends is completed. The <code>onError</code> handler is also completely different. Triple-check your pickers with forms integration, because form-integration issues can be subtle.</p>\n<h2 id="no-required-mask">No required mask<a aria-labelledby="no-required-mask" class="anchor-link" href="#no-required-mask" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="no-required-mask"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Mask is no longer required. Also, if your provided mask is not valid, pickers will just ignore the mask, and allow arbitrary input.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DatePicker</span></span>\n  <span class="token attr-name">mask</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mm<span class="token punctuation">"</span></span>\n  <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span>log<span class="token punctuation">}</span></span>\n  <span class="token attr-name">renderInput</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">helperText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>invalid mask<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DatePicker</span></span>\n  <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span>log<span class="token punctuation">}</span></span>\n  <span class="token attr-name">renderInput</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">helperText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>valid mask<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="and-many-more">And many more<a aria-labelledby="and-many-more" class="anchor-link" href="#and-many-more" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="and-many-more"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">&lt;DatePicker\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  format="DD-MM-YYYY"\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  inputFormat="DD-MM-YYYY"</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>There are many changes, be careful, make sure your tests, and build passes.\nIn the event you have an advanced usage of the date picker, it will likely be simpler to rewrite it.</p>\n<aside class="MuiCallout-root MuiCallout-success">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#success-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>In case you are considering your picker component rewrite, consider using the latest <a href="/x/react-date-pickers/getting-started/">MUI X packages</a>.</p>\n\n</div></aside><p>Please open a pull request to improve the guide if you notice an opportunity for doing such.</p>\n'],toc:[{text:"Installation",level:2,hash:"installation",children:[]},{text:"Imports",level:2,hash:"imports",children:[]},{text:"MuiPickersUtilsProvider",level:2,hash:"muipickersutilsprovider",children:[]},{text:"Render input",level:2,hash:"render-input",children:[]},{text:"State management",level:2,hash:"state-management",children:[]},{text:"No required mask",level:2,hash:"no-required-mask",children:[]},{text:"And many more",level:2,hash:"and-many-more",children:[]}],title:"Migration from @material-ui/pickers",headers:{components:[]}}},c={};c.scope={process:{},import:{}};var i={},l={},r=s(785893);function d(){return(0,r.jsx)(o.Z,(0,t.Z)({},e))}},165492:function(n,a,s){"use strict";s.d(a,{Z:function(){return b}});var e,t=s(163804),o=s(667294),p=s(45697),c=s.n(p),i=s(811163),l=s(721923),r=s(875795),d=s(608144),u=s(772184),k=s(400438),m=s(692124),g=s(261589),h=s(703391),v=s(662208),f=s(785893);function y(n){var a=n.mode,s=(0,r.tv)().setMode;return o.useEffect(function(){s(a)},[a,s]),null}function b(n){var a=(0,l.Z)(),s=(0,i.useRouter)(),p=(0,u.ln)(s.asPath).canonicalAs,c=n.disableAd,b=void 0!==c&&c,C=n.disableToc,w=n.disableCssVarsProvider,x=n.demos,M=void 0===x?{}:x,P=n.docs,D=n.demoComponents,T=n.srcComponents,I=P[(0,m.useUserLanguage)()]||P.en,A=p.startsWith("/joy-ui/")&&!(void 0!==w&&w),Z=A?r.lL:o.Fragment,j=A?g.default:o.Fragment,B=(0,t.Z)({},A&&{mode:a.palette.mode});return(0,f.jsxs)(k.Z,{description:I.description,disableAd:b,disableToc:void 0!==C&&C,location:I.location,title:I.title,toc:I.toc,children:[b?null:e||(e=(0,f.jsx)(g.default,{children:(0,f.jsx)(v.Z,{children:(0,f.jsx)(h.ZP,{})})})),(0,f.jsxs)(Z,{children:[A&&(0,f.jsx)(y,{mode:a.palette.mode}),I.rendered.map(function(n,s){return(0,f.jsx)(d.Z,{demoComponents:D,demos:M,disableAd:b,localizedDoc:I,renderedMarkdownOrDemo:n,srcComponents:T,theme:a,WrapperComponent:j,wrapperProps:B},"demos-section-".concat(s))})]})]})}y.propTypes={mode:c().oneOf(["light","dark"])}},194106:function(n,a,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/guides/pickers-migration",function(){return s(693313)}])}},function(n){n.O(0,[52996,8365,82961,61532,41159,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43765,95965,44749,67461,33335,49774,92888,40179],function(){return n(n.s=194106)}),_N_E=n.O()}]);