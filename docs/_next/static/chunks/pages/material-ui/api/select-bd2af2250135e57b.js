(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[71308],{854451:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return c}}),o(667294);var n=o(543285),i=o(59626),d=JSON.parse('{"props":{"autoWidth":{"type":{"name":"bool"},"default":"false"},"children":{"type":{"name":"node"}},"classes":{"type":{"name":"object"},"default":"{}","additionalInfo":{"cssApi":true}},"defaultOpen":{"type":{"name":"bool"},"default":"false"},"defaultValue":{"type":{"name":"any"}},"displayEmpty":{"type":{"name":"bool"},"default":"false"},"IconComponent":{"type":{"name":"elementType"},"default":"ArrowDropDownIcon"},"id":{"type":{"name":"string"}},"input":{"type":{"name":"element"}},"inputProps":{"type":{"name":"object"}},"label":{"type":{"name":"node"}},"labelId":{"type":{"name":"string"}},"MenuProps":{"type":{"name":"object"}},"multiple":{"type":{"name":"bool"},"default":"false"},"native":{"type":{"name":"bool"},"default":"false"},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: SelectChangeEvent<Value>, child?: object) => void","describedArgs":["event","child"]}},"onClose":{"type":{"name":"func"},"signature":{"type":"function(event: object) => void","describedArgs":["event"]}},"onOpen":{"type":{"name":"func"},"signature":{"type":"function(event: object) => void","describedArgs":["event"]}},"open":{"type":{"name":"bool"}},"renderValue":{"type":{"name":"func"},"signature":{"type":"function(value: any) => ReactNode","describedArgs":["value"]}},"SelectDisplayProps":{"type":{"name":"object"}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"value":{"type":{"name":"union","description":"\'\'<br>&#124;&nbsp;any"}},"variant":{"type":{"name":"enum","description":"\'filled\'<br>&#124;&nbsp;\'outlined\'<br>&#124;&nbsp;\'standard\'"},"default":"\'outlined\'"}},"name":"Select","imports":["import Select from \'@mui/material/Select\';","import { Select } from \'@mui/material\';"],"styles":{"classes":["root","select","multiple","filled","outlined","standard","disabled","icon","iconOpen","iconFilled","iconOutlined","iconStandard","nativeInput","error"],"globalClasses":{"disabled":"Mui-disabled","error":"Mui-error"},"name":"MuiSelect"},"spread":true,"themeDefaultProps":true,"muiName":"MuiSelect","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-material/src/Select/Select.js","inheritance":{"component":"OutlinedInput","pathname":"/material-ui/api/outlined-input/"},"demos":"<ul><li><a href=\\"/material-ui/react-select/\\">Select</a></li></ul>","cssComponent":false}'),a=o(785893);function c(e){var t=e.descriptions,o=e.pageContent;return(0,a.jsx)(n.Z,{descriptions:t,pageContent:o})}c.getInitialProps=function(){var e=o(207569);return{descriptions:(0,i.Z)(e),pageContent:d}}},365218:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/select",function(){return o(854451)}])},207569:function(e,t,o){var n={"./select.json":425359,"translations/api-docs/select/select.json":425359};function i(e){return o(d(e))}function d(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=d,e.exports=i,i.id=207569},425359:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"autoWidth":{"description":"If <code>true</code>, the width of the popover will automatically be set according to the items inside the menu, otherwise it will be at least the width of the select input."},"children":{"description":"The option elements to populate the select with. Can be some <code>MenuItem</code> when <code>native</code> is false and <code>option</code> when <code>native</code> is true.<br>⚠️The <code>MenuItem</code> elements <strong>must</strong> be direct descendants when <code>native</code> is false."},"classes":{"description":"Override or extend the styles applied to the component."},"defaultOpen":{"description":"If <code>true</code>, the component is initially open. Use when the component open state is not controlled (i.e. the <code>open</code> prop is not defined). You can only use it when the <code>native</code> prop is <code>false</code> (default)."},"defaultValue":{"description":"The default value. Use when the component is not controlled."},"displayEmpty":{"description":"If <code>true</code>, a value is displayed even if no items are selected.<br>In order to display a meaningful value, a function can be passed to the <code>renderValue</code> prop which returns the value to be displayed when no items are selected.<br>⚠️ When using this prop, make sure the label doesn&#39;t overlap with the empty displayed value. The label should either be hidden or forced to a shrunk state."},"IconComponent":{"description":"The icon that displays the arrow."},"id":{"description":"The <code>id</code> of the wrapper element or the <code>select</code> element when <code>native</code>."},"input":{"description":"An <code>Input</code> element; does not have to be a material-ui specific <code>Input</code>."},"inputProps":{"description":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\\">Attributes</a> applied to the <code>input</code> element. When <code>native</code> is <code>true</code>, the attributes are applied on the <code>select</code> element."},"label":{"description":"See <a href=\\"/material-ui/api/outlined-input/#props\\">OutlinedInput#label</a>"},"labelId":{"description":"The ID of an element that acts as an additional label. The Select will be labelled by the additional label and the selected value."},"MenuProps":{"description":"Props applied to the <a href=\\"/material-ui/api/menu/\\"><code>Menu</code></a> element."},"multiple":{"description":"If <code>true</code>, <code>value</code> must be an array and the menu will support multiple selections."},"native":{"description":"If <code>true</code>, the component uses a native <code>select</code> element."},"onChange":{"description":"Callback fired when a menu item is selected.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (any). <strong>Warning</strong>: This is a generic event, not a change event, unless the change event is caused by browser autofill.","child":"The react element that was selected when <code>native</code> is <code>false</code> (default)."}},"onClose":{"description":"Callback fired when the component requests to be closed. Use it in either controlled (see the <code>open</code> prop), or uncontrolled mode (to detect when the Select collapses).","typeDescriptions":{"event":"The event source of the callback."}},"onOpen":{"description":"Callback fired when the component requests to be opened. Use it in either controlled (see the <code>open</code> prop), or uncontrolled mode (to detect when the Select expands).","typeDescriptions":{"event":"The event source of the callback."}},"open":{"description":"If <code>true</code>, the component is shown. You can only use it when the <code>native</code> prop is <code>false</code> (default)."},"renderValue":{"description":"Render the selected value. You can only use it when the <code>native</code> prop is <code>false</code> (default).","typeDescriptions":{"value":"The <code>value</code> provided to the component."}},"SelectDisplayProps":{"description":"Props applied to the clickable div element."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"value":{"description":"The <code>input</code> value. Providing an empty string will select no options. Set to an empty string <code>&#39;&#39;</code> if you don&#39;t want any of the available options to be selected.<br>If the value is an object it must have reference equality with the option in order to be selected. If the value is not an object, the string representation must match with the string representation of the option in order to be selected."},"variant":{"description":"The variant to use."}},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"select":{"description":"Styles applied to {{nodeName}}.","nodeName":"the select component <code>select</code> class"},"multiple":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the select component","conditions":"<code>multiple={true}</code>"},"filled":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the select component","conditions":"<code>variant=\\"filled\\"</code>"},"outlined":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the select component","conditions":"<code>variant=\\"outlined\\"</code>"},"standard":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the select component","conditions":"<code>variant=\\"standard\\"</code>"},"disabled":{"description":"State class applied to {{nodeName}}.","nodeName":"the select component <code>disabled</code> class"},"icon":{"description":"Styles applied to {{nodeName}}.","nodeName":"the icon component"},"iconOpen":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the icon component","conditions":"the popup is open"},"iconFilled":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the icon component","conditions":"<code>variant=\\"filled\\"</code>"},"iconOutlined":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the icon component","conditions":"<code>variant=\\"outlined\\"</code>"},"iconStandard":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the icon component","conditions":"<code>variant=\\"standard\\"</code>"},"nativeInput":{"description":"Styles applied to {{nodeName}}.","nodeName":"the underlying native input component"},"error":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>error={true}</code>"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=365218)}),_N_E=e.O()}]);