(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[39752],{813096:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return s}}),o(667294);var a=o(543285),n=o(59626),r=JSON.parse('{"props":{"action":{"type":{"name":"node"}},"avatar":{"type":{"name":"node"}},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"component":{"type":{"name":"elementType"}},"disableTypography":{"type":{"name":"bool"},"default":"false"},"subheader":{"type":{"name":"node"}},"subheaderTypographyProps":{"type":{"name":"object"}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"title":{"type":{"name":"node"}},"titleTypographyProps":{"type":{"name":"object"}}},"name":"CardHeader","imports":["import CardHeader from \'@mui/material/CardHeader\';","import { CardHeader } from \'@mui/material\';"],"styles":{"classes":["root","avatar","action","content","title","subheader"],"globalClasses":{},"name":"MuiCardHeader"},"spread":true,"themeDefaultProps":true,"muiName":"MuiCardHeader","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-material/src/CardHeader/CardHeader.js","inheritance":null,"demos":"<ul><li><a href=\\"/material-ui/react-card/\\">Card</a></li></ul>","cssComponent":false}'),i=o(785893);function s(e){var t=e.descriptions,o=e.pageContent;return(0,i.jsx)(a.Z,{descriptions:t,pageContent:o})}s.getInitialProps=function(){var e=o(918770);return{descriptions:(0,n.Z)(e),pageContent:r}}},97172:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/card-header",function(){return o(813096)}])},918770:function(e,t,o){var a={"./card-header.json":329862,"translations/api-docs/card-header/card-header.json":329862};function n(e){return o(r(e))}function r(e){if(!o.o(a,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}n.keys=function(){return Object.keys(a)},n.resolve=r,e.exports=n,n.id=918770},329862:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"action":{"description":"The action to display in the card header."},"avatar":{"description":"The Avatar element to display."},"classes":{"description":"Override or extend the styles applied to the component."},"component":{"description":"The component used for the root node. Either a string to use a HTML element or a component."},"disableTypography":{"description":"If <code>true</code>, <code>subheader</code> and <code>title</code> won&#39;t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the <code>title</code> text, and optional <code>subheader</code> text with the Typography component."},"subheader":{"description":"The content of the component."},"subheaderTypographyProps":{"description":"These props will be forwarded to the subheader (as long as disableTypography is not <code>true</code>)."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"title":{"description":"The content of the component."},"titleTypographyProps":{"description":"These props will be forwarded to the title (as long as disableTypography is not <code>true</code>)."}},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"avatar":{"description":"Styles applied to {{nodeName}}.","nodeName":"the avatar element"},"action":{"description":"Styles applied to {{nodeName}}.","nodeName":"the action element"},"content":{"description":"Styles applied to {{nodeName}}.","nodeName":"the content wrapper element"},"title":{"description":"Styles applied to {{nodeName}}.","nodeName":"the title Typography element"},"subheader":{"description":"Styles applied to {{nodeName}}.","nodeName":"the subheader Typography element"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=97172)}),_N_E=e.O()}]);