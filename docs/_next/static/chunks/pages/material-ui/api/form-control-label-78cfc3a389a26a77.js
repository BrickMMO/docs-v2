(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[73719],{865459:function(e,o,t){"use strict";t.r(o),t.d(o,{default:function(){return s}}),t(667294);var n=t(543285),i=t(59626),a=JSON.parse('{"props":{"control":{"type":{"name":"element"},"required":true},"checked":{"type":{"name":"bool"}},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"componentsProps":{"type":{"name":"shape","description":"{ typography?: object }"},"default":"{}"},"disabled":{"type":{"name":"bool"}},"disableTypography":{"type":{"name":"bool"}},"inputRef":{"type":{"name":"custom","description":"ref"}},"label":{"type":{"name":"node"}},"labelPlacement":{"type":{"name":"enum","description":"\'bottom\'<br>&#124;&nbsp;\'end\'<br>&#124;&nbsp;\'start\'<br>&#124;&nbsp;\'top\'"},"default":"\'end\'"},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent) => void","describedArgs":["event"]}},"required":{"type":{"name":"bool"}},"slotProps":{"type":{"name":"shape","description":"{ typography?: object }"},"default":"{}"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"value":{"type":{"name":"any"}}},"name":"FormControlLabel","imports":["import FormControlLabel from \'@mui/material/FormControlLabel\';","import { FormControlLabel } from \'@mui/material\';"],"styles":{"classes":["root","labelPlacementStart","labelPlacementTop","labelPlacementBottom","disabled","label","error","required","asterisk"],"globalClasses":{"disabled":"Mui-disabled","error":"Mui-error","required":"Mui-required"},"name":"MuiFormControlLabel"},"spread":true,"themeDefaultProps":true,"muiName":"MuiFormControlLabel","forwardsRefTo":"HTMLLabelElement","filename":"/packages/mui-material/src/FormControlLabel/FormControlLabel.js","inheritance":null,"demos":"<ul><li><a href=\\"/material-ui/react-checkbox/\\">Checkbox</a></li>\\n<li><a href=\\"/material-ui/react-radio-button/\\">Radio Group</a></li>\\n<li><a href=\\"/material-ui/react-switch/\\">Switch</a></li></ul>","cssComponent":false}'),r=t(785893);function s(e){var o=e.descriptions,t=e.pageContent;return(0,r.jsx)(n.Z,{descriptions:o,pageContent:t})}s.getInitialProps=function(){var e=t(472953);return{descriptions:(0,i.Z)(e),pageContent:a}}},38087:function(e,o,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/form-control-label",function(){return t(865459)}])},472953:function(e,o,t){var n={"./form-control-label.json":913684,"translations/api-docs/form-control-label/form-control-label.json":913684};function i(e){return t(a(e))}function a(e){if(!t.o(n,e)){var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=a,e.exports=i,i.id=472953},913684:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\\nUse this component if you want to display an extra label.","propDescriptions":{"checked":{"description":"If <code>true</code>, the component appears selected."},"classes":{"description":"Override or extend the styles applied to the component."},"componentsProps":{"description":"The props used for each slot inside."},"control":{"description":"A control element. For instance, it can be a <code>Radio</code>, a <code>Switch</code> or a <code>Checkbox</code>."},"disabled":{"description":"If <code>true</code>, the control is disabled."},"disableTypography":{"description":"If <code>true</code>, the label is rendered as it is passed without an additional typography node."},"inputRef":{"description":"Pass a ref to the <code>input</code> element."},"label":{"description":"A text or an element to be used in an enclosing label element."},"labelPlacement":{"description":"The position of the label."},"onChange":{"description":"Callback fired when the state is changed.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean)."}},"required":{"description":"If <code>true</code>, the label will indicate that the <code>input</code> is required."},"slotProps":{"description":"The props used for each slot inside."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"value":{"description":"The value of the component."}},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"labelPlacementStart":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>labelPlacement=\\"start\\"</code>"},"labelPlacementTop":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>labelPlacement=\\"top\\"</code>"},"labelPlacementBottom":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>labelPlacement=\\"bottom\\"</code>"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code>"},"label":{"description":"Styles applied to {{nodeName}}.","nodeName":"the label&#39;s Typography component"},"error":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>error={true}</code>"},"required":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>required={true}</code>"},"asterisk":{"description":"Styles applied to {{nodeName}}.","nodeName":"the asterisk element"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=38087)}),_N_E=e.O()}]);