(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9605],{987343:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return s}}),o(667294);var n=o(543285),i=o(59626),r=JSON.parse('{"props":{"alt":{"type":{"name":"string"}},"children":{"type":{"name":"node"}},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"component":{"type":{"name":"elementType"}},"imgProps":{"type":{"name":"object"}},"sizes":{"type":{"name":"string"}},"src":{"type":{"name":"string"}},"srcSet":{"type":{"name":"string"}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"variant":{"type":{"name":"union","description":"\'circular\'<br>&#124;&nbsp;\'rounded\'<br>&#124;&nbsp;\'square\'<br>&#124;&nbsp;string"},"default":"\'circular\'"}},"name":"Avatar","imports":["import Avatar from \'@mui/material/Avatar\';","import { Avatar } from \'@mui/material\';"],"styles":{"classes":["root","colorDefault","circular","rounded","square","img","fallback"],"globalClasses":{},"name":"MuiAvatar"},"spread":true,"themeDefaultProps":true,"muiName":"MuiAvatar","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-material/src/Avatar/Avatar.js","inheritance":null,"demos":"<ul><li><a href=\\"/material-ui/react-avatar/\\">Avatar</a></li></ul>","cssComponent":false}'),a=o(785893);function s(e){var t=e.descriptions,o=e.pageContent;return(0,a.jsx)(n.Z,{descriptions:t,pageContent:o})}s.getInitialProps=function(){var e=o(427727);return{descriptions:(0,i.Z)(e),pageContent:r}}},622301:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/avatar",function(){return o(987343)}])},427727:function(e,t,o){var n={"./avatar.json":692631,"translations/api-docs/avatar/avatar.json":692631};function i(e){return o(r(e))}function r(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=r,e.exports=i,i.id=427727},692631:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"alt":{"description":"Used in combination with <code>src</code> or <code>srcSet</code> to provide an alt attribute for the rendered <code>img</code> element."},"children":{"description":"Used to render icon or text elements inside the Avatar if <code>src</code> is not set. This can be an element, or just a string."},"classes":{"description":"Override or extend the styles applied to the component."},"component":{"description":"The component used for the root node. Either a string to use a HTML element or a component."},"imgProps":{"description":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes\\">Attributes</a> applied to the <code>img</code> element if the component is used to display an image. It can be used to listen for the loading error event."},"sizes":{"description":"The <code>sizes</code> attribute for the <code>img</code> element."},"src":{"description":"The <code>src</code> attribute for the <code>img</code> element."},"srcSet":{"description":"The <code>srcSet</code> attribute for the <code>img</code> element. Use this attribute for responsive image display."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"variant":{"description":"The shape of the avatar."}},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"colorDefault":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"not <code>src</code> or <code>srcSet</code>"},"circular":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"circular\\"</code>"},"rounded":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"rounded\\"</code>"},"square":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"square\\"</code>"},"img":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the img element","conditions":"either <code>src</code> or <code>srcSet</code> is defined"},"fallback":{"description":"Styles applied to the fallback icon"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=622301)}),_N_E=e.O()}]);