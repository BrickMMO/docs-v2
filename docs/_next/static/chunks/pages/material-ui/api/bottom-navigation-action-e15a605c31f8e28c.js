(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3073],{187433:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return r}}),o(667294);var n=o(543285),i=o(59626),a=JSON.parse('{"props":{"children":{"type":{"name":"custom","description":"unsupportedProp"}},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"icon":{"type":{"name":"node"}},"label":{"type":{"name":"node"}},"showLabel":{"type":{"name":"bool"}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"value":{"type":{"name":"any"}}},"name":"BottomNavigationAction","imports":["import BottomNavigationAction from \'@mui/material/BottomNavigationAction\';","import { BottomNavigationAction } from \'@mui/material\';"],"styles":{"classes":["root","selected","iconOnly","label"],"globalClasses":{"selected":"Mui-selected"},"name":"MuiBottomNavigationAction"},"spread":true,"themeDefaultProps":true,"muiName":"MuiBottomNavigationAction","forwardsRefTo":"HTMLButtonElement","filename":"/packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.js","inheritance":{"component":"ButtonBase","pathname":"/material-ui/api/button-base/"},"demos":"<ul><li><a href=\\"/material-ui/react-bottom-navigation/\\">Bottom Navigation</a></li></ul>","cssComponent":false}'),s=o(785893);function r(e){var t=e.descriptions,o=e.pageContent;return(0,s.jsx)(n.Z,{descriptions:t,pageContent:o})}r.getInitialProps=function(){var e=o(499665);return{descriptions:(0,i.Z)(e),pageContent:a}}},669613:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/bottom-navigation-action",function(){return o(187433)}])},499665:function(e,t,o){var n={"./bottom-navigation-action.json":913716,"translations/api-docs/bottom-navigation-action/bottom-navigation-action.json":913716};function i(e){return o(a(e))}function a(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=a,e.exports=i,i.id=499665},913716:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"children":{"description":"This prop isn&#39;t supported. Use the <code>component</code> prop if you need to change the children structure."},"classes":{"description":"Override or extend the styles applied to the component."},"icon":{"description":"The icon to display."},"label":{"description":"The label element."},"showLabel":{"description":"If <code>true</code>, the <code>BottomNavigationAction</code> will show its label. By default, only the selected <code>BottomNavigationAction</code> inside <code>BottomNavigation</code> will show its label.<br>The prop defaults to the value (<code>false</code>) inherited from the parent BottomNavigation component."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"value":{"description":"You can provide your own value. Otherwise, we fallback to the child position index."}},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"selected":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"selected"},"iconOnly":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>showLabel={false}</code> and not selected"},"label":{"description":"Styles applied to {{nodeName}}.","nodeName":"the label&#39;s span element"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=669613)}),_N_E=e.O()}]);