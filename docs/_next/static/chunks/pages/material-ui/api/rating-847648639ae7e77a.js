(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[82263],{690319:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return d}}),t(667294);var i=t(543285),o=t(59626),a=JSON.parse('{"props":{"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"defaultValue":{"type":{"name":"number"},"default":"null"},"disabled":{"type":{"name":"bool"},"default":"false"},"emptyIcon":{"type":{"name":"node"},"default":"<StarBorder fontSize=\\"inherit\\" />"},"emptyLabelText":{"type":{"name":"node"},"default":"\'Empty\'"},"getLabelText":{"type":{"name":"func"},"default":"function defaultLabelText(value) {\\n  return `${value} Star${value !== 1 ? \'s\' : \'\'}`;\\n}","signature":{"type":"function(value: number) => string","describedArgs":["value"]}},"highlightSelectedOnly":{"type":{"name":"bool"},"default":"false"},"icon":{"type":{"name":"node"},"default":"<Star fontSize=\\"inherit\\" />"},"IconContainerComponent":{"type":{"name":"elementType"},"default":"function IconContainer(props) {\\n  const { value, ...other } = props;\\n  return <span {...other} />;\\n}"},"max":{"type":{"name":"number"},"default":"5"},"name":{"type":{"name":"string"}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, value: number | null) => void","describedArgs":["event","value"]}},"onChangeActive":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, value: number) => void","describedArgs":["event","value"]}},"precision":{"type":{"name":"custom","description":"number"},"default":"1"},"readOnly":{"type":{"name":"bool"},"default":"false"},"size":{"type":{"name":"union","description":"\'small\'<br>&#124;&nbsp;\'medium\'<br>&#124;&nbsp;\'large\'<br>&#124;&nbsp;string"},"default":"\'medium\'"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"value":{"type":{"name":"number"}}},"name":"Rating","imports":["import Rating from \'@mui/material/Rating\';","import { Rating } from \'@mui/material\';"],"styles":{"classes":["root","sizeSmall","sizeMedium","sizeLarge","readOnly","disabled","focusVisible","visuallyHidden","label","labelEmptyValueActive","icon","iconEmpty","iconFilled","iconHover","iconFocus","iconActive","decimal"],"globalClasses":{"readOnly":"Mui-readOnly","disabled":"Mui-disabled","focusVisible":"Mui-focusVisible"},"name":"MuiRating"},"spread":true,"themeDefaultProps":true,"muiName":"MuiRating","forwardsRefTo":"HTMLSpanElement","filename":"/packages/mui-material/src/Rating/Rating.js","inheritance":null,"demos":"<ul><li><a href=\\"/material-ui/react-rating/\\">Rating</a></li></ul>","cssComponent":false}'),s=t(785893);function d(e){var n=e.descriptions,t=e.pageContent;return(0,s.jsx)(i.Z,{descriptions:n,pageContent:t})}d.getInitialProps=function(){var e=t(916192);return{descriptions:(0,o.Z)(e),pageContent:a}}},224049:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/rating",function(){return t(690319)}])},916192:function(e,n,t){var i={"./rating.json":28076,"translations/api-docs/rating/rating.json":28076};function o(e){return t(a(e))}function a(e){if(!t.o(i,e)){var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return i[e]}o.keys=function(){return Object.keys(i)},o.resolve=a,e.exports=o,o.id=916192},28076:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"classes":{"description":"Override or extend the styles applied to the component."},"defaultValue":{"description":"The default value. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"emptyIcon":{"description":"The icon to display when empty."},"emptyLabelText":{"description":"The label read when the rating input is empty."},"getLabelText":{"description":"Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating. This is important for screen reader users.<br>For localization purposes, you can use the provided <a href=\\"/material-ui/guides/localization/\\">translations</a>.","typeDescriptions":{"value":"The rating label&#39;s value to format."}},"highlightSelectedOnly":{"description":"If <code>true</code>, only the selected icon will be highlighted."},"icon":{"description":"The icon to display."},"IconContainerComponent":{"description":"The component containing the icon."},"max":{"description":"Maximum rating."},"name":{"description":"The name attribute of the radio <code>input</code> elements. This input <code>name</code> should be unique within the page. Being unique within a form is insufficient since the <code>name</code> is used to generated IDs."},"onChange":{"description":"Callback fired when the value changes.","typeDescriptions":{"event":"The event source of the callback.","value":"The new value."}},"onChangeActive":{"description":"Callback function that is fired when the hover state changes.","typeDescriptions":{"event":"The event source of the callback.","value":"The new value."}},"precision":{"description":"The minimum increment value change allowed."},"readOnly":{"description":"Removes all hover effects and pointer events."},"size":{"description":"The size of the component."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"value":{"description":"The rating value."}},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"sizeSmall":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"small\\"</code>"},"sizeMedium":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"medium\\"</code>"},"sizeLarge":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"large\\"</code>"},"readOnly":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>readOnly={true}</code>"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code>"},"focusVisible":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"keyboard focused"},"visuallyHidden":{"description":"Visually hide an element."},"label":{"description":"Styles applied to {{nodeName}}.","nodeName":"the label elements"},"labelEmptyValueActive":{"description":"Styles applied to {{nodeName}} when {{conditions}}.","nodeName":"the label of the &quot;no value&quot; input","conditions":"it is active"},"icon":{"description":"Styles applied to {{nodeName}}.","nodeName":"the icon wrapping elements"},"iconEmpty":{"description":"Styles applied to {{nodeName}} when {{conditions}}.","nodeName":"the icon wrapping elements","conditions":"empty"},"iconFilled":{"description":"Styles applied to {{nodeName}} when {{conditions}}.","nodeName":"the icon wrapping elements","conditions":"filled"},"iconHover":{"description":"Styles applied to {{nodeName}} when {{conditions}}.","nodeName":"the icon wrapping elements","conditions":"hover"},"iconFocus":{"description":"Styles applied to {{nodeName}} when {{conditions}}.","nodeName":"the icon wrapping elements","conditions":"focus"},"iconActive":{"description":"Styles applied to {{nodeName}} when {{conditions}}.","nodeName":"the icon wrapping elements","conditions":"active"},"decimal":{"description":"Styles applied to {{nodeName}} when {{conditions}}.","nodeName":"the icon wrapping elements","conditions":"decimals are necessary"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=224049)}),_N_E=e.O()}]);