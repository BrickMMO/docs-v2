(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[35383],{240338:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return a}}),o(667294);var i=o(543285),s=o(59626),n=JSON.parse('{"props":{"alignItems":{"type":{"name":"enum","description":"\'center\'<br>&#124;&nbsp;\'flex-start\'"},"default":"\'center\'"},"autoFocus":{"type":{"name":"bool"},"default":"false"},"children":{"type":{"name":"node"}},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"component":{"type":{"name":"elementType"}},"dense":{"type":{"name":"bool"},"default":"false"},"disabled":{"type":{"name":"bool"},"default":"false"},"disableGutters":{"type":{"name":"bool"},"default":"false"},"divider":{"type":{"name":"bool"},"default":"false"},"focusVisibleClassName":{"type":{"name":"string"}},"selected":{"type":{"name":"bool"},"default":"false"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}}},"name":"ListItemButton","imports":["import ListItemButton from \'@mui/material/ListItemButton\';","import { ListItemButton } from \'@mui/material\';"],"styles":{"classes":["root","focusVisible","dense","alignItemsFlexStart","disabled","divider","gutters","selected"],"globalClasses":{"focusVisible":"Mui-focusVisible","disabled":"Mui-disabled","selected":"Mui-selected"},"name":"MuiListItemButton"},"spread":true,"themeDefaultProps":true,"muiName":"MuiListItemButton","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-material/src/ListItemButton/ListItemButton.js","inheritance":{"component":"ButtonBase","pathname":"/material-ui/api/button-base/"},"demos":"<ul><li><a href=\\"/material-ui/react-list/\\">Lists</a></li></ul>","cssComponent":false}'),d=o(785893);function a(e){var t=e.descriptions,o=e.pageContent;return(0,d.jsx)(i.Z,{descriptions:t,pageContent:o})}a.getInitialProps=function(){var e=o(331017);return{descriptions:(0,s.Z)(e),pageContent:n}}},273552:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/list-item-button",function(){return o(240338)}])},331017:function(e,t,o){var i={"./list-item-button.json":744556,"translations/api-docs/list-item-button/list-item-button.json":744556};function s(e){return o(n(e))}function n(e){if(!o.o(i,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}s.keys=function(){return Object.keys(i)},s.resolve=n,e.exports=s,s.id=331017},744556:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"alignItems":{"description":"Defines the <code>align-items</code> style property."},"autoFocus":{"description":"If <code>true</code>, the list item is focused during the first mount. Focus will also be triggered if the value changes from false to true."},"children":{"description":"The content of the component if a <code>ListItemSecondaryAction</code> is used it must be the last child."},"classes":{"description":"Override or extend the styles applied to the component."},"component":{"description":"The component used for the root node. Either a string to use a HTML element or a component."},"dense":{"description":"If <code>true</code>, compact vertical padding designed for keyboard and mouse input is used. The prop defaults to the value inherited from the parent List component."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disableGutters":{"description":"If <code>true</code>, the left and right padding is removed."},"divider":{"description":"If <code>true</code>, a 1px light border is added to the bottom of the list item."},"focusVisibleClassName":{"description":"This prop can help identify which element has keyboard focus. The class name will be applied when the element gains the focus through keyboard interaction. It&#39;s a polyfill for the <a href=\\"https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo\\">CSS :focus-visible selector</a>. The rationale for using this feature <a href=\\"https://github.com/WICG/focus-visible/blob/HEAD/explainer.md\\">is explained here</a>. A <a href=\\"https://github.com/WICG/focus-visible\\">polyfill can be used</a> to apply a <code>focus-visible</code> class to other components if needed."},"selected":{"description":"Use to apply selected styling."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."}},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"focusVisible":{"description":"State class applied to {{nodeName}}.","nodeName":"the <code>component</code>&#39;s <code>focusVisibleClassName</code> prop"},"dense":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the component element","conditions":"dense"},"alignItemsFlexStart":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the component element","conditions":"<code>alignItems=\\"flex-start\\"</code>"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the inner <code>component</code> element","conditions":"<code>disabled={true}</code>"},"divider":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the inner <code>component</code> element","conditions":"<code>divider={true}</code>"},"gutters":{"description":"Styles applied to {{nodeName}} unless {{conditions}}.","nodeName":"the inner <code>component</code> element","conditions":"<code>disableGutters={true}</code>"},"selected":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>selected={true}</code>"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=273552)}),_N_E=e.O()}]);