(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[41950],{246603:function(e,o,t){"use strict";t.r(o),t.d(o,{default:function(){return s}}),t(667294);var n=t(543285),i=t(59626),p=JSON.parse('{"props":{"children":{"type":{"name":"custom","description":"element"},"required":true},"arrow":{"type":{"name":"bool"},"default":"false"},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"components":{"type":{"name":"shape","description":"{ Arrow?: elementType, Popper?: elementType, Tooltip?: elementType, Transition?: elementType }"},"default":"{}"},"componentsProps":{"type":{"name":"shape","description":"{ arrow?: object, popper?: object, tooltip?: object, transition?: object }"},"default":"{}"},"describeChild":{"type":{"name":"bool"},"default":"false"},"disableFocusListener":{"type":{"name":"bool"},"default":"false"},"disableHoverListener":{"type":{"name":"bool"},"default":"false"},"disableInteractive":{"type":{"name":"bool"},"default":"false"},"disableTouchListener":{"type":{"name":"bool"},"default":"false"},"enterDelay":{"type":{"name":"number"},"default":"100"},"enterNextDelay":{"type":{"name":"number"},"default":"0"},"enterTouchDelay":{"type":{"name":"number"},"default":"700"},"followCursor":{"type":{"name":"bool"},"default":"false"},"id":{"type":{"name":"string"}},"leaveDelay":{"type":{"name":"number"},"default":"0"},"leaveTouchDelay":{"type":{"name":"number"},"default":"1500"},"onClose":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent) => void","describedArgs":["event"]}},"onOpen":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent) => void","describedArgs":["event"]}},"open":{"type":{"name":"bool"}},"placement":{"type":{"name":"enum","description":"\'bottom-end\'<br>&#124;&nbsp;\'bottom-start\'<br>&#124;&nbsp;\'bottom\'<br>&#124;&nbsp;\'left-end\'<br>&#124;&nbsp;\'left-start\'<br>&#124;&nbsp;\'left\'<br>&#124;&nbsp;\'right-end\'<br>&#124;&nbsp;\'right-start\'<br>&#124;&nbsp;\'right\'<br>&#124;&nbsp;\'top-end\'<br>&#124;&nbsp;\'top-start\'<br>&#124;&nbsp;\'top\'"},"default":"\'bottom\'"},"PopperComponent":{"type":{"name":"elementType"},"default":"Popper"},"PopperProps":{"type":{"name":"object"},"default":"{}"},"slotProps":{"type":{"name":"shape","description":"{ arrow?: object, popper?: object, tooltip?: object, transition?: object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ arrow?: elementType, popper?: elementType, tooltip?: elementType, transition?: elementType }"},"default":"{}"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"title":{"type":{"name":"node"}},"TransitionComponent":{"type":{"name":"elementType"},"default":"Grow"},"TransitionProps":{"type":{"name":"object"}}},"name":"Tooltip","imports":["import Tooltip from \'@mui/material/Tooltip\';","import { Tooltip } from \'@mui/material\';"],"styles":{"classes":["popper","popperInteractive","popperArrow","popperClose","tooltip","tooltipArrow","arrow","touch","tooltipPlacementLeft","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom"],"globalClasses":{},"name":"MuiTooltip"},"spread":true,"themeDefaultProps":true,"muiName":"MuiTooltip","forwardsRefTo":"HTMLButtonElement","filename":"/packages/mui-material/src/Tooltip/Tooltip.js","inheritance":null,"demos":"<ul><li><a href=\\"/material-ui/react-tooltip/\\">Tooltip</a></li></ul>","cssComponent":false}'),r=t(785893);function s(e){var o=e.descriptions,t=e.pageContent;return(0,r.jsx)(n.Z,{descriptions:o,pageContent:t})}s.getInitialProps=function(){var e=t(660248);return{descriptions:(0,i.Z)(e),pageContent:p}}},449232:function(e,o,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/tooltip",function(){return t(246603)}])},660248:function(e,o,t){var n={"./tooltip.json":671151,"translations/api-docs/tooltip/tooltip.json":671151};function i(e){return t(p(e))}function p(e){if(!t.o(n,e)){var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=p,e.exports=i,i.id=660248},671151:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"arrow":{"description":"If <code>true</code>, adds an arrow to the tooltip."},"children":{"description":"Tooltip reference element.","requiresRef":true},"classes":{"description":"Override or extend the styles applied to the component."},"components":{"description":"The components used for each slot inside.<br>This prop is an alias for the <code>slots</code> prop. It&#39;s recommended to use the <code>slots</code> prop instead."},"componentsProps":{"description":"The extra props for the slot components. You can override the existing props or add new ones.<br>This prop is an alias for the <code>slotProps</code> prop. It&#39;s recommended to use the <code>slotProps</code> prop instead, as <code>componentsProps</code> will be deprecated in the future."},"describeChild":{"description":"Set to <code>true</code> if the <code>title</code> acts as an accessible description. By default the <code>title</code> acts as an accessible label for the child."},"disableFocusListener":{"description":"Do not respond to focus-visible events."},"disableHoverListener":{"description":"Do not respond to hover events."},"disableInteractive":{"description":"Makes a tooltip not interactive, i.e. it will close when the user hovers over the tooltip before the <code>leaveDelay</code> is expired."},"disableTouchListener":{"description":"Do not respond to long press touch events."},"enterDelay":{"description":"The number of milliseconds to wait before showing the tooltip. This prop won&#39;t impact the enter touch delay (<code>enterTouchDelay</code>)."},"enterNextDelay":{"description":"The number of milliseconds to wait before showing the tooltip when one was already recently opened."},"enterTouchDelay":{"description":"The number of milliseconds a user must touch the element before showing the tooltip."},"followCursor":{"description":"If <code>true</code>, the tooltip follow the cursor over the wrapped element."},"id":{"description":"This prop is used to help implement the accessibility logic. If you don&#39;t provide this prop. It falls back to a randomly generated id."},"leaveDelay":{"description":"The number of milliseconds to wait before hiding the tooltip. This prop won&#39;t impact the leave touch delay (<code>leaveTouchDelay</code>)."},"leaveTouchDelay":{"description":"The number of milliseconds after the user stops touching an element before hiding the tooltip."},"onClose":{"description":"Callback fired when the component requests to be closed.","typeDescriptions":{"event":"The event source of the callback."}},"onOpen":{"description":"Callback fired when the component requests to be open.","typeDescriptions":{"event":"The event source of the callback."}},"open":{"description":"If <code>true</code>, the component is shown."},"placement":{"description":"Tooltip placement."},"PopperComponent":{"description":"The component used for the popper."},"PopperProps":{"description":"Props applied to the <a href=\\"/material-ui/api/popper/\\"><code>Popper</code></a> element."},"slotProps":{"description":"The extra props for the slot components. You can override the existing props or add new ones.<br>This prop is an alias for the <code>componentsProps</code> prop, which will be deprecated in the future."},"slots":{"description":"The components used for each slot inside.<br>This prop is an alias for the <code>components</code> prop, which will be deprecated in the future."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"title":{"description":"Tooltip title. Zero-length titles string, undefined, null and false are never displayed."},"TransitionComponent":{"description":"The component used for the transition. <a href=\\"/material-ui/transitions/#transitioncomponent-prop\\">Follow this guide</a> to learn more about the requirements for this component."},"TransitionProps":{"description":"Props applied to the transition element. By default, the element is based on this <a href=\\"http://reactcommunity.org/react-transition-group/transition/\\"><code>Transition</code></a> component."}},"classDescriptions":{"popper":{"description":"Styles applied to {{nodeName}}.","nodeName":"the Popper component"},"popperInteractive":{"description":"Styles applied to {{nodeName}} unless {{conditions}}.","nodeName":"the Popper component","conditions":"<code>disableInteractive={true}</code>"},"popperArrow":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Popper component","conditions":"<code>arrow={true}</code>"},"popperClose":{"description":"Styles applied to {{nodeName}} unless {{conditions}}.","nodeName":"the Popper component","conditions":"the tooltip is open"},"tooltip":{"description":"Styles applied to {{nodeName}}.","nodeName":"the tooltip (label wrapper) element"},"tooltipArrow":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the tooltip (label wrapper) element","conditions":"<code>arrow={true}</code>"},"arrow":{"description":"Styles applied to {{nodeName}}.","nodeName":"the arrow element"},"touch":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the tooltip (label wrapper) element","conditions":"the tooltip is opened by touch"},"tooltipPlacementLeft":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the tooltip (label wrapper) element","conditions":"<code>placement</code> contains &quot;left&quot;"},"tooltipPlacementRight":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the tooltip (label wrapper) element","conditions":"<code>placement</code> contains &quot;right&quot;"},"tooltipPlacementTop":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the tooltip (label wrapper) element","conditions":"<code>placement</code> contains &quot;top&quot;"},"tooltipPlacementBottom":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the tooltip (label wrapper) element","conditions":"<code>placement</code> contains &quot;bottom&quot;"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=449232)}),_N_E=e.O()}]);