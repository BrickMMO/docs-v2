(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[52141],{9247:function(e,t,i){"use strict";i.r(t),i.d(t,{default:function(){return a}}),i(667294);var o=i(543285),n=i(59626),r=JSON.parse('{"props":{"absolute":{"type":{"name":"bool"},"default":"false"},"children":{"type":{"name":"node"}},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"component":{"type":{"name":"elementType"}},"flexItem":{"type":{"name":"bool"},"default":"false"},"light":{"type":{"name":"bool"},"default":"false"},"orientation":{"type":{"name":"enum","description":"\'horizontal\'<br>&#124;&nbsp;\'vertical\'"},"default":"\'horizontal\'"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"textAlign":{"type":{"name":"enum","description":"\'center\'<br>&#124;&nbsp;\'left\'<br>&#124;&nbsp;\'right\'"},"default":"\'center\'"},"variant":{"type":{"name":"union","description":"\'fullWidth\'<br>&#124;&nbsp;\'inset\'<br>&#124;&nbsp;\'middle\'<br>&#124;&nbsp;string"},"default":"\'fullWidth\'"}},"name":"Divider","imports":["import Divider from \'@mui/material/Divider\';","import { Divider } from \'@mui/material\';"],"styles":{"classes":["root","absolute","inset","fullWidth","light","middle","vertical","flexItem","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","wrapper","wrapperVertical"],"globalClasses":{},"name":"MuiDivider"},"spread":true,"themeDefaultProps":true,"muiName":"MuiDivider","forwardsRefTo":"HTMLHRElement","filename":"/packages/mui-material/src/Divider/Divider.js","inheritance":null,"demos":"<ul><li><a href=\\"/material-ui/react-divider/\\">Divider</a></li>\\n<li><a href=\\"/material-ui/react-list/\\">Lists</a></li></ul>","cssComponent":false}'),d=i(785893);function a(e){var t=e.descriptions,i=e.pageContent;return(0,d.jsx)(o.Z,{descriptions:t,pageContent:i})}a.getInitialProps=function(){var e=i(630592);return{descriptions:(0,n.Z)(e),pageContent:r}}},996198:function(e,t,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/divider",function(){return i(9247)}])},630592:function(e,t,i){var o={"./divider.json":538908,"translations/api-docs/divider/divider.json":538908};function n(e){return i(r(e))}function r(e){if(!i.o(o,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}n.keys=function(){return Object.keys(o)},n.resolve=r,e.exports=n,n.id=630592},538908:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"absolute":{"description":"Absolutely position the element."},"children":{"description":"The content of the component."},"classes":{"description":"Override or extend the styles applied to the component."},"component":{"description":"The component used for the root node. Either a string to use a HTML element or a component."},"flexItem":{"description":"If <code>true</code>, a vertical divider will have the correct height when used in flex container. (By default, a vertical divider will have a calculated height of <code>0px</code> if it is the child of a flex container.)"},"light":{"description":"If <code>true</code>, the divider will have a lighter color."},"orientation":{"description":"The component orientation."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"textAlign":{"description":"The text alignment."},"variant":{"description":"The variant to use."}},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"absolute":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>absolute={true}</code>"},"inset":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"inset\\"</code>"},"fullWidth":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"fullWidth\\"</code>"},"light":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>light={true}</code>"},"middle":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"middle\\"</code>"},"vertical":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>orientation=\\"vertical\\"</code>"},"flexItem":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>flexItem={true}</code>"},"withChildren":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"divider have text"},"withChildrenVertical":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"divider have text and <code>orientation=\\"vertical\\"</code>"},"textAlignRight":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>textAlign=\\"right\\" orientation=\\"horizontal\\"</code>"},"textAlignLeft":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>textAlign=\\"left\\" orientation=\\"horizontal\\"</code>"},"wrapper":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the span children element","conditions":"<code>orientation=\\"horizontal\\"</code>"},"wrapperVertical":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the span children element","conditions":"<code>orientation=\\"vertical\\"</code>"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=996198)}),_N_E=e.O()}]);