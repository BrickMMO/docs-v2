(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[48119],{514129:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return s}}),o(667294);var n=o(543285),i=o(59626),a=JSON.parse('{"props":{"aria-label":{"type":{"name":"custom","description":"string"}},"aria-labelledby":{"type":{"name":"string"}},"aria-valuetext":{"type":{"name":"custom","description":"string"}},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"color":{"type":{"name":"union","description":"\'primary\'<br>&#124;&nbsp;\'secondary\'<br>&#124;&nbsp;\'error\'<br>&#124;&nbsp;\'info\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'<br>&#124;&nbsp;string"},"default":"\'primary\'"},"components":{"type":{"name":"shape","description":"{ Input?: elementType, Mark?: elementType, MarkLabel?: elementType, Rail?: elementType, Root?: elementType, Thumb?: elementType, Track?: elementType, ValueLabel?: elementType }"},"default":"{}"},"componentsProps":{"type":{"name":"shape","description":"{ input?: func<br>&#124;&nbsp;object, mark?: func<br>&#124;&nbsp;object, markLabel?: func<br>&#124;&nbsp;object, rail?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object, thumb?: func<br>&#124;&nbsp;object, track?: func<br>&#124;&nbsp;object, valueLabel?: func<br>&#124;&nbsp;{ children?: element, className?: string, open?: bool, style?: object, value?: number, valueLabelDisplay?: \'auto\'<br>&#124;&nbsp;\'off\'<br>&#124;&nbsp;\'on\' } }"},"default":"{}"},"defaultValue":{"type":{"name":"union","description":"Array&lt;number&gt;<br>&#124;&nbsp;number"}},"disabled":{"type":{"name":"bool"},"default":"false"},"disableSwap":{"type":{"name":"bool"},"default":"false"},"getAriaLabel":{"type":{"name":"func"},"signature":{"type":"function(index: number) => string","describedArgs":["index"]}},"getAriaValueText":{"type":{"name":"func"},"signature":{"type":"function(value: number, index: number) => string","describedArgs":["value","index"]}},"marks":{"type":{"name":"union","description":"Array&lt;{ label?: node, value: number }&gt;<br>&#124;&nbsp;bool"},"default":"false"},"max":{"type":{"name":"number"},"default":"100"},"min":{"type":{"name":"number"},"default":"0"},"name":{"type":{"name":"string"}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: Event, value: number | Array<number>, activeThumb: number) => void","describedArgs":["event","value","activeThumb"]}},"onChangeCommitted":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent | Event, value: number | Array<number>) => void","describedArgs":["event","value"]}},"orientation":{"type":{"name":"enum","description":"\'horizontal\'<br>&#124;&nbsp;\'vertical\'"},"default":"\'horizontal\'"},"scale":{"type":{"name":"func"},"default":"function Identity(x) {\\n  return x;\\n}","signature":{"type":"function(x: any) => any","describedArgs":[]}},"size":{"type":{"name":"union","description":"\'small\'<br>&#124;&nbsp;\'medium\'<br>&#124;&nbsp;string"},"default":"\'medium\'"},"slotProps":{"type":{"name":"shape","description":"{ input?: func<br>&#124;&nbsp;object, mark?: func<br>&#124;&nbsp;object, markLabel?: func<br>&#124;&nbsp;object, rail?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object, thumb?: func<br>&#124;&nbsp;object, track?: func<br>&#124;&nbsp;object, valueLabel?: func<br>&#124;&nbsp;{ children?: element, className?: string, open?: bool, style?: object, value?: number, valueLabelDisplay?: \'auto\'<br>&#124;&nbsp;\'off\'<br>&#124;&nbsp;\'on\' } }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ input?: elementType, mark?: elementType, markLabel?: elementType, rail?: elementType, root?: elementType, thumb?: elementType, track?: elementType, valueLabel?: elementType }"},"default":"{}"},"step":{"type":{"name":"number"},"default":"1"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"tabIndex":{"type":{"name":"number"}},"track":{"type":{"name":"enum","description":"\'inverted\'<br>&#124;&nbsp;\'normal\'<br>&#124;&nbsp;false"},"default":"\'normal\'"},"value":{"type":{"name":"union","description":"Array&lt;number&gt;<br>&#124;&nbsp;number"}},"valueLabelDisplay":{"type":{"name":"enum","description":"\'auto\'<br>&#124;&nbsp;\'off\'<br>&#124;&nbsp;\'on\'"},"default":"\'off\'"},"valueLabelFormat":{"type":{"name":"union","description":"func<br>&#124;&nbsp;string"},"default":"function Identity(x) {\\n  return x;\\n}"}},"name":"Slider","imports":["import Slider from \'@mui/material/Slider\';","import { Slider } from \'@mui/material\';"],"styles":{"classes":["root","colorPrimary","colorSecondary","colorError","colorInfo","colorSuccess","colorWarning","marked","vertical","disabled","dragging","rail","track","trackFalse","trackInverted","thumb","active","focusVisible","mark","markActive","markLabel","markLabelActive","sizeSmall","thumbColorPrimary","thumbColorSecondary","thumbColorError","thumbColorInfo","thumbColorSuccess","thumbColorWarning","thumbSizeSmall","valueLabel","valueLabelOpen","valueLabelCircle","valueLabelLabel"],"globalClasses":{"disabled":"Mui-disabled","active":"Mui-active","focusVisible":"Mui-focusVisible"},"name":"MuiSlider"},"spread":true,"themeDefaultProps":true,"muiName":"MuiSlider","forwardsRefTo":"HTMLSpanElement","filename":"/packages/mui-material/src/Slider/Slider.js","inheritance":null,"demos":"<ul><li><a href=\\"/material-ui/react-slider/\\">Slider</a></li></ul>","cssComponent":false}'),r=o(785893);function s(e){var t=e.descriptions,o=e.pageContent;return(0,r.jsx)(n.Z,{descriptions:t,pageContent:o})}s.getInitialProps=function(){var e=o(10874);return{descriptions:(0,i.Z)(e),pageContent:a}}},859784:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/slider",function(){return o(514129)}])},10874:function(e,t,o){var n={"./slider.json":712521,"translations/api-docs/slider/slider.json":712521};function i(e){return o(a(e))}function a(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=a,e.exports=i,i.id=10874},712521:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"aria-label":{"description":"The label of the slider."},"aria-labelledby":{"description":"The id of the element containing a label for the slider."},"aria-valuetext":{"description":"A string value that provides a user-friendly name for the current value of the slider."},"classes":{"description":"Override or extend the styles applied to the component."},"color":{"description":"The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#custom-colors\\">palette customization guide</a>."},"components":{"description":"The components used for each slot inside.<br>This prop is an alias for the <code>slots</code> prop. It&#39;s recommended to use the <code>slots</code> prop instead."},"componentsProps":{"description":"The extra props for the slot components. You can override the existing props or add new ones.<br>This prop is an alias for the <code>slotProps</code> prop. It&#39;s recommended to use the <code>slotProps</code> prop instead, as <code>componentsProps</code> will be deprecated in the future."},"defaultValue":{"description":"The default value. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disableSwap":{"description":"If <code>true</code>, the active thumb doesn&#39;t swap when moving pointer over a thumb while dragging another thumb."},"getAriaLabel":{"description":"Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider. This is important for screen reader users.","typeDescriptions":{"index":"The thumb label&#39;s index to format."}},"getAriaValueText":{"description":"Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider. This is important for screen reader users.","typeDescriptions":{"value":"The thumb label&#39;s value to format.","index":"The thumb label&#39;s index to format."}},"marks":{"description":"Marks indicate predetermined values to which the user can move the slider. If <code>true</code> the marks are spaced according the value of the <code>step</code> prop. If an array, it should contain objects with <code>value</code> and an optional <code>label</code> keys."},"max":{"description":"The maximum allowed value of the slider. Should not be equal to min."},"min":{"description":"The minimum allowed value of the slider. Should not be equal to max."},"name":{"description":"Name attribute of the hidden <code>input</code> element."},"onChange":{"description":"Callback function that is fired when the slider&#39;s value changed.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (any). <strong>Warning</strong>: This is a generic event not a change event.","value":"The new value.","activeThumb":"Index of the currently moved thumb."}},"onChangeCommitted":{"description":"Callback function that is fired when the <code>mouseup</code> is triggered.","typeDescriptions":{"event":"The event source of the callback. <strong>Warning</strong>: This is a generic event not a change event.","value":"The new value."}},"orientation":{"description":"The component orientation."},"scale":{"description":"A transformation function, to change the scale of the slider."},"size":{"description":"The size of the slider."},"slotProps":{"description":"The props used for each slot inside the Slider."},"slots":{"description":"The components used for each slot inside the Slider. Either a string to use a HTML element or a component."},"step":{"description":"The granularity with which the slider can step through values. (A &quot;discrete&quot; slider.) The <code>min</code> prop serves as the origin for the valid values. We recommend (max - min) to be evenly divisible by the step.<br>When step is <code>null</code>, the thumb can only be slid onto marks provided with the <code>marks</code> prop."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"tabIndex":{"description":"Tab index attribute of the hidden <code>input</code> element."},"track":{"description":"<p>The track presentation:</p>\\n<ul>\\n<li><code>normal</code> the track will render a bar representing the slider value.</li>\\n<li><code>inverted</code> the track will render a bar representing the remaining slider value.</li>\\n<li><code>false</code> the track will render without a bar.</li>\\n</ul>\\n"},"value":{"description":"The value of the slider. For ranged sliders, provide an array with two values."},"valueLabelDisplay":{"description":"<p>Controls when the value label is displayed:</p>\\n<ul>\\n<li><code>auto</code> the value label will display when the thumb is hovered or focused.</li>\\n<li><code>on</code> will display persistently.</li>\\n<li><code>off</code> will never display.</li>\\n</ul>\\n"},"valueLabelFormat":{"description":"The format function the value label&#39;s value.<br>When a function is provided, it should have the following signature:<br>- {number} value The value label&#39;s value to format - {number} index The value label&#39;s index to format"}},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"colorPrimary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"primary\\"</code>"},"colorSecondary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"secondary\\"</code>"},"colorError":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"error\\"</code>"},"colorInfo":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"info\\"</code>"},"colorSuccess":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"success\\"</code>"},"colorWarning":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"warning\\"</code>"},"marked":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>marks</code> is provided with at least one label"},"vertical":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>orientation=\\"vertical\\"</code>"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root and thumb element","conditions":"<code>disabled={true}</code>"},"dragging":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root","conditions":"a thumb is being dragged"},"rail":{"description":"Styles applied to {{nodeName}}.","nodeName":"the rail element"},"track":{"description":"Styles applied to {{nodeName}}.","nodeName":"the track element"},"trackFalse":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>track={false}</code>"},"trackInverted":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>track=\\"inverted\\"</code>"},"thumb":{"description":"Styles applied to {{nodeName}}.","nodeName":"the thumb element"},"active":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the thumb element","conditions":"it&#39;s active"},"focusVisible":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the thumb element","conditions":"keyboard focused"},"mark":{"description":"Styles applied to {{nodeName}}.","nodeName":"the mark element"},"markActive":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the mark element","conditions":"active (depending on the value)"},"markLabel":{"description":"Styles applied to {{nodeName}}.","nodeName":"the mark label element"},"markLabelActive":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the mark label element","conditions":"active (depending on the value)"},"sizeSmall":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"small\\"</code>"},"thumbColorPrimary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the thumb element","conditions":"<code>color=\\"primary\\"</code>"},"thumbColorSecondary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the thumb element","conditions":"<code>color=\\"secondary\\"</code>"},"thumbColorError":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the thumb element","conditions":"<code>color=\\"error\\"</code>"},"thumbColorInfo":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the thumb element","conditions":"<code>color=\\"info\\"</code>"},"thumbColorSuccess":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the thumb element","conditions":"<code>color=\\"success\\"</code>"},"thumbColorWarning":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the thumb element","conditions":"<code>color=\\"warning\\"</code>"},"thumbSizeSmall":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the thumb element","conditions":"<code>size=\\"small\\"</code>"},"valueLabel":{"description":"Styles applied to {{nodeName}}.","nodeName":"the thumb label element"},"valueLabelOpen":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the thumb label element","conditions":"it&#39;s open"},"valueLabelCircle":{"description":"Styles applied to {{nodeName}}.","nodeName":"the thumb label&#39;s circle element"},"valueLabelLabel":{"description":"Styles applied to {{nodeName}}.","nodeName":"the thumb label&#39;s label element"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=859784)}),_N_E=e.O()}]);