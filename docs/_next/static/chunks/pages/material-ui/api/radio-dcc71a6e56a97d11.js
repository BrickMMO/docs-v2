(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[51160],{732998:function(e,o,t){"use strict";t.r(o),t.d(o,{default:function(){return c}}),t(667294);var n=t(543285),i=t(59626),s=JSON.parse('{"props":{"checked":{"type":{"name":"bool"}},"checkedIcon":{"type":{"name":"node"},"default":"<RadioButtonIcon checked />"},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"color":{"type":{"name":"union","description":"\'default\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'secondary\'<br>&#124;&nbsp;\'error\'<br>&#124;&nbsp;\'info\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'<br>&#124;&nbsp;string"},"default":"\'primary\'"},"disabled":{"type":{"name":"bool"}},"disableRipple":{"type":{"name":"bool"},"default":"false"},"icon":{"type":{"name":"node"},"default":"<RadioButtonIcon />"},"id":{"type":{"name":"string"}},"inputProps":{"type":{"name":"object"}},"inputRef":{"type":{"name":"custom","description":"ref"}},"name":{"type":{"name":"string"}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.ChangeEvent<HTMLInputElement>) => void","describedArgs":["event"]}},"required":{"type":{"name":"bool"},"default":"false"},"size":{"type":{"name":"union","description":"\'medium\'<br>&#124;&nbsp;\'small\'<br>&#124;&nbsp;string"},"default":"\'medium\'"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"value":{"type":{"name":"any"}}},"name":"Radio","imports":["import Radio from \'@mui/material/Radio\';","import { Radio } from \'@mui/material\';"],"styles":{"classes":["root","checked","disabled","colorPrimary","colorSecondary","sizeSmall"],"globalClasses":{"checked":"Mui-checked","disabled":"Mui-disabled"},"name":"MuiRadio"},"spread":true,"themeDefaultProps":true,"muiName":"MuiRadio","forwardsRefTo":"HTMLSpanElement","filename":"/packages/mui-material/src/Radio/Radio.js","inheritance":{"component":"ButtonBase","pathname":"/material-ui/api/button-base/"},"demos":"<ul><li><a href=\\"/material-ui/react-radio-button/\\">Radio Group</a></li></ul>","cssComponent":false}'),a=t(785893);function c(e){var o=e.descriptions,t=e.pageContent;return(0,a.jsx)(n.Z,{descriptions:o,pageContent:t})}c.getInitialProps=function(){var e=t(478744);return{descriptions:(0,i.Z)(e),pageContent:s}}},792204:function(e,o,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/radio",function(){return t(732998)}])},478744:function(e,o,t){var n={"./radio.json":714982,"translations/api-docs/radio/radio.json":714982};function i(e){return t(s(e))}function s(e){if(!t.o(n,e)){var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=s,e.exports=i,i.id=478744},714982:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"checked":{"description":"If <code>true</code>, the component is checked."},"checkedIcon":{"description":"The icon to display when the component is checked."},"classes":{"description":"Override or extend the styles applied to the component."},"color":{"description":"The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#custom-colors\\">palette customization guide</a>."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disableRipple":{"description":"If <code>true</code>, the ripple effect is disabled."},"icon":{"description":"The icon to display when the component is unchecked."},"id":{"description":"The id of the <code>input</code> element."},"inputProps":{"description":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\\">Attributes</a> applied to the <code>input</code> element."},"inputRef":{"description":"Pass a ref to the <code>input</code> element."},"name":{"description":"Name attribute of the <code>input</code> element."},"onChange":{"description":"Callback fired when the state is changed.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string). You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean)."}},"required":{"description":"If <code>true</code>, the <code>input</code> element is required."},"size":{"description":"The size of the component. <code>small</code> is equivalent to the dense radio styling."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"value":{"description":"The value of the component. The DOM API casts this to a string."}},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"checked":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>checked={true}</code>"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code>"},"colorPrimary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"primary\\"</code>"},"colorSecondary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"secondary\\"</code>"},"sizeSmall":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"small\\"</code>"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=792204)}),_N_E=e.O()}]);