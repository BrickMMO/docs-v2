(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[75662],{167634:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return d}}),o(667294);var n=o(543285),i=o(59626),s=JSON.parse('{"props":{"value":{"type":{"name":"any"},"required":true},"children":{"type":{"name":"node"}},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"color":{"type":{"name":"union","description":"\'standard\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'secondary\'<br>&#124;&nbsp;\'error\'<br>&#124;&nbsp;\'info\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'<br>&#124;&nbsp;string"},"default":"\'standard\'"},"disabled":{"type":{"name":"bool"},"default":"false"},"disableFocusRipple":{"type":{"name":"bool"},"default":"false"},"disableRipple":{"type":{"name":"bool"},"default":"false"},"fullWidth":{"type":{"name":"bool"},"default":"false"},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.MouseEvent<HTMLElement>, value: any) => void","describedArgs":["event","value"]}},"onClick":{"type":{"name":"func"},"signature":{"type":"function(event: React.MouseEvent<HTMLElement>, value: any) => void","describedArgs":["event","value"]}},"selected":{"type":{"name":"bool"}},"size":{"type":{"name":"union","description":"\'small\'<br>&#124;&nbsp;\'medium\'<br>&#124;&nbsp;\'large\'<br>&#124;&nbsp;string"},"default":"\'medium\'"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}}},"name":"ToggleButton","imports":["import ToggleButton from \'@mui/material/ToggleButton\';","import { ToggleButton } from \'@mui/material\';"],"styles":{"classes":["root","disabled","selected","standard","primary","secondary","sizeSmall","sizeMedium","sizeLarge","fullWidth"],"globalClasses":{"disabled":"Mui-disabled","selected":"Mui-selected"},"name":"MuiToggleButton"},"spread":true,"themeDefaultProps":true,"muiName":"MuiToggleButton","forwardsRefTo":"HTMLButtonElement","filename":"/packages/mui-material/src/ToggleButton/ToggleButton.js","inheritance":{"component":"ButtonBase","pathname":"/material-ui/api/button-base/"},"demos":"<ul><li><a href=\\"/material-ui/react-toggle-button/\\">Toggle Button</a></li></ul>","cssComponent":false}'),a=o(785893);function d(e){var t=e.descriptions,o=e.pageContent;return(0,a.jsx)(n.Z,{descriptions:t,pageContent:o})}d.getInitialProps=function(){var e=o(212447);return{descriptions:(0,i.Z)(e),pageContent:s}}},406156:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/toggle-button",function(){return o(167634)}])},212447:function(e,t,o){var n={"./toggle-button.json":965724,"translations/api-docs/toggle-button/toggle-button.json":965724};function i(e){return o(s(e))}function s(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=s,e.exports=i,i.id=212447},965724:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"children":{"description":"The content of the component."},"classes":{"description":"Override or extend the styles applied to the component."},"color":{"description":"The color of the button when it is in an active state. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#custom-colors\\">palette customization guide</a>."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disableFocusRipple":{"description":"If <code>true</code>, the  keyboard focus ripple is disabled."},"disableRipple":{"description":"If <code>true</code>, the ripple effect is disabled.<br>⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure to highlight the element by applying separate styles with the <code>.Mui-focusVisible</code> class."},"fullWidth":{"description":"If <code>true</code>, the button will take up the full width of its container."},"onChange":{"description":"Callback fired when the state changes.","typeDescriptions":{"event":"The event source of the callback.","value":"of the selected button."}},"onClick":{"description":"Callback fired when the button is clicked.","typeDescriptions":{"event":"The event source of the callback.","value":"of the selected button."}},"selected":{"description":"If <code>true</code>, the button is rendered in an active state."},"size":{"description":"The size of the component. The prop defaults to the value inherited from the parent ToggleButtonGroup component."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"value":{"description":"The value to associate with the button when selected in a ToggleButtonGroup."}},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code>"},"selected":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>selected={true}</code>"},"standard":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"standard\\"</code>"},"primary":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"primary\\"</code>"},"secondary":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"secondary\\"</code>"},"sizeSmall":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"small\\"</code>"},"sizeMedium":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"medium\\"</code>"},"sizeLarge":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"large\\"</code>"},"fullWidth":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>fullWidth={true}</code>"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=406156)}),_N_E=e.O()}]);