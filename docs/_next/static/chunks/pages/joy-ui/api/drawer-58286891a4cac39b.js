(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[15486],{546140:function(e,o,t){"use strict";t.r(o),t.d(o,{default:function(){return a}}),t(667294);var n=t(543285),i=t(59626),s=JSON.parse('{"props":{"open":{"type":{"name":"bool"},"required":true},"anchor":{"type":{"name":"enum","description":"\'bottom\'<br>&#124;&nbsp;\'left\'<br>&#124;&nbsp;\'right\'<br>&#124;&nbsp;\'top\'"},"default":"\'left\'"},"color":{"type":{"name":"enum","description":"\'danger\'<br>&#124;&nbsp;\'neutral\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'"},"default":"\'neutral\'","additionalInfo":{"joy-color":true}},"component":{"type":{"name":"elementType"}},"container":{"type":{"name":"union","description":"HTML element<br>&#124;&nbsp;func"}},"disableAutoFocus":{"type":{"name":"bool"},"default":"false"},"disableEnforceFocus":{"type":{"name":"bool"},"default":"false"},"disableEscapeKeyDown":{"type":{"name":"bool"},"default":"false"},"disablePortal":{"type":{"name":"bool"},"default":"false"},"disableRestoreFocus":{"type":{"name":"bool"},"default":"false"},"disableScrollLock":{"type":{"name":"bool"},"default":"false"},"hideBackdrop":{"type":{"name":"bool"},"default":"false"},"invertedColors":{"type":{"name":"bool"},"default":"false"},"onClose":{"type":{"name":"func"},"signature":{"type":"function(event: object, reason: string) => void","describedArgs":["event","reason"]}},"size":{"type":{"name":"enum","description":"\'sm\'<br>&#124;&nbsp;\'md\'<br>&#124;&nbsp;\'lg\'"},"default":"\'md\'","additionalInfo":{"joy-size":true}},"slotProps":{"type":{"name":"shape","description":"{ backdrop?: func<br>&#124;&nbsp;object, content?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ backdrop?: elementType, content?: elementType, root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"variant":{"type":{"name":"enum","description":"\'outlined\'<br>&#124;&nbsp;\'plain\'<br>&#124;&nbsp;\'soft\'<br>&#124;&nbsp;\'solid\'"},"default":"\'plain\'","additionalInfo":{"joy-variant":true}}},"name":"Drawer","imports":["import Drawer from \'@mui/joy/Drawer\';","import { Drawer } from \'@mui/joy\';"],"styles":{"classes":[],"globalClasses":{},"name":"MuiDrawer"},"slots":[{"name":"root","description":"The component that renders the root.","default":"\'div\'","class":".MuiDrawer-root"},{"name":"backdrop","description":"The component that renders the backdrop.","default":"\'div\'","class":".MuiDrawer-backdrop"},{"name":"content","description":"The component that renders the content of the drawer.","default":"\'div\'","class":".MuiDrawer-content"}],"classes":{"classes":["colorContext","colorDanger","colorNeutral","colorPrimary","colorSuccess","colorWarning","hidden","sizeLg","sizeMd","sizeSm","variantOutlined","variantPlain","variantSoft","variantSolid"],"globalClasses":{}},"spread":true,"themeDefaultProps":false,"muiName":"JoyDrawer","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-joy/src/Drawer/Drawer.tsx","inheritance":null,"demos":"<ul><li><a href=\\"/joy-ui/react-drawer/\\">Drawer</a></li></ul>","cssComponent":false}'),r=t(785893);function a(e){var o=e.descriptions,t=e.pageContent;return(0,r.jsx)(n.Z,{descriptions:o,pageContent:t})}a.getInitialProps=function(){var e=t(661960);return{descriptions:(0,i.Z)(e),pageContent:s}}},536498:function(e,o,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/joy-ui/api/drawer",function(){return t(546140)}])},661960:function(e,o,t){var n={"./drawer.json":592069,"translations/api-docs-joy/drawer/drawer.json":592069};function i(e){return t(s(e))}function s(e){if(!t.o(n,e)){var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=s,e.exports=i,i.id=661960},592069:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"The navigation drawers (or \\"sidebars\\") provide ergonomic access to destinations in a site or app functionality such as switching accounts.","propDescriptions":{"anchor":{"description":"Side from which the drawer will appear."},"color":{"description":"The color of the component. It supports those theme colors that make sense for this component."},"component":{"description":"The component used for the root node. Either a string to use a HTML element or a component."},"container":{"description":"An HTML element or function that returns one. The <code>container</code> will have the portal children appended to it.<br>By default, it uses the body of the top-level document object, so it&#39;s simply <code>document.body</code> most of the time."},"disableAutoFocus":{"description":"If <code>true</code>, the modal will not automatically shift focus to itself when it opens, and replace it to the last focused element when it closes. This also works correctly with any modal children that have the <code>disableAutoFocus</code> prop.<br>Generally this should never be set to <code>true</code> as it makes the modal less accessible to assistive technologies, like screen readers."},"disableEnforceFocus":{"description":"If <code>true</code>, the modal will not prevent focus from leaving the modal while open.<br>Generally this should never be set to <code>true</code> as it makes the modal less accessible to assistive technologies, like screen readers."},"disableEscapeKeyDown":{"description":"If <code>true</code>, hitting escape will not fire the <code>onClose</code> callback."},"disablePortal":{"description":"The <code>children</code> will be under the DOM hierarchy of the parent component."},"disableRestoreFocus":{"description":"If <code>true</code>, the modal will not restore focus to previously focused element once modal is hidden or unmounted."},"disableScrollLock":{"description":"Disable the scroll lock behavior."},"hideBackdrop":{"description":"If <code>true</code>, the backdrop is not rendered."},"invertedColors":{"description":"If <code>true</code>, the children with an implicit color prop invert their colors to match the component&#39;s variant and color."},"onClose":{"description":"Callback fired when the component requests to be closed. The <code>reason</code> parameter can optionally be used to control the response to <code>onClose</code>.","typeDescriptions":{"event":"The event source of the callback.","reason":"Can be: <code>&quot;escapeKeyDown&quot;</code>, <code>&quot;backdropClick&quot;</code>, <code>&quot;closeClick&quot;</code>."}},"open":{"description":"If <code>true</code>, the component is shown."},"size":{"description":"The size of the component."},"slotProps":{"description":"The props used for each slot inside."},"slots":{"description":"The components used for each slot inside."},"variant":{"description":"The <a href=\\"https://mui.com/joy-ui/main-features/global-variants/\\">global variant</a> to use."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"hidden":{"description":"Class name applied to {{nodeName}} when {{conditions}}.","nodeName":"the root element","conditions":"open is false"},"backdrop":{"description":"Class name applied to {{nodeName}}.","nodeName":"the backdrop element"},"content":{"description":"Class name applied to {{nodeName}}.","nodeName":"the content element"},"colorPrimary":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"primary\\"</code>"},"colorNeutral":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"neutral\\"</code>"},"colorDanger":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"danger\\"</code>"},"colorSuccess":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"success\\"</code>"},"colorWarning":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"warning\\"</code>"},"colorContext":{"description":"Class name applied to {{nodeName}} when {{conditions}}.","nodeName":"the root element","conditions":"color inversion is triggered"},"variantPlain":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"plain\\"</code>"},"variantOutlined":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"outlined\\"</code>"},"variantSoft":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"soft\\"</code>"},"variantSolid":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"solid\\"</code>"},"sizeSm":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"sm\\"</code>"},"sizeMd":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"md\\"</code>"},"sizeLg":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"lg\\"</code>"}},"slotDescriptions":{"root":"The component that renders the root.","backdrop":"The component that renders the backdrop.","content":"The component that renders the content of the drawer."}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=536498)}),_N_E=e.O()}]);