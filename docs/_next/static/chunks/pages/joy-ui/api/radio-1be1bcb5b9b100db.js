(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[39167],{769161:function(e,o,n){"use strict";n.r(o),n.d(o,{default:function(){return d}}),n(667294);var t=n(543285),i=n(59626),a=JSON.parse('{"props":{"checked":{"type":{"name":"bool"}},"checkedIcon":{"type":{"name":"node"}},"className":{"type":{"name":"string"}},"color":{"type":{"name":"union","description":"\'danger\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'<br>&#124;&nbsp;string"},"default":"\'neutral\'","additionalInfo":{"joy-color":true}},"component":{"type":{"name":"elementType"}},"defaultChecked":{"type":{"name":"bool"}},"disabled":{"type":{"name":"bool"}},"disableIcon":{"type":{"name":"bool"},"default":"false"},"label":{"type":{"name":"node"}},"name":{"type":{"name":"string"}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.ChangeEvent<HTMLInputElement>) => void","describedArgs":["event"]}},"overlay":{"type":{"name":"bool"},"default":"false"},"readOnly":{"type":{"name":"bool"}},"required":{"type":{"name":"bool"}},"size":{"type":{"name":"union","description":"\'sm\'<br>&#124;&nbsp;\'md\'<br>&#124;&nbsp;\'lg\'<br>&#124;&nbsp;string"},"default":"\'md\'","additionalInfo":{"joy-size":true}},"slotProps":{"type":{"name":"shape","description":"{ action?: func<br>&#124;&nbsp;object, icon?: func<br>&#124;&nbsp;object, input?: func<br>&#124;&nbsp;object, label?: func<br>&#124;&nbsp;object, radio?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ action?: elementType, icon?: elementType, input?: elementType, label?: elementType, radio?: elementType, root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"uncheckedIcon":{"type":{"name":"node"}},"value":{"type":{"name":"any"}},"variant":{"type":{"name":"union","description":"\'outlined\'<br>&#124;&nbsp;\'plain\'<br>&#124;&nbsp;\'soft\'<br>&#124;&nbsp;\'solid\'<br>&#124;&nbsp;string"},"default":"\'outlined\'","additionalInfo":{"joy-variant":true}}},"name":"Radio","imports":["import Radio from \'@mui/joy/Radio\';","import { Radio } from \'@mui/joy\';"],"styles":{"classes":[],"globalClasses":{},"name":"MuiRadio"},"slots":[{"name":"root","description":"The component that renders the root.","default":"\'span\'","class":".MuiRadio-root"},{"name":"radio","description":"The component that renders the radio.","default":"\'span\'","class":".MuiRadio-radio"},{"name":"icon","description":"The component that renders the icon.","default":"\'span\'","class":".MuiRadio-icon"},{"name":"action","description":"The component that renders the action.","default":"\'span\'","class":".MuiRadio-action"},{"name":"input","description":"The component that renders the input.","default":"\'input\'","class":".MuiRadio-input"},{"name":"label","description":"The component that renders the label.","default":"\'label\'","class":".MuiRadio-label"}],"classes":{"classes":["checked","colorContext","colorDanger","colorNeutral","colorPrimary","colorSuccess","colorWarning","disabled","focusVisible","sizeLg","sizeMd","sizeSm","variantOutlined","variantSoft","variantSolid"],"globalClasses":{"checked":"Mui-checked","disabled":"Mui-disabled","focusVisible":"Mui-focusVisible"}},"spread":false,"themeDefaultProps":true,"muiName":"JoyRadio","forwardsRefTo":"HTMLSpanElement","filename":"/packages/mui-joy/src/Radio/Radio.tsx","inheritance":null,"demos":"<ul><li><a href=\\"/joy-ui/react-radio-button/\\">Radio</a></li></ul>","cssComponent":false}'),s=n(785893);function d(e){var o=e.descriptions,n=e.pageContent;return(0,s.jsx)(t.Z,{descriptions:o,pageContent:n})}d.getInitialProps=function(){var e=n(506854);return{descriptions:(0,i.Z)(e),pageContent:a}}},243611:function(e,o,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/joy-ui/api/radio",function(){return n(769161)}])},506854:function(e,o,n){var t={"./radio.json":292601,"translations/api-docs-joy/radio/radio.json":292601};function i(e){return n(a(e))}function a(e){if(!n.o(t,e)){var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return t[e]}i.keys=function(){return Object.keys(t)},i.resolve=a,e.exports=i,i.id=506854},292601:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"checked":{"description":"If <code>true</code>, the component is checked."},"checkedIcon":{"description":"The icon to display when the component is checked."},"className":{"description":"Class name applied to the root element."},"color":{"description":"The color of the component. It supports those theme colors that make sense for this component."},"component":{"description":"The component used for the root node. Either a string to use a HTML element or a component."},"defaultChecked":{"description":"The default checked state. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disableIcon":{"description":"If <code>true</code>, the checked icon is removed and the selected variant is applied on the <code>action</code> element instead."},"label":{"description":"The label element at the end the radio."},"name":{"description":"The <code>name</code> attribute of the input."},"onChange":{"description":"Callback fired when the state is changed.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string). You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean)."}},"overlay":{"description":"If <code>true</code>, the root element&#39;s position is set to initial which allows the action area to fill the nearest positioned parent. This prop is useful for composing Radio with ListItem component."},"readOnly":{"description":"If <code>true</code>, the component is read only."},"required":{"description":"If <code>true</code>, the <code>input</code> element is required."},"size":{"description":"The size of the component."},"slotProps":{"description":"The props used for each slot inside."},"slots":{"description":"The components used for each slot inside."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"uncheckedIcon":{"description":"The icon to display when the component is not checked."},"value":{"description":"The value of the component. The DOM API casts this to a string."},"variant":{"description":"The <a href=\\"https://mui.com/joy-ui/main-features/global-variants/\\">global variant</a> to use."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"radio":{"description":"Class name applied to {{nodeName}}.","nodeName":"the radio element"},"icon":{"description":"Class name applied to {{nodeName}}.","nodeName":"the icon element"},"action":{"description":"Class name applied to {{nodeName}}.","nodeName":"the action element"},"input":{"description":"Class name applied to {{nodeName}}.","nodeName":"the input element"},"label":{"description":"Class name applied to {{nodeName}}.","nodeName":"the label element"},"checked":{"description":"State class applied to {{nodeName}}, {{conditions}}.","nodeName":"the root","conditions":"action slots if <code>checked</code>"},"disabled":{"description":"State class applied to {{nodeName}}, {{conditions}}.","nodeName":"the root","conditions":"action slots if <code>disabled</code>"},"focusVisible":{"description":"Class name applied to the root element if the switch has visible focus"},"colorPrimary":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"primary\\"</code>"},"colorDanger":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"danger\\"</code>"},"colorNeutral":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"neutral\\"</code>"},"colorSuccess":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"success\\"</code>"},"colorWarning":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"warning\\"</code>"},"colorContext":{"description":"Class name applied to {{nodeName}} when {{conditions}}.","nodeName":"the root element","conditions":"color inversion is triggered"},"sizeSm":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"sm\\"</code>"},"sizeMd":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"md\\"</code>"},"sizeLg":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"lg\\"</code>"},"variantOutlined":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"outlined\\"</code>"},"variantSoft":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"soft\\"</code>"},"variantSolid":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"solid\\"</code>"}},"slotDescriptions":{"root":"The component that renders the root.","radio":"The component that renders the radio.","icon":"The component that renders the icon.","action":"The component that renders the action.","input":"The component that renders the input.","label":"The component that renders the label."}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=243611)}),_N_E=e.O()}]);