(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[54140],{358014:function(e,o,n){"use strict";n.r(o),n.d(o,{default:function(){return c}}),n(667294);var t=n(543285),i=n(59626),s=JSON.parse('{"props":{"checked":{"type":{"name":"bool"}},"checkedIcon":{"type":{"name":"node"},"default":"<CheckIcon />"},"className":{"type":{"name":"string"}},"color":{"type":{"name":"union","description":"\'danger\'<br>&#124;&nbsp;\'neutral\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'<br>&#124;&nbsp;string"},"default":"\'neutral\'","additionalInfo":{"joy-color":true}},"component":{"type":{"name":"elementType"}},"defaultChecked":{"type":{"name":"bool"}},"disabled":{"type":{"name":"bool"}},"disableIcon":{"type":{"name":"bool"},"default":"false"},"indeterminate":{"type":{"name":"bool"},"default":"false"},"indeterminateIcon":{"type":{"name":"node"},"default":"<IndeterminateIcon />"},"label":{"type":{"name":"node"}},"name":{"type":{"name":"string"}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.ChangeEvent<HTMLInputElement>) => void","describedArgs":["event"]}},"overlay":{"type":{"name":"bool"},"default":"false"},"readOnly":{"type":{"name":"bool"}},"required":{"type":{"name":"bool"}},"size":{"type":{"name":"enum","description":"\'sm\'<br>&#124;&nbsp;\'md\'<br>&#124;&nbsp;\'lg\'"},"default":"\'md\'","additionalInfo":{"joy-size":true}},"slotProps":{"type":{"name":"shape","description":"{ action?: func<br>&#124;&nbsp;object, checkbox?: func<br>&#124;&nbsp;object, input?: func<br>&#124;&nbsp;object, label?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ action?: elementType, checkbox?: elementType, input?: elementType, label?: elementType, root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"uncheckedIcon":{"type":{"name":"node"}},"value":{"type":{"name":"union","description":"Array&lt;string&gt;<br>&#124;&nbsp;number<br>&#124;&nbsp;string"}},"variant":{"type":{"name":"enum","description":"\'outlined\'<br>&#124;&nbsp;\'plain\'<br>&#124;&nbsp;\'soft\'<br>&#124;&nbsp;\'solid\'"},"default":"\'solid\'","additionalInfo":{"joy-variant":true}}},"name":"Checkbox","imports":["import Checkbox from \'@mui/joy/Checkbox\';","import { Checkbox } from \'@mui/joy\';"],"styles":{"classes":[],"globalClasses":{},"name":"MuiCheckbox"},"slots":[{"name":"root","description":"The component that renders the root.","default":"\'span\'","class":".MuiCheckbox-root"},{"name":"checkbox","description":"The component that renders the checkbox.","default":"\'span\'","class":".MuiCheckbox-checkbox"},{"name":"action","description":"The component that renders the action.","default":"\'span\'","class":".MuiCheckbox-action"},{"name":"input","description":"The component that renders the input.","default":"\'input\'","class":".MuiCheckbox-input"},{"name":"label","description":"The component that renders the label.","default":"\'label\'","class":".MuiCheckbox-label"}],"classes":{"classes":["checked","colorContext","colorDanger","colorNeutral","colorPrimary","colorSuccess","colorWarning","disabled","focusVisible","indeterminate","sizeLg","sizeMd","sizeSm","variantOutlined","variantSoft","variantSolid"],"globalClasses":{"checked":"Mui-checked","disabled":"Mui-disabled","focusVisible":"Mui-focusVisible"}},"spread":false,"themeDefaultProps":true,"muiName":"JoyCheckbox","forwardsRefTo":"HTMLSpanElement","filename":"/packages/mui-joy/src/Checkbox/Checkbox.tsx","inheritance":null,"demos":"<ul><li><a href=\\"/joy-ui/react-checkbox/\\">Checkbox</a></li></ul>","cssComponent":false}'),a=n(785893);function c(e){var o=e.descriptions,n=e.pageContent;return(0,a.jsx)(t.Z,{descriptions:o,pageContent:n})}c.getInitialProps=function(){var e=n(450885);return{descriptions:(0,i.Z)(e),pageContent:s}}},779394:function(e,o,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/joy-ui/api/checkbox",function(){return n(358014)}])},450885:function(e,o,n){var t={"./checkbox.json":405688,"translations/api-docs-joy/checkbox/checkbox.json":405688};function i(e){return n(s(e))}function s(e){if(!n.o(t,e)){var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return t[e]}i.keys=function(){return Object.keys(t)},i.resolve=s,e.exports=i,i.id=450885},405688:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"checked":{"description":"If <code>true</code>, the component is checked."},"checkedIcon":{"description":"The icon to display when the component is checked."},"className":{"description":"Class name applied to the root element."},"color":{"description":"The color of the component. It supports those theme colors that make sense for this component."},"component":{"description":"The component used for the root node. Either a string to use a HTML element or a component."},"defaultChecked":{"description":"The default checked state. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disableIcon":{"description":"If <code>true</code>, the checked icon is removed and the selected variant is applied on the <code>action</code> element instead."},"indeterminate":{"description":"If <code>true</code>, the component appears indeterminate. This does not set the native input element to indeterminate due to inconsistent behavior across browsers. However, we set a <code>data-indeterminate</code> attribute on the <code>input</code>."},"indeterminateIcon":{"description":"The icon to display when the component is indeterminate."},"label":{"description":"The label element next to the checkbox."},"name":{"description":"The <code>name</code> attribute of the input."},"onChange":{"description":"Callback fired when the state is changed.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string). You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean)."}},"overlay":{"description":"If <code>true</code>, the root element&#39;s position is set to initial which allows the action area to fill the nearest positioned parent. This prop is useful for composing Checkbox with ListItem component."},"readOnly":{"description":"If <code>true</code>, the component is read only."},"required":{"description":"If <code>true</code>, the <code>input</code> element is required."},"size":{"description":"The size of the component."},"slotProps":{"description":"The props used for each slot inside."},"slots":{"description":"The components used for each slot inside."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"uncheckedIcon":{"description":"The icon when <code>checked</code> is false."},"value":{"description":"The value of the component. The DOM API casts this to a string. The browser uses &quot;on&quot; as the default value."},"variant":{"description":"The <a href=\\"https://mui.com/joy-ui/main-features/global-variants/\\">global variant</a> to use."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"checkbox":{"description":"Class name applied to {{nodeName}}.","nodeName":"the checkbox element"},"action":{"description":"Class name applied to {{nodeName}}.","nodeName":"the action element"},"input":{"description":"Class name applied to {{nodeName}}.","nodeName":"the input element"},"label":{"description":"Class name applied to {{nodeName}}.","nodeName":"the label element"},"checked":{"description":"State class applied to {{nodeName}}.","nodeName":"the input component&#39;s <code>checked</code> class"},"disabled":{"description":"State class applied to {{nodeName}}.","nodeName":"the input component&#39;s disabled class"},"focusVisible":{"description":"Class name applied to the root element if the switch has visible focus"},"indeterminate":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>indeterminate={true}</code>"},"colorPrimary":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"primary\\"</code>"},"colorDanger":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"danger\\"</code>"},"colorNeutral":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"neutral\\"</code>"},"colorSuccess":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"success\\"</code>"},"colorWarning":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"warning\\"</code>"},"colorContext":{"description":"Class name applied to {{nodeName}} when {{conditions}}.","nodeName":"the root element","conditions":"color inversion is triggered"},"sizeSm":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"sm\\"</code>"},"sizeMd":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"md\\"</code>"},"sizeLg":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"lg\\"</code>"},"variantOutlined":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"outlined\\"</code>"},"variantSoft":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"soft\\"</code>"},"variantSolid":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"solid\\"</code>"}},"slotDescriptions":{"root":"The component that renders the root.","checkbox":"The component that renders the checkbox.","action":"The component that renders the action.","input":"The component that renders the input.","label":"The component that renders the label."}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=779394)}),_N_E=e.O()}]);