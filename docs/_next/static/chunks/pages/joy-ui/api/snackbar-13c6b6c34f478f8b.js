(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[55525],{770127:function(e,o,n){"use strict";n.r(o),n.d(o,{default:function(){return s}}),n(667294);var t=n(543285),i=n(59626),a=JSON.parse('{"props":{"open":{"type":{"name":"bool"},"required":true},"anchorOrigin":{"type":{"name":"shape","description":"{ horizontal: \'center\'<br>&#124;&nbsp;\'left\'<br>&#124;&nbsp;\'right\', vertical: \'bottom\'<br>&#124;&nbsp;\'top\' }"},"default":"{ vertical: \'bottom\', horizontal: \'right\' }"},"animationDuration":{"type":{"name":"number"},"default":"300"},"autoHideDuration":{"type":{"name":"number"},"default":"null"},"color":{"type":{"name":"enum","description":"\'danger\'<br>&#124;&nbsp;\'neutral\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'"},"default":"\'neutral\'","additionalInfo":{"joy-color":true}},"component":{"type":{"name":"elementType"}},"disableWindowBlurListener":{"type":{"name":"bool"},"default":"false"},"endDecorator":{"type":{"name":"node"}},"invertedColors":{"type":{"name":"bool"},"default":"false"},"key":{"type":{"name":"custom","description":"any"}},"onClose":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent<any> | Event, reason: string) => void","describedArgs":["event","reason"]}},"onUnmount":{"type":{"name":"func"}},"resumeHideDuration":{"type":{"name":"number"}},"size":{"type":{"name":"enum","description":"\'sm\'<br>&#124;&nbsp;\'md\'<br>&#124;&nbsp;\'lg\'"},"default":"\'md\'","additionalInfo":{"joy-size":true}},"slotProps":{"type":{"name":"shape","description":"{ clickAway?: func<br>&#124;&nbsp;{ children: element, disableReactTree?: bool, mouseEvent?: \'onClick\'<br>&#124;&nbsp;\'onMouseDown\'<br>&#124;&nbsp;\'onMouseUp\'<br>&#124;&nbsp;\'onPointerDown\'<br>&#124;&nbsp;\'onPointerUp\'<br>&#124;&nbsp;false, onClickAway: func, touchEvent?: \'onTouchEnd\'<br>&#124;&nbsp;\'onTouchStart\'<br>&#124;&nbsp;false }, endDecorator?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object, startDecorator?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ clickAway?: elementType, endDecorator?: elementType, root?: elementType, startDecorator?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"startDecorator":{"type":{"name":"node"}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"variant":{"type":{"name":"enum","description":"\'outlined\'<br>&#124;&nbsp;\'plain\'<br>&#124;&nbsp;\'soft\'<br>&#124;&nbsp;\'solid\'"},"default":"\'outlined\'","additionalInfo":{"joy-variant":true}}},"name":"Snackbar","imports":["import Snackbar from \'@mui/joy/Snackbar\';","import { Snackbar } from \'@mui/joy\';"],"styles":{"classes":[],"globalClasses":{},"name":"MuiSnackbar"},"slots":[{"name":"root","description":"The component that renders the root.","default":"\'div\'","class":".MuiSnackbar-root"},{"name":"startDecorator","description":"The component that renders the start decorator.","default":"\'span\'","class":".MuiSnackbar-startDecorator"},{"name":"endDecorator","description":"The component that renders the end decorator.","default":"\'span\'","class":".MuiSnackbar-endDecorator"},{"name":"clickAway","description":"The component that renders the click away.","default":"ClickAwayListener","class":null}],"classes":{"classes":["anchorOriginBottomCenter","anchorOriginBottomLeft","anchorOriginBottomRight","anchorOriginTopCenter","anchorOriginTopLeft","anchorOriginTopRight","colorDanger","colorNeutral","colorPrimary","colorSuccess","colorWarning","sizeLg","sizeMd","sizeSm","variantOutlined","variantPlain","variantSoft","variantSolid"],"globalClasses":{}},"spread":false,"themeDefaultProps":true,"muiName":"JoySnackbar","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-joy/src/Snackbar/Snackbar.tsx","inheritance":null,"demos":"<ul><li><a href=\\"/joy-ui/react-snackbar/\\">Snackbar</a></li></ul>","cssComponent":false}'),r=n(785893);function s(e){var o=e.descriptions,n=e.pageContent;return(0,r.jsx)(t.Z,{descriptions:o,pageContent:n})}s.getInitialProps=function(){var e=n(597586);return{descriptions:(0,i.Z)(e),pageContent:a}}},905149:function(e,o,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/joy-ui/api/snackbar",function(){return n(770127)}])},597586:function(e,o,n){var t={"./snackbar.json":808825,"translations/api-docs-joy/snackbar/snackbar.json":808825};function i(e){return n(a(e))}function a(e){if(!n.o(t,e)){var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return t[e]}i.keys=function(){return Object.keys(t)},i.resolve=a,e.exports=i,i.id=597586},808825:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"anchorOrigin":{"description":"The anchor of the <code>Snackbar</code>. On smaller screens, the component grows to occupy all the available width, the horizontal alignment is ignored."},"animationDuration":{"description":"The duration of the animation in milliseconds. This value is used to control the length of time it takes for an animation to complete one cycle. It is also utilized for delaying the unmount of the component. Provide this value if you have your own animation so that we can precisely time the component&#39;s unmount to match your custom animation."},"autoHideDuration":{"description":"The number of milliseconds to wait before automatically calling the <code>onClose</code> function. <code>onClose</code> should then set the state of the <code>open</code> prop to hide the Snackbar. This behavior is disabled by default with the <code>null</code> value."},"color":{"description":"The color of the component. It supports those theme colors that make sense for this component."},"component":{"description":"The component used for the root node. Either a string to use a HTML element or a component."},"disableWindowBlurListener":{"description":"If <code>true</code>, the <code>autoHideDuration</code> timer will expire even if the window is not focused."},"endDecorator":{"description":"Element placed after the children."},"invertedColors":{"description":"If <code>true</code>, the children with an implicit color prop invert their colors to match the component&#39;s variant and color."},"key":{"description":"When displaying multiple consecutive snackbars using a single parent-rendered <code>&lt;Snackbar/&gt;</code>, add the <code>key</code> prop to ensure independent treatment of each message. For instance, use <code>&lt;Snackbar key={message} /&gt;</code>. Otherwise, messages might update in place, and features like <code>autoHideDuration</code> could be affected."},"onClose":{"description":"Callback fired when the component requests to be closed. Typically <code>onClose</code> is used to set state in the parent component, which is used to control the <code>Snackbar</code> <code>open</code> prop. The <code>reason</code> parameter can optionally be used to control the response to <code>onClose</code>, for example ignoring <code>clickaway</code>.","typeDescriptions":{"event":"The event source of the callback.","reason":"Can be: <code>&quot;timeout&quot;</code> (<code>autoHideDuration</code> expired), <code>&quot;clickaway&quot;</code>, or <code>&quot;escapeKeyDown&quot;</code>."}},"onUnmount":{"description":"A callback fired when the component is about to be unmounted."},"open":{"description":"If <code>true</code>, the component is shown."},"resumeHideDuration":{"description":"The number of milliseconds to wait before dismissing after user interaction. If <code>autoHideDuration</code> prop isn&#39;t specified, it does nothing. If <code>autoHideDuration</code> prop is specified but <code>resumeHideDuration</code> isn&#39;t, we default to <code>autoHideDuration / 2</code> ms."},"size":{"description":"The size of the component."},"slotProps":{"description":"The props used for each slot inside."},"slots":{"description":"The components used for each slot inside."},"startDecorator":{"description":"Element placed before the children."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"variant":{"description":"The <a href=\\"https://mui.com/joy-ui/main-features/global-variants/\\">global variant</a> to use."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"anchorOriginTopCenter":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>anchorOrigin={{ \'top\', \'center\' }}</code>"},"anchorOriginBottomCenter":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>anchorOrigin={{ \'bottom\', \'center\' }}</code>"},"anchorOriginTopRight":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>anchorOrigin={{ \'top\', \'right\' }}</code>"},"anchorOriginBottomRight":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>anchorOrigin={{ \'bottom\', \'right\' }}</code>"},"anchorOriginTopLeft":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>anchorOrigin={{ \'top\', \'left\' }}</code>"},"anchorOriginBottomLeft":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>anchorOrigin={{ \'bottom\', \'left\' }}</code>"},"colorPrimary":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"primary\\"</code>"},"colorDanger":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"danger\\"</code>"},"colorNeutral":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"neutral\\"</code>"},"colorSuccess":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"success\\"</code>"},"colorWarning":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"warning\\"</code>"},"endDecorator":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the endDecorator element","conditions":"supplied"},"sizeSm":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"sm\\"</code>"},"sizeMd":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"md\\"</code>"},"sizeLg":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"lg\\"</code>"},"startDecorator":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the startDecorator element","conditions":"supplied"},"variantPlain":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"plain\\"</code>"},"variantOutlined":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"outlined\\"</code>"},"variantSoft":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"soft\\"</code>"},"variantSolid":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"solid\\"</code>"}},"slotDescriptions":{"root":"The component that renders the root.","startDecorator":"The component that renders the start decorator.","endDecorator":"The component that renders the end decorator.","clickAway":"The component that renders the click away."}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=905149)}),_N_E=e.O()}]);