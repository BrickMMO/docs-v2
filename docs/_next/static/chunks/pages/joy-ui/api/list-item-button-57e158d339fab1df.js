(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[28149],{856986:function(e,o,t){"use strict";t.r(o),t.d(o,{default:function(){return r}}),t(667294);var n=t(543285),i=t(59626),s=JSON.parse('{"props":{"action":{"type":{"name":"union","description":"func<br>&#124;&nbsp;{ current?: { focusVisible: func } }"}},"autoFocus":{"type":{"name":"bool"},"default":"false"},"children":{"type":{"name":"node"}},"color":{"type":{"name":"union","description":"\'danger\'<br>&#124;&nbsp;\'neutral\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'<br>&#124;&nbsp;string"},"default":"\'neutral\'","additionalInfo":{"joy-color":true}},"component":{"type":{"name":"elementType"}},"disabled":{"type":{"name":"bool"},"default":"false"},"focusVisibleClassName":{"type":{"name":"string"}},"orientation":{"type":{"name":"enum","description":"\'horizontal\'<br>&#124;&nbsp;\'vertical\'"},"default":"\'horizontal\'"},"selected":{"type":{"name":"bool"},"default":"false"},"slotProps":{"type":{"name":"shape","description":"{ root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"variant":{"type":{"name":"union","description":"\'outlined\'<br>&#124;&nbsp;\'plain\'<br>&#124;&nbsp;\'soft\'<br>&#124;&nbsp;\'solid\'<br>&#124;&nbsp;string"},"default":"\'plain\'","additionalInfo":{"joy-variant":true}}},"name":"ListItemButton","imports":["import ListItemButton from \'@mui/joy/ListItemButton\';","import { ListItemButton } from \'@mui/joy\';"],"styles":{"classes":[],"globalClasses":{},"name":"MuiListItemButton"},"slots":[{"name":"root","description":"The component that renders the root.","default":"\'div\'","class":".MuiListItemButton-root"}],"classes":{"classes":["colorContext","colorDanger","colorNeutral","colorPrimary","colorSuccess","colorWarning","disabled","focusVisible","horizontal","selected","variantOutlined","variantPlain","variantSoft","variantSolid","vertical"],"globalClasses":{"focusVisible":"Mui-focusVisible","disabled":"Mui-disabled","selected":"Mui-selected"}},"spread":true,"themeDefaultProps":true,"muiName":"JoyListItemButton","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-joy/src/ListItemButton/ListItemButton.tsx","inheritance":null,"demos":"<ul><li><a href=\\"/joy-ui/react-list/\\">Lists</a></li></ul>","cssComponent":false}'),a=t(785893);function r(e){var o=e.descriptions,t=e.pageContent;return(0,a.jsx)(n.Z,{descriptions:o,pageContent:t})}r.getInitialProps=function(){var e=t(50205);return{descriptions:(0,i.Z)(e),pageContent:s}}},76860:function(e,o,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/joy-ui/api/list-item-button",function(){return t(856986)}])},50205:function(e,o,t){var n={"./list-item-button.json":157674,"translations/api-docs-joy/list-item-button/list-item-button.json":157674};function i(e){return t(s(e))}function s(e){if(!t.o(n,e)){var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=s,e.exports=i,i.id=50205},157674:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"action":{"description":"A ref for imperative actions. It currently only supports <code>focusVisible()</code> action."},"autoFocus":{"description":"If <code>true</code>, the list item is focused during the first mount. Focus will also be triggered if the value changes from false to true."},"children":{"description":"The content of the component."},"color":{"description":"The color of the component. It supports those theme colors that make sense for this component."},"component":{"description":"The component used for the root node. Either a string to use a HTML element or a component."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"focusVisibleClassName":{"description":"This prop can help identify which element has keyboard focus. The class name will be applied when the element gains the focus through keyboard interaction. It&#39;s a polyfill for the <a href=\\"https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo\\">CSS :focus-visible selector</a>. The rationale for using this feature <a href=\\"https://github.com/WICG/focus-visible/blob/HEAD/explainer.md\\">is explained here</a>. A <a href=\\"https://github.com/WICG/focus-visible\\">polyfill can be used</a> to apply a <code>focus-visible</code> class to other components if needed."},"orientation":{"description":"The content direction flow."},"selected":{"description":"If <code>true</code>, the component is selected."},"slotProps":{"description":"The props used for each slot inside."},"slots":{"description":"The components used for each slot inside."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"variant":{"description":"The <a href=\\"https://mui.com/joy-ui/main-features/global-variants/\\">global variant</a> to use."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"vertical":{"description":"Class name applied to {{nodeName}}, {{conditions}}.","nodeName":"the root element","conditions":"if <code>orientation=\\"vertical\\"</code>"},"horizontal":{"description":"Class name applied to {{nodeName}}, {{conditions}}.","nodeName":"the root element","conditions":"if <code>orientation=\\"horizontal\\"</code>"},"colorPrimary":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"primary\\"</code>"},"colorNeutral":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"neutral\\"</code>"},"colorDanger":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"danger\\"</code>"},"colorSuccess":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"success\\"</code>"},"colorWarning":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"warning\\"</code>"},"colorContext":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"context\\"</code>"},"focusVisible":{"description":"State class applied to {{nodeName}}.","nodeName":"the <code>component</code>&#39;s <code>focusVisibleClassName</code> prop"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the inner <code>component</code> element","conditions":"<code>disabled={true}</code>"},"selected":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>selected={true}</code>"},"variantPlain":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"plain\\"</code>"},"variantSoft":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"soft\\"</code>"},"variantOutlined":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"outlined\\"</code>"},"variantSolid":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"solid\\"</code>"}},"slotDescriptions":{"root":"The component that renders the root."}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=76860)}),_N_E=e.O()}]);