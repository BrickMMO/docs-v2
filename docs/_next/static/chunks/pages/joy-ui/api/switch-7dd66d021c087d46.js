(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[43832],{897717:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return r}}),o(667294);var n=o(543285),i=o(59626),s=JSON.parse('{"props":{"checked":{"type":{"name":"bool"}},"color":{"type":{"name":"union","description":"\'danger\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'<br>&#124;&nbsp;string"},"default":"\'neutral\'","additionalInfo":{"joy-color":true}},"component":{"type":{"name":"elementType"}},"defaultChecked":{"type":{"name":"bool"}},"disabled":{"type":{"name":"bool"}},"endDecorator":{"type":{"name":"union","description":"node<br>&#124;&nbsp;func"}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.ChangeEvent<HTMLInputElement>) => void","describedArgs":["event"]}},"readOnly":{"type":{"name":"bool"}},"required":{"type":{"name":"bool"}},"size":{"type":{"name":"union","description":"\'sm\'<br>&#124;&nbsp;\'md\'<br>&#124;&nbsp;\'lg\'<br>&#124;&nbsp;string"},"default":"\'md\'","additionalInfo":{"joy-size":true}},"slotProps":{"type":{"name":"shape","description":"{ action?: func<br>&#124;&nbsp;object, endDecorator?: func<br>&#124;&nbsp;object, input?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object, startDecorator?: func<br>&#124;&nbsp;object, thumb?: func<br>&#124;&nbsp;object, track?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ action?: elementType, endDecorator?: elementType, input?: elementType, root?: elementType, startDecorator?: elementType, thumb?: elementType, track?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"startDecorator":{"type":{"name":"union","description":"node<br>&#124;&nbsp;func"}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"variant":{"type":{"name":"union","description":"\'outlined\'<br>&#124;&nbsp;\'plain\'<br>&#124;&nbsp;\'soft\'<br>&#124;&nbsp;\'solid\'<br>&#124;&nbsp;string"},"default":"\'solid\'","additionalInfo":{"joy-variant":true}}},"name":"Switch","imports":["import Switch from \'@mui/joy/Switch\';","import { Switch } from \'@mui/joy\';"],"styles":{"classes":[],"globalClasses":{},"name":"MuiSwitch"},"slots":[{"name":"root","description":"The component that renders the root.","default":"\'div\'","class":".MuiSwitch-root"},{"name":"thumb","description":"The component that renders the thumb.","default":"\'span\'","class":".MuiSwitch-thumb"},{"name":"action","description":"The component that renders the action.","default":"\'div\'","class":".MuiSwitch-action"},{"name":"input","description":"The component that renders the input.","default":"\'input\'","class":".MuiSwitch-input"},{"name":"track","description":"The component that renders the track.","default":"\'span\'","class":".MuiSwitch-track"},{"name":"startDecorator","description":"The component that renders the start decorator.","default":"\'span\'","class":".MuiSwitch-startDecorator"},{"name":"endDecorator","description":"The component that renders the end decorator.","default":"\'span\'","class":".MuiSwitch-endDecorator"}],"classes":{"classes":["checked","colorContext","colorDanger","colorPrimary","colorSuccess","colorWarning","disabled","focusVisible","readOnly","sizeLg","sizeMd","sizeSm","variantOutlined","variantSoft","variantSolid"],"globalClasses":{"checked":"Mui-checked","disabled":"Mui-disabled","focusVisible":"Mui-focusVisible","readOnly":"Mui-readOnly"}},"spread":true,"themeDefaultProps":true,"muiName":"JoySwitch","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-joy/src/Switch/Switch.tsx","inheritance":null,"demos":"<ul><li><a href=\\"/joy-ui/react-switch/\\">Switch</a></li></ul>","cssComponent":false}'),a=o(785893);function r(e){var t=e.descriptions,o=e.pageContent;return(0,a.jsx)(n.Z,{descriptions:t,pageContent:o})}r.getInitialProps=function(){var e=o(325843);return{descriptions:(0,i.Z)(e),pageContent:s}}},667858:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/joy-ui/api/switch",function(){return o(897717)}])},325843:function(e,t,o){var n={"./switch.json":393533,"translations/api-docs-joy/switch/switch.json":393533};function i(e){return o(s(e))}function s(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=s,e.exports=i,i.id=325843},393533:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"checked":{"description":"If <code>true</code>, the component is checked."},"color":{"description":"The color of the component. It supports those theme colors that make sense for this component."},"component":{"description":"The component used for the root node. Either a string to use a HTML element or a component."},"defaultChecked":{"description":"The default checked state. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"endDecorator":{"description":"The element that appears at the end of the switch."},"onChange":{"description":"Callback fired when the state is changed.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string). You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean)."}},"readOnly":{"description":"If <code>true</code>, the component is read only."},"required":{"description":"If <code>true</code>, the <code>input</code> element is required."},"size":{"description":"The size of the component."},"slotProps":{"description":"The props used for each slot inside."},"slots":{"description":"The components used for each slot inside."},"startDecorator":{"description":"The element that appears at the end of the switch."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"variant":{"description":"The <a href=\\"https://mui.com/joy-ui/main-features/global-variants/\\">global variant</a> to use."}},"classDescriptions":{"root":{"description":"Class name applied to the root element."},"checked":{"description":"State class applied to {{nodeName}}.","nodeName":"the root <code>checked</code> class"},"disabled":{"description":"State class applied to {{nodeName}}.","nodeName":"the root disabled class"},"action":{"description":"Class name applied to {{nodeName}}.","nodeName":"the action element"},"input":{"description":"Class name applied to {{nodeName}}.","nodeName":"the input element"},"thumb":{"description":"Class name applied to {{nodeName}}.","nodeName":"the input element"},"track":{"description":"Class name applied to {{nodeName}}.","nodeName":"the track element"},"focusVisible":{"description":"State class applied to the root element if the switch has visible focus"},"readOnly":{"description":"Class name applied to the root element if the switch is read-only"},"colorPrimary":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"primary\\"</code>"},"colorDanger":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"danger\\"</code>"},"colorSuccess":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"success\\"</code>"},"colorWarning":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"warning\\"</code>"},"colorContext":{"description":"Class name applied to {{nodeName}} when {{conditions}}.","nodeName":"the root element","conditions":"color inversion is triggered"},"sizeSm":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"sm\\"</code>"},"sizeMd":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"md\\"</code>"},"sizeLg":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"lg\\"</code>"},"variantOutlined":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"outlined\\"</code>"},"variantSoft":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"soft\\"</code>"},"variantSolid":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"solid\\"</code>"},"startDecorator":{"description":"Class name applied to {{nodeName}}.","nodeName":"the startDecorator element"},"endDecorator":{"description":"Class name applied to {{nodeName}}.","nodeName":"the endDecorator element"}},"slotDescriptions":{"root":"The component that renders the root.","thumb":"The component that renders the thumb.","action":"The component that renders the action.","input":"The component that renders the input.","track":"The component that renders the track.","startDecorator":"The component that renders the start decorator.","endDecorator":"The component that renders the end decorator."}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=667858)}),_N_E=e.O()}]);