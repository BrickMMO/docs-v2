(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[88490,38421],{911447:function(e){var t,n;e.exports=(t={772:(e,t,n)=>{let a=n(826).remove,o=/[.*+?^${}()|[\]\\]/g,r=/[a-z0-9_]/i,l=/\s+/;e.exports=function(e,t,n){var i,s;s={insideWords:!1,findAllOccurrences:!1,requireMatchAll:!1},Object.keys(i=(i=n)||{}).forEach(e=>{s[e]=!!i[e]}),n=s;let y=Array.from(e).map(e=>a(e)),c=y.join("");return(t=a(t)).trim().split(l).filter(e=>e.length>0).reduce((e,t)=>{let a,l;let i=t.length,s=!n.insideWords&&r.test(t[0])?"\\b":"",h=RegExp(s+t.replace(o,"\\$&"),"i");if(a=h.exec(c),n.requireMatchAll&&null===a)return c="",[];for(;a;){l=a.index;let t=i-y.slice(l,l+i).join("").length,o=l-y.slice(0,l).join("").length,r=[l+o,l+i+o+t];if(r[0]!==r[1]&&e.push(r),c=c.slice(0,l)+Array(i+1).join(" ")+c.slice(l+i),!n.findAllOccurrences)break;a=h.exec(c)}return e},[]).sort((e,t)=>e[0]-t[0])}},826:e=>{var t={À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",Ấ:"A",Ắ:"A",Ẳ:"A",Ẵ:"A",Ặ:"A",Æ:"AE",Ầ:"A",Ằ:"A",Ȃ:"A",Ç:"C",Ḉ:"C",È:"E",É:"E",Ê:"E",Ë:"E",Ế:"E",Ḗ:"E",Ề:"E",Ḕ:"E",Ḝ:"E",Ȇ:"E",Ì:"I",Í:"I",Î:"I",Ï:"I",Ḯ:"I",Ȋ:"I",Ð:"D",Ñ:"N",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",Ố:"O",Ṍ:"O",Ṓ:"O",Ȏ:"O",Ù:"U",Ú:"U",Û:"U",Ü:"U",Ý:"Y",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",ấ:"a",ắ:"a",ẳ:"a",ẵ:"a",ặ:"a",æ:"ae",ầ:"a",ằ:"a",ȃ:"a",ç:"c",ḉ:"c",è:"e",é:"e",ê:"e",ë:"e",ế:"e",ḗ:"e",ề:"e",ḕ:"e",ḝ:"e",ȇ:"e",ì:"i",í:"i",î:"i",ï:"i",ḯ:"i",ȋ:"i",ð:"d",ñ:"n",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",ố:"o",ṍ:"o",ṓ:"o",ȏ:"o",ù:"u",ú:"u",û:"u",ü:"u",ý:"y",ÿ:"y",Ā:"A",ā:"a",Ă:"A",ă:"a",Ą:"A",ą:"a",Ć:"C",ć:"c",Ĉ:"C",ĉ:"c",Ċ:"C",ċ:"c",Č:"C",č:"c",C̆:"C",c̆:"c",Ď:"D",ď:"d",Đ:"D",đ:"d",Ē:"E",ē:"e",Ĕ:"E",ĕ:"e",Ė:"E",ė:"e",Ę:"E",ę:"e",Ě:"E",ě:"e",Ĝ:"G",Ǵ:"G",ĝ:"g",ǵ:"g",Ğ:"G",ğ:"g",Ġ:"G",ġ:"g",Ģ:"G",ģ:"g",Ĥ:"H",ĥ:"h",Ħ:"H",ħ:"h",Ḫ:"H",ḫ:"h",Ĩ:"I",ĩ:"i",Ī:"I",ī:"i",Ĭ:"I",ĭ:"i",Į:"I",į:"i",İ:"I",ı:"i",Ĳ:"IJ",ĳ:"ij",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",Ḱ:"K",ḱ:"k",K̆:"K",k̆:"k",Ĺ:"L",ĺ:"l",Ļ:"L",ļ:"l",Ľ:"L",ľ:"l",Ŀ:"L",ŀ:"l",Ł:"l",ł:"l",Ḿ:"M",ḿ:"m",M̆:"M",m̆:"m",Ń:"N",ń:"n",Ņ:"N",ņ:"n",Ň:"N",ň:"n",ŉ:"n",N̆:"N",n̆:"n",Ō:"O",ō:"o",Ŏ:"O",ŏ:"o",Ő:"O",ő:"o",Œ:"OE",œ:"oe",P̆:"P",p̆:"p",Ŕ:"R",ŕ:"r",Ŗ:"R",ŗ:"r",Ř:"R",ř:"r",R̆:"R",r̆:"r",Ȓ:"R",ȓ:"r",Ś:"S",ś:"s",Ŝ:"S",ŝ:"s",Ş:"S",Ș:"S",ș:"s",ş:"s",Š:"S",š:"s",Ţ:"T",ţ:"t",ț:"t",Ț:"T",Ť:"T",ť:"t",Ŧ:"T",ŧ:"t",T̆:"T",t̆:"t",Ũ:"U",ũ:"u",Ū:"U",ū:"u",Ŭ:"U",ŭ:"u",Ů:"U",ů:"u",Ű:"U",ű:"u",Ų:"U",ų:"u",Ȗ:"U",ȗ:"u",V̆:"V",v̆:"v",Ŵ:"W",ŵ:"w",Ẃ:"W",ẃ:"w",X̆:"X",x̆:"x",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Y̆:"Y",y̆:"y",Ź:"Z",ź:"z",Ż:"Z",ż:"z",Ž:"Z",ž:"z",ſ:"s",ƒ:"f",Ơ:"O",ơ:"o",Ư:"U",ư:"u",Ǎ:"A",ǎ:"a",Ǐ:"I",ǐ:"i",Ǒ:"O",ǒ:"o",Ǔ:"U",ǔ:"u",Ǖ:"U",ǖ:"u",Ǘ:"U",ǘ:"u",Ǚ:"U",ǚ:"u",Ǜ:"U",ǜ:"u",Ứ:"U",ứ:"u",Ṹ:"U",ṹ:"u",Ǻ:"A",ǻ:"a",Ǽ:"AE",ǽ:"ae",Ǿ:"O",ǿ:"o",Þ:"TH",þ:"th",Ṕ:"P",ṕ:"p",Ṥ:"S",ṥ:"s",X́:"X",x́:"x",Ѓ:"Г",ѓ:"г",Ќ:"К",ќ:"к",A̋:"A",a̋:"a",E̋:"E",e̋:"e",I̋:"I",i̋:"i",Ǹ:"N",ǹ:"n",Ồ:"O",ồ:"o",Ṑ:"O",ṑ:"o",Ừ:"U",ừ:"u",Ẁ:"W",ẁ:"w",Ỳ:"Y",ỳ:"y",Ȁ:"A",ȁ:"a",Ȅ:"E",ȅ:"e",Ȉ:"I",ȉ:"i",Ȍ:"O",ȍ:"o",Ȑ:"R",ȑ:"r",Ȕ:"U",ȕ:"u",B̌:"B",b̌:"b",Č̣:"C",č̣:"c",Ê̌:"E",ê̌:"e",F̌:"F",f̌:"f",Ǧ:"G",ǧ:"g",Ȟ:"H",ȟ:"h",J̌:"J",ǰ:"j",Ǩ:"K",ǩ:"k",M̌:"M",m̌:"m",P̌:"P",p̌:"p",Q̌:"Q",q̌:"q",Ř̩:"R",ř̩:"r",Ṧ:"S",ṧ:"s",V̌:"V",v̌:"v",W̌:"W",w̌:"w",X̌:"X",x̌:"x",Y̌:"Y",y̌:"y",A̧:"A",a̧:"a",B̧:"B",b̧:"b",Ḑ:"D",ḑ:"d",Ȩ:"E",ȩ:"e",Ɛ̧:"E",ɛ̧:"e",Ḩ:"H",ḩ:"h",I̧:"I",i̧:"i",Ɨ̧:"I",ɨ̧:"i",M̧:"M",m̧:"m",O̧:"O",o̧:"o",Q̧:"Q",q̧:"q",U̧:"U",u̧:"u",X̧:"X",x̧:"x",Z̧:"Z",z̧:"z"},n=Object.keys(t).join("|"),a=RegExp(n,"g"),o=RegExp(n,""),r=function(e){return e.replace(a,function(e){return t[e]})};e.exports=r,e.exports.has=function(e){return!!e.match(o)},e.exports.remove=r}},n={},function e(a){var o=n[a];if(void 0!==o)return o.exports;var r=n[a]={exports:{}};return t[a](r,r.exports,e),r.exports}(772))},223370:function(e){var t,n;e.exports=(t={705:e=>{e.exports=function(e,t){let n=[];return 0===t.length?n.push({text:e,highlight:!1}):t[0][0]>0&&n.push({text:e.slice(0,t[0][0]),highlight:!1}),t.forEach((a,o)=>{let r=a[0],l=a[1];n.push({text:e.slice(r,l),highlight:!0}),o===t.length-1?l<e.length&&n.push({text:e.slice(l,e.length),highlight:!1}):l<t[o+1][0]&&n.push({text:e.slice(l,t[o+1][0]),highlight:!1})}),n}}},n={},function e(a){var o=n[a];if(void 0!==o)return o.exports;var r=n[a]={exports:{}};return t[a](r,r.exports,e),r.exports}(705))},497633:function(e,t,n){"use strict";n.r(t),n.d(t,{ClickAwayListener:function(){return a.d}});var a=n(145002)},759216:function(e,t,n){"use strict";n.r(t),n.d(t,{Popper:function(){return a.r},getPopperUtilityClass:function(){return o.i},popperClasses:function(){return o.D}});var a=n(143221),o=n(279543)},873686:function(e,t,n){"use strict";n.d(t,{h:function(){return y}});var a=n(163804),o=n(648611),r=n(667294),l=n(245232),i=n(562475),s=n(881886);function y(e){var t=e.checked,n=e.defaultChecked,y=e.disabled,c=e.onBlur,h=e.onChange,d=e.onFocus,p=e.onFocusVisible,u=e.readOnly,b=e.required,m=(0,l.Z)({controlled:t,default:!!n,name:"Switch",state:"checked"}),f=(0,o.Z)(m,2),g=f[0],v=f[1],T=(0,i.Z)(),S=T.isFocusVisibleRef,x=T.onBlur,k=T.onFocus,L=T.ref,w=r.useState(!1),C=(0,o.Z)(w,2),A=C[0],F=C[1];y&&A&&F(!1),r.useEffect(function(){S.current=A},[A,S]);var I=r.useRef(null),R=(0,s.Z)(L,I);return{checked:g,disabled:!!y,focusVisible:A,getInputProps:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,a.Z)((0,a.Z)({checked:t,defaultChecked:n,disabled:y,readOnly:u,ref:R,required:b,type:"checkbox"},e),{},{onChange:function(t){var n;t.nativeEvent.defaultPrevented||(v(t.target.checked),null==h||h(t),null===(n=e.onChange)||void 0===n||n.call(e,t))},onFocus:function(t){var n;I.current||(I.current=t.currentTarget),k(t),!0===S.current&&(F(!0),null==p||p(t)),null==d||d(t),null===(n=e.onFocus)||void 0===n||n.call(e,t)},onBlur:function(t){var n;x(t),!1===S.current&&F(!1),null==c||c(t),null===(n=e.onBlur)||void 0===n||n.call(e,t)}})},inputRef:R,readOnly:!!u}}},209682:function(e,t,n){"use strict";var a=n(667294).createContext({});t.Z=a},538421:function(e,t,n){"use strict";n.d(t,{f:function(){return L}});var a=n(648611),o=n(80117),r=n(777193),l=n(163804),i=n(667294),s=n(248573),y=n(829624),c=n(177811),h=n(881886),d=n(85643),p=n(14161),u=n(722039),b=n(72357),m=n(149343),f=n(209682),g=n(785893),v=["children","action","color","variant","size","fullWidth","startDecorator","endDecorator","loading","loadingPosition","loadingIndicator","disabled","component","slots","slotProps"],T=function(e){var t=e.color,n=e.disabled,a=e.focusVisible,o=e.focusVisibleClassName,r=e.fullWidth,l=e.size,i=e.variant,s=e.loading,h={root:["root",n&&"disabled",a&&"focusVisible",r&&"fullWidth",i&&"variant".concat((0,c.Z)(i)),t&&"color".concat((0,c.Z)(t)),l&&"size".concat((0,c.Z)(l)),s&&"loading"],startDecorator:["startDecorator"],endDecorator:["endDecorator"],loadingIndicatorCenter:["loadingIndicatorCenter"]},d=(0,y.Z)(h,m.F,{});return a&&o&&(d.root+=" ".concat(o)),d},S=(0,d.Z)("span",{name:"JoyButton",slot:"StartDecorator",overridesResolver:function(e,t){return t.startDecorator}})({"--Icon-margin":"0 0 0 calc(var(--Button-gap) / -2)","--CircularProgress-margin":"0 0 0 calc(var(--Button-gap) / -2)",display:"inherit",marginRight:"var(--Button-gap)"}),x=(0,d.Z)("span",{name:"JoyButton",slot:"EndDecorator",overridesResolver:function(e,t){return t.endDecorator}})({"--Icon-margin":"0 calc(var(--Button-gap) / -2) 0 0","--CircularProgress-margin":"0 calc(var(--Button-gap) / -2) 0 0",display:"inherit",marginLeft:"var(--Button-gap)"}),k=(0,d.Z)("span",{name:"JoyButton",slot:"LoadingCenter",overridesResolver:function(e,t){return t.loadingIndicatorCenter}})(function(e){var t,n,a,o,r=e.theme,i=e.ownerState;return(0,l.Z)({display:"inherit",position:"absolute",left:"50%",transform:"translateX(-50%)",color:null===(t=r.variants[i.variant])||void 0===t?void 0:null===(n=t[i.color])||void 0===n?void 0:n.color},i.disabled&&{color:null===(a=r.variants["".concat(i.variant,"Disabled")])||void 0===a?void 0:null===(o=a[i.color])||void 0===o?void 0:o.color})}),L=function(e){var t,n,a,o,i=e.theme,s=e.ownerState;return[(0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)({"--Icon-margin":"initial","--Icon-color":"neutral"!==s.color||"solid"===s.variant?"currentColor":i.vars.palette.text.icon},"sm"===s.size&&{"--Icon-fontSize":i.vars.fontSize.lg,"--CircularProgress-size":"20px","--CircularProgress-thickness":"2px","--Button-gap":"0.375rem",minHeight:"var(--Button-minHeight, 2rem)",fontSize:i.vars.fontSize.sm,paddingBlock:"var(--Button-paddingBlock, 0.25rem)",paddingInline:"0.75rem"}),"md"===s.size&&{"--Icon-fontSize":i.vars.fontSize.xl,"--CircularProgress-size":"20px","--CircularProgress-thickness":"2px","--Button-gap":"0.5rem",minHeight:"var(--Button-minHeight, 2.25rem)",fontSize:i.vars.fontSize.sm,paddingBlock:"var(--Button-paddingBlock, 0.375rem)",paddingInline:"1rem"}),"lg"===s.size&&{"--Icon-fontSize":i.vars.fontSize.xl2,"--CircularProgress-size":"28px","--CircularProgress-thickness":"4px","--Button-gap":"0.75rem",minHeight:"var(--Button-minHeight, 2.75rem)",fontSize:i.vars.fontSize.md,paddingBlock:"var(--Button-paddingBlock, 0.5rem)",paddingInline:"1.5rem"}),{},{WebkitTapHighlightColor:"transparent",boxSizing:"border-box",borderRadius:"var(--Button-radius, ".concat(i.vars.radius.sm,")"),margin:"var(--Button-margin)",border:"none",backgroundColor:"transparent",cursor:"pointer",display:"inline-flex",alignItems:"center",justifyContent:"center",position:"relative",textDecoration:"none",fontFamily:i.vars.fontFamily.body,fontWeight:i.vars.fontWeight.lg,lineHeight:i.vars.lineHeight.md},s.fullWidth&&{width:"100%"}),{},(0,r.Z)({},i.focus.selector,i.focus.default)),(0,l.Z)((0,l.Z)({},null===(t=i.variants[s.variant])||void 0===t?void 0:t[s.color]),{},(0,r.Z)({"&:hover":{"@media (hover: hover)":null===(n=i.variants["".concat(s.variant,"Hover")])||void 0===n?void 0:n[s.color]},'&:active, &[aria-pressed="true"]':null===(a=i.variants["".concat(s.variant,"Active")])||void 0===a?void 0:a[s.color]},"&.".concat(m.Z.disabled),null===(o=i.variants["".concat(s.variant,"Disabled")])||void 0===o?void 0:o[s.color]),"center"===s.loadingPosition&&(0,r.Z)({},"&.".concat(m.Z.loading),{color:"transparent"}))]},w=(0,d.Z)("button",{name:"JoyButton",slot:"Root",overridesResolver:function(e,t){return t.root}})(L),C=i.forwardRef(function(e,t){var n,r=(0,p.Z)({props:e,name:"JoyButton"}),y=r.children,c=r.action,d=r.color,m=r.variant,L=r.size,C=r.fullWidth,A=r.startDecorator,F=r.endDecorator,I=r.loading,R=void 0!==I&&I,D=r.loadingPosition,P=void 0===D?"center":D,M=r.loadingIndicator,B=r.disabled,O=r.component,Z=r.slots,j=r.slotProps,G=(0,o.Z)(r,v),W=i.useContext(f.Z),E=e.variant||W.variant||(void 0===m?"solid":m),V=e.size||W.size||(void 0===L?"md":L),H=e.color||W.color||(void 0===d?"primary":d),z=null!==(n=e.disabled||e.loading)&&void 0!==n?n:W.disabled||B||R,K=i.useRef(null),N=(0,h.Z)(K,t),U=(0,s.U)((0,l.Z)((0,l.Z)({},r),{},{disabled:z,rootRef:N})),J=U.focusVisible,q=U.setFocusVisible,_=U.getRootProps,X=null!=M?M:(0,g.jsx)(b.Z,{color:H,thickness:{sm:2,md:3,lg:4}[V]||3});i.useImperativeHandle(c,function(){return{focusVisible:function(){var e;q(!0),null===(e=K.current)||void 0===e||e.focus()}}},[q]);var Y=(0,l.Z)((0,l.Z)({},r),{},{color:H,fullWidth:void 0!==C&&C,variant:E,size:V,focusVisible:J,loading:R,loadingPosition:P,disabled:z}),$=T(Y),Q=(0,l.Z)((0,l.Z)({},G),{},{component:O,slots:void 0===Z?{}:Z,slotProps:void 0===j?{}:j}),ee=(0,u.Z)("root",{ref:t,className:$.root,elementType:w,externalForwardedProps:Q,getSlotProps:_,ownerState:Y}),et=(0,a.Z)(ee,2),en=et[0],ea=et[1],eo=(0,u.Z)("startDecorator",{className:$.startDecorator,elementType:S,externalForwardedProps:Q,ownerState:Y}),er=(0,a.Z)(eo,2),el=er[0],ei=er[1],es=(0,u.Z)("endDecorator",{className:$.endDecorator,elementType:x,externalForwardedProps:Q,ownerState:Y}),ey=(0,a.Z)(es,2),ec=ey[0],eh=ey[1],ed=(0,u.Z)("loadingIndicatorCenter",{className:$.loadingIndicatorCenter,elementType:k,externalForwardedProps:Q,ownerState:Y}),ep=(0,a.Z)(ed,2),eu=ep[0],eb=ep[1];return(0,g.jsxs)(en,(0,l.Z)((0,l.Z)({},ea),{},{children:[(A||R&&"start"===P)&&(0,g.jsx)(el,(0,l.Z)((0,l.Z)({},ei),{},{children:R&&"start"===P?X:A})),y,R&&"center"===P&&(0,g.jsx)(eu,(0,l.Z)((0,l.Z)({},eb),{},{children:X})),(F||R&&"end"===P)&&(0,g.jsx)(ec,(0,l.Z)((0,l.Z)({},eh),{},{children:R&&"end"===P?X:F}))]}))});C.muiName="Button",t.Z=C},149343:function(e,t,n){"use strict";n.d(t,{F:function(){return o}});var a=n(912529);function o(e){return(0,a.d6)("MuiButton",e)}var r=(0,a.sI)("MuiButton",["root","colorPrimary","colorNeutral","colorDanger","colorSuccess","colorWarning","colorContext","variantPlain","variantOutlined","variantSoft","variantSolid","focusVisible","disabled","sizeSm","sizeMd","sizeLg","fullWidth","startDecorator","endDecorator","loading","loadingIndicatorCenter"]);t.Z=r},459289:function(e,t,n){"use strict";var a=n(648611),o=n(80117),r=n(777193),l=n(163804),i=n(849088),s=n(667294),y=n(490512),c=n(829624),h=n(248573),d=n(177811),p=n(27262),u=n(14161),b=n(85643),m=n(1613),f=n(297255),g=n(291631),v=n(333584),T=n(722039),S=n(785893),x=["children","className","color","onClick","disabled","size","variant","startDecorator","endDecorator","component","slots","slotProps"],k=function(e){var t=e.disabled,n=e.size,a=e.color,o=e.clickable,r=e.variant,l=e.focusVisible,i={root:["root",t&&"disabled",a&&"color".concat((0,d.Z)(a)),n&&"size".concat((0,d.Z)(n)),r&&"variant".concat((0,d.Z)(r)),o&&"clickable"],action:["action",t&&"disabled",l&&"focusVisible"],label:["label",n&&"label".concat((0,d.Z)(n))],startDecorator:["startDecorator"],endDecorator:["endDecorator"]};return(0,c.Z)(i,g.z,{})},L=(0,b.Z)("div",{name:"JoyChip",slot:"Root",overridesResolver:function(e,t){return t.root}})(function(e){var t,n,a,o,s=e.theme,y=e.ownerState,c=null===(t=s.variants[y.variant])||void 0===t?void 0:t[y.color],h=(0,f.V)({theme:s,ownerState:y},["borderRadius"]).borderRadius;return[(0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)({"--Chip-decoratorChildOffset":"min(calc(var(--Chip-paddingInline) - (var(--_Chip-minHeight) - 2 * var(--variant-borderWidth, 0px) - var(--Chip-decoratorChildHeight)) / 2), var(--Chip-paddingInline))","--Chip-decoratorChildRadius":"max(var(--_Chip-radius) - var(--variant-borderWidth, 0px) - var(--_Chip-paddingBlock), min(var(--_Chip-paddingBlock) + var(--variant-borderWidth, 0px), var(--_Chip-radius) / 2))","--Chip-deleteRadius":"var(--Chip-decoratorChildRadius)","--Chip-deleteSize":"var(--Chip-decoratorChildHeight)","--Avatar-radius":"var(--Chip-decoratorChildRadius)","--Avatar-size":"var(--Chip-decoratorChildHeight)","--Icon-margin":"initial","--Icon-color":"currentColor","--unstable_actionRadius":"var(--_Chip-radius)"},"sm"===y.size&&{"--Chip-paddingInline":"0.375rem","--Chip-decoratorChildHeight":"calc(var(--_Chip-minHeight) - 2 * var(--variant-borderWidth))","--Icon-fontSize":s.vars.fontSize.sm,"--_Chip-minHeight":"var(--Chip-minHeight, 1.25rem)",gap:"3px"}),"md"===y.size&&{"--Chip-paddingInline":"0.5rem","--Chip-decoratorChildHeight":"calc(var(--_Chip-minHeight) - 0.25rem - 2 * var(--variant-borderWidth))","--Icon-fontSize":s.vars.fontSize.md,"--_Chip-minHeight":"var(--Chip-minHeight, 1.5rem)",gap:"0.25rem"}),"lg"===y.size&&{"--Chip-paddingInline":"0.75rem","--Chip-decoratorChildHeight":"calc(var(--_Chip-minHeight) - 0.375rem - 2 * var(--variant-borderWidth))","--Icon-fontSize":s.vars.fontSize.lg,"--_Chip-minHeight":"var(--Chip-minHeight, 1.75rem)",gap:"0.375rem"}),{},{"--_Chip-radius":"var(--Chip-radius, 1.5rem)","--_Chip-paddingBlock":"max((var(--_Chip-minHeight) - 2 * var(--variant-borderWidth, 0px) - var(--Chip-decoratorChildHeight)) / 2, 0px)",minHeight:"var(--_Chip-minHeight)",maxWidth:"max-content",paddingInline:"var(--Chip-paddingInline)",borderRadius:"var(--_Chip-radius)",position:"relative",display:"inline-flex",alignItems:"center",justifyContent:"center",whiteSpace:"nowrap",textDecoration:"none",verticalAlign:"middle",boxSizing:"border-box"},s.typography["body-".concat({sm:"xs",md:"sm",lg:"md"}[y.size])]),{},(0,r.Z)({fontWeight:s.vars.fontWeight.md},"&.".concat(g.Z.disabled),{color:null===(n=s.variants["".concat(y.variant,"Disabled")])||void 0===n?void 0:null===(a=n[y.color])||void 0===a?void 0:a.color}))].concat((0,i.Z)(y.clickable?[{"--variant-borderWidth":"0px",color:null==c?void 0:c.color}]:[(0,l.Z)((0,l.Z)({backgroundColor:s.vars.palette.background.surface},c),{},(0,r.Z)({},"&.".concat(g.Z.disabled),null===(o=s.variants["".concat(y.variant,"Disabled")])||void 0===o?void 0:o[y.color]))]),[void 0!==h&&{"--_Chip-radius":h}])}),w=(0,b.Z)("span",{name:"JoyChip",slot:"Label",overridesResolver:function(e,t){return t.label}})(function(e){var t=e.ownerState;return(0,l.Z)({display:"inline-block",overflow:"hidden",textOverflow:"ellipsis",order:1,minInlineSize:0,flexGrow:1},t.clickable&&{zIndex:1,pointerEvents:"none"})}),C=(0,b.Z)("button",{name:"JoyChip",slot:"Action",overridesResolver:function(e,t){return t.action}})(function(e){var t,n,a,o,i=e.theme,s=e.ownerState;return[(0,r.Z)({"--Icon-color":"neutral"!==s.color||"solid"===s.variant?"currentColor":i.vars.palette.text.icon,position:"absolute",zIndex:0,top:0,left:0,bottom:0,right:0,width:"100%",border:"none",cursor:"pointer",padding:"initial",margin:"initial",backgroundColor:"initial",textDecoration:"none",borderRadius:"inherit"},i.focus.selector,i.focus.default),(0,l.Z)({backgroundColor:i.vars.palette.background.surface},null===(t=i.variants[s.variant])||void 0===t?void 0:t[s.color]),{"&:hover":{"@media (hover: hover)":null===(n=i.variants["".concat(s.variant,"Hover")])||void 0===n?void 0:n[s.color]}},{"&:active":null===(a=i.variants["".concat(s.variant,"Active")])||void 0===a?void 0:a[s.color]},(0,r.Z)({},"&.".concat(g.Z.disabled),null===(o=i.variants["".concat(s.variant,"Disabled")])||void 0===o?void 0:o[s.color])]}),A=(0,b.Z)("span",{name:"JoyChip",slot:"StartDecorator",overridesResolver:function(e,t){return t.startDecorator}})({"--Avatar-marginInlineStart":"calc(var(--Chip-decoratorChildOffset) * -1)","--IconButton-margin":"0 calc(-1 * var(--Chip-paddingInline) / 3) 0 calc(var(--Chip-decoratorChildOffset) * -1)","--Icon-margin":"0 0 0 calc(var(--Chip-paddingInline) / -4)",display:"inherit",order:0,zIndex:1,pointerEvents:"none"}),F=(0,b.Z)("span",{name:"JoyChip",slot:"EndDecorator",overridesResolver:function(e,t){return t.endDecorator}})({"--IconButton-margin":"0 calc(var(--Chip-decoratorChildOffset) * -1) 0 calc(-1 * var(--Chip-paddingInline) / 3)","--Icon-margin":"0 calc(var(--Chip-paddingInline) / -4) 0 0",display:"inherit",order:2,zIndex:1,pointerEvents:"none"}),I=s.forwardRef(function(e,t){var n=(0,u.Z)({props:e,name:"JoyChip"}),r=n.children,i=n.className,c=n.color,d=void 0===c?"neutral":c,b=n.onClick,f=n.disabled,g=void 0!==f&&f,I=n.size,R=n.variant,D=void 0===R?"soft":R,P=n.startDecorator,M=n.endDecorator,B=n.component,O=n.slots,Z=n.slotProps,j=void 0===Z?{}:Z,G=(0,o.Z)(n,x),W=!!b||!!j.action,E=(0,l.Z)((0,l.Z)({},n),{},{disabled:g,size:void 0===I?"md":I,color:d,variant:D,clickable:W,focusVisible:!1}),V="function"==typeof j.action?j.action(E):j.action,H=s.useRef(null),z=(0,h.U)((0,l.Z)((0,l.Z)({},V),{},{disabled:g,rootRef:H})),K=z.focusVisible,N=z.getRootProps;E.focusVisible=K;var U=k(E),J=(0,l.Z)((0,l.Z)({},G),{},{component:B,slots:void 0===O?{}:O,slotProps:j}),q=(0,T.Z)("root",{ref:t,className:(0,y.default)(U.root,i),elementType:L,externalForwardedProps:J,ownerState:E}),_=(0,a.Z)(q,2),X=_[0],Y=_[1],$=(0,T.Z)("label",{className:U.label,elementType:w,externalForwardedProps:J,ownerState:E}),Q=(0,a.Z)($,2),ee=Q[0],et=Q[1],en=(0,p.Z)(et.id),ea=(0,T.Z)("action",{className:U.action,elementType:C,externalForwardedProps:J,ownerState:E,getSlotProps:N,additionalProps:{"aria-labelledby":en,as:null==V?void 0:V.component,onClick:b}}),eo=(0,a.Z)(ea,2),er=eo[0],el=eo[1],ei=(0,T.Z)("startDecorator",{className:U.startDecorator,elementType:A,externalForwardedProps:J,ownerState:E}),es=(0,a.Z)(ei,2),ey=es[0],ec=es[1],eh=(0,T.Z)("endDecorator",{className:U.endDecorator,elementType:F,externalForwardedProps:J,ownerState:E}),ed=(0,a.Z)(eh,2),ep=ed[0],eu=ed[1],eb=s.useMemo(function(){return{disabled:g}},[g]);return(0,S.jsx)(v.Z.Provider,{value:eb,children:(0,S.jsx)(m.Yb,{variant:D,color:d,children:(0,S.jsxs)(X,(0,l.Z)((0,l.Z)({},Y),{},{children:[W&&(0,S.jsx)(er,(0,l.Z)({},el)),(0,S.jsx)(ee,(0,l.Z)((0,l.Z)({},et),{},{id:en,children:r})),P&&(0,S.jsx)(ey,(0,l.Z)((0,l.Z)({},ec),{},{children:P})),M&&(0,S.jsx)(ep,(0,l.Z)((0,l.Z)({},eu),{},{children:M}))]}))})})});t.Z=I},333584:function(e,t,n){"use strict";var a=n(667294).createContext({disabled:void 0,variant:void 0,color:void 0});t.Z=a},291631:function(e,t,n){"use strict";n.d(t,{z:function(){return o}});var a=n(912529);function o(e){return(0,a.d6)("MuiChip",e)}var r=(0,a.sI)("MuiChip",["root","clickable","colorPrimary","colorNeutral","colorDanger","colorSuccess","colorWarning","colorContext","disabled","endDecorator","focusVisible","label","labelSm","labelMd","labelLg","sizeSm","sizeMd","sizeLg","startDecorator","variantPlain","variantSolid","variantSoft","variantOutlined"]);t.Z=r},72357:function(e,t,n){"use strict";var a,o=n(648611),r=n(935715),l=n(163804),i=n(80117),s=n(667294),y=n(490512),c=n(177811),h=n(829624),d=n(370917),p=n(85643),u=n(14161),b=n(722039),m=n(715493),f=n(785893),g=["color","backgroundColor"],v=["children","className","color","size","variant","thickness","determinate","value","component","slots","slotProps"],T=(0,d.keyframes)({"0%":{transform:"rotate(-90deg)"},"100%":{transform:"rotate(270deg)"}}),S=function(e){var t=e.determinate,n=e.color,a=e.variant,o=e.size,r={root:["root",t&&"determinate",n&&"color".concat((0,c.Z)(n)),a&&"variant".concat((0,c.Z)(a)),o&&"size".concat((0,c.Z)(o))],svg:["svg"],track:["track"],progress:["progress"]};return(0,h.Z)(r,m.C,{})};function x(e,t){return"var(--CircularProgress-".concat(e,"Thickness, var(--CircularProgress-thickness, ").concat(t,"))")}var k=(0,p.Z)("span",{name:"JoyCircularProgress",slot:"Root",overridesResolver:function(e,t){return t.root}})(function(e){var t,n,a,o,r=e.ownerState,s=e.theme,y=(null===(t=s.variants[r.variant])||void 0===t?void 0:t[r.color])||{},c=y.color,h=y.backgroundColor,d=(0,i.Z)(y,g);return(0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)({"--Icon-fontSize":"calc(0.4 * var(--_root-size))","--CircularProgress-trackColor":h,"--CircularProgress-progressColor":c,"--CircularProgress-percent":r.value,"--CircularProgress-linecap":"round"},"sm"===r.size&&{"--_root-size":"var(--CircularProgress-size, 24px)","--_track-thickness":x("track","3px"),"--_progress-thickness":x("progress","3px")}),"sm"===r.instanceSize&&{"--CircularProgress-size":"24px"}),"md"===r.size&&{"--_track-thickness":x("track","6px"),"--_progress-thickness":x("progress","6px"),"--_root-size":"var(--CircularProgress-size, 40px)"}),"md"===r.instanceSize&&{"--CircularProgress-size":"40px"}),"lg"===r.size&&{"--_track-thickness":x("track","8px"),"--_progress-thickness":x("progress","8px"),"--_root-size":"var(--CircularProgress-size, 64px)"}),"lg"===r.instanceSize&&{"--CircularProgress-size":"64px"}),r.thickness&&{"--_track-thickness":"".concat(r.thickness,"px"),"--_progress-thickness":"".concat(r.thickness,"px")}),{},{"--_thickness-diff":"calc(var(--_track-thickness) - var(--_progress-thickness))","--_inner-size":"calc(var(--_root-size) - 2 * var(--variant-borderWidth, 0px))","--_outlined-inset":"max(var(--_track-thickness), var(--_progress-thickness))",width:"var(--_root-size)",height:"var(--_root-size)",borderRadius:"var(--_root-size)",margin:"var(--CircularProgress-margin)",boxSizing:"border-box",display:"inline-flex",justifyContent:"center",alignItems:"center",flexShrink:0,position:"relative",color:c},r.children&&{fontFamily:s.vars.fontFamily.body,fontWeight:s.vars.fontWeight.md,fontSize:"calc(0.2 * var(--_root-size))"}),d),"outlined"===r.variant&&{"&:before":(0,l.Z)({content:'""',display:"block",position:"absolute",borderRadius:"inherit",top:"var(--_outlined-inset)",left:"var(--_outlined-inset)",right:"var(--_outlined-inset)",bottom:"var(--_outlined-inset)"},d)}),"soft"===r.variant&&{"--CircularProgress-trackColor":s.variants.soft.neutral.backgroundColor,"--CircularProgress-progressColor":null===(n=s.variants.solid)||void 0===n?void 0:n[r.color].backgroundColor}),"solid"===r.variant&&{"--CircularProgress-trackColor":null===(a=s.variants.softHover)||void 0===a?void 0:a[r.color].backgroundColor,"--CircularProgress-progressColor":null===(o=s.variants.solid)||void 0===o?void 0:o[r.color].backgroundColor})}),L=(0,p.Z)("svg",{name:"JoyCircularProgress",slot:"Svg",overridesResolver:function(e,t){return t.svg}})({width:"inherit",height:"inherit",display:"inherit",boxSizing:"inherit",position:"absolute",top:"calc(-1 * var(--variant-borderWidth, 0px))",left:"calc(-1 * var(--variant-borderWidth, 0px))"}),w=(0,p.Z)("circle",{name:"JoyCircularProgress",slot:"track",overridesResolver:function(e,t){return t.track}})({cx:"50%",cy:"50%",r:"calc(var(--_inner-size) / 2 - var(--_track-thickness) / 2 + min(0px, var(--_thickness-diff) / 2))",fill:"transparent",strokeWidth:"var(--_track-thickness)",stroke:"var(--CircularProgress-trackColor)"}),C=(0,p.Z)("circle",{name:"JoyCircularProgress",slot:"progress",overridesResolver:function(e,t){return t.progress}})({"--_progress-radius":"calc(var(--_inner-size) / 2 - var(--_progress-thickness) / 2 - max(0px, var(--_thickness-diff) / 2))","--_progress-length":"calc(2 * 3.1415926535 * var(--_progress-radius))",cx:"50%",cy:"50%",r:"var(--_progress-radius)",fill:"transparent",strokeWidth:"var(--_progress-thickness)",stroke:"var(--CircularProgress-progressColor)",strokeLinecap:"var(--CircularProgress-linecap, round)",strokeDasharray:"var(--_progress-length)",strokeDashoffset:"calc(var(--_progress-length) - var(--CircularProgress-percent) * var(--_progress-length) / 100)",transformOrigin:"center",transform:"rotate(-90deg)"},function(e){return!e.ownerState.determinate&&(0,d.css)(a||(a=(0,r.Z)(["\n      animation: var(--CircularProgress-circulation, 0.8s linear 0s infinite normal none running)\n        ",";\n    "])),T)}),A=s.forwardRef(function(e,t){var n=(0,u.Z)({props:e,name:"JoyCircularProgress"}),a=n.children,r=n.className,s=n.color,c=n.size,h=n.variant,d=n.thickness,p=n.determinate,m=void 0!==p&&p,g=n.value,T=void 0===g?m?0:25:g,x=n.component,A=n.slots,F=n.slotProps,I=(0,i.Z)(n,v),R=(0,l.Z)((0,l.Z)({},n),{},{color:void 0===s?"primary":s,size:void 0===c?"md":c,variant:void 0===h?"soft":h,thickness:d,value:T,determinate:m,instanceSize:e.size}),D=S(R),P=(0,l.Z)((0,l.Z)({},I),{},{component:x,slots:void 0===A?{}:A,slotProps:void 0===F?{}:F}),M=(0,b.Z)("root",{ref:t,className:(0,y.default)(D.root,r),elementType:k,externalForwardedProps:P,ownerState:R,additionalProps:(0,l.Z)({role:"progressbar",style:{"--CircularProgress-percent":T}},T&&m&&{"aria-valuenow":"number"==typeof T?Math.round(T):Math.round(Number(T||0))})}),B=(0,o.Z)(M,2),O=B[0],Z=B[1],j=(0,b.Z)("svg",{className:D.svg,elementType:L,externalForwardedProps:P,ownerState:R}),G=(0,o.Z)(j,2),W=G[0],E=G[1],V=(0,b.Z)("track",{className:D.track,elementType:w,externalForwardedProps:P,ownerState:R}),H=(0,o.Z)(V,2),z=H[0],K=H[1],N=(0,b.Z)("progress",{className:D.progress,elementType:C,externalForwardedProps:P,ownerState:R}),U=(0,o.Z)(N,2),J=U[0],q=U[1];return(0,f.jsxs)(O,(0,l.Z)((0,l.Z)({},Z),{},{children:[(0,f.jsxs)(W,(0,l.Z)((0,l.Z)({},E),{},{children:[(0,f.jsx)(z,(0,l.Z)({},K)),(0,f.jsx)(J,(0,l.Z)({},q))]})),a]}))});t.Z=A},715493:function(e,t,n){"use strict";n.d(t,{C:function(){return o}});var a=n(912529);function o(e){return(0,a.d6)("MuiCircularProgress",e)}var r=(0,a.sI)("MuiCircularProgress",["root","determinate","svg","track","progress","colorPrimary","colorNeutral","colorDanger","colorSuccess","colorWarning","colorContext","sizeSm","sizeMd","sizeLg","variantPlain","variantOutlined","variantSoft","variantSolid"]);t.Z=r},907313:function(e,t,n){"use strict";n.d(t,{n:function(){return f}});var a=n(648611),o=n(80117),r=n(163804),l=n(667294),i=n(490512),s=n(177811),y=n(829624),c=n(85643),h=n(14161),d=n(257691),p=n(722039),u=n(785893),b=["className","children","component","inset","orientation","role","slots","slotProps"],m=function(e){var t=e.orientation,n=e.inset,a={root:["root",t,n&&"inset".concat((0,s.Z)(n))]};return(0,y.Z)(a,d.V,{})},f=(0,c.Z)("hr",{name:"JoyDivider",slot:"Root",overridesResolver:function(e,t){return t.root}})(function(e){var t=e.theme,n=e.ownerState;return(0,r.Z)((0,r.Z)((0,r.Z)({"--Divider-thickness":"1px","--Divider-lineColor":t.vars.palette.divider},"none"===n.inset&&{"--_Divider-inset":"0px"}),"context"===n.inset&&{"--_Divider-inset":"var(--Divider-inset, 0px)"}),{},{margin:"initial",marginInline:"vertical"===n.orientation?"initial":"var(--_Divider-inset)",marginBlock:"vertical"===n.orientation?"var(--_Divider-inset)":"initial",position:"relative",alignSelf:"stretch",flexShrink:0},n.children?(0,r.Z)((0,r.Z)({"--Divider-gap":t.spacing(1),"--Divider-childPosition":"50%",display:"flex",flexDirection:"vertical"===n.orientation?"column":"row",alignItems:"center",whiteSpace:"nowrap",textAlign:"center",border:0},t.typography["body-sm"]),{},{"&::before, &::after":{position:"relative",inlineSize:"vertical"===n.orientation?"var(--Divider-thickness)":"initial",blockSize:"vertical"===n.orientation?"initial":"var(--Divider-thickness)",backgroundColor:"var(--Divider-lineColor)",content:'""'},"&::before":{marginInlineEnd:"vertical"===n.orientation?"initial":"min(var(--Divider-childPosition) * 999, var(--Divider-gap))",marginBlockEnd:"vertical"===n.orientation?"min(var(--Divider-childPosition) * 999, var(--Divider-gap))":"initial",flexBasis:"var(--Divider-childPosition)"},"&::after":{marginInlineStart:"vertical"===n.orientation?"initial":"min((100% - var(--Divider-childPosition)) * 999, var(--Divider-gap))",marginBlockStart:"vertical"===n.orientation?"min((100% - var(--Divider-childPosition)) * 999, var(--Divider-gap))":"initial",flexBasis:"calc(100% - var(--Divider-childPosition))"}}):{border:"none",listStyle:"none",backgroundColor:"var(--Divider-lineColor)",inlineSize:"vertical"===n.orientation?"var(--Divider-thickness)":"initial",blockSize:"vertical"===n.orientation?"initial":"var(--Divider-thickness)"})}),g=l.forwardRef(function(e,t){var n=(0,h.Z)({props:e,name:"JoyDivider"}),l=n.className,s=n.children,y=n.component,c=void 0===y?null!=s?"div":"hr":y,d=n.inset,g=n.orientation,v=void 0===g?"horizontal":g,T=n.role,S=void 0===T?"hr"!==c?"separator":void 0:T,x=n.slots,k=n.slotProps,L=(0,o.Z)(n,b),w=(0,r.Z)((0,r.Z)({},n),{},{inset:d,role:S,orientation:v,component:c}),C=m(w),A=(0,r.Z)((0,r.Z)({},L),{},{component:c,slots:void 0===x?{}:x,slotProps:void 0===k?{}:k}),F=(0,p.Z)("root",{ref:t,className:(0,i.default)(C.root,l),elementType:f,externalForwardedProps:A,ownerState:w,additionalProps:(0,r.Z)({as:c,role:S},"separator"===S&&"vertical"===v&&{"aria-orientation":"vertical"})}),I=(0,a.Z)(F,2),R=I[0],D=I[1];return(0,u.jsx)(R,(0,r.Z)((0,r.Z)({},D),{},{children:s}))});g.muiName="Divider",t.Z=g},257691:function(e,t,n){"use strict";n.d(t,{V:function(){return o}});var a=n(912529);function o(e){return(0,a.d6)("MuiDivider",e)}var r=(0,a.sI)("MuiDivider",["root","horizontal","vertical","insetContext","insetNone"]);t.Z=r},561445:function(e,t,n){"use strict";var a=n(648611),o=n(80117),r=n(777193),l=n(163804),i=n(667294),s=n(490512),y=n(177811),c=n(27262),h=n(829624),d=n(14161),p=n(85643),u=n(700624),b=n(62717),m=n(11633),f=n(722039),g=n(785893),v=["id","className","component","disabled","required","error","color","size","orientation","slots","slotProps"],T=function(e){var t=e.disabled,n=e.error,a=e.size,o=e.color,r={root:["root",e.orientation,t&&"disabled",n&&"error",o&&"color".concat((0,y.Z)(o)),a&&"size".concat((0,y.Z)(a))]};return(0,h.Z)(r,b.S,{})},S=(0,p.Z)("div",{name:"JoyFormControl",slot:"Root",overridesResolver:function(e,t){return t.root}})(function(e){var t,n,a,o,i,s,y=e.theme,c=e.ownerState;return(0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)({"--unstable_RadioGroup-margin":"0.5rem 0","--FormLabel-alignSelf":"horizontal"===c.orientation?"align-items":"flex-start","--FormLabel-asteriskColor":y.vars.palette.danger[500]},"sm"===c.size&&{"--FormLabel-fontSize":y.vars.fontSize.xs,"--FormLabel-lineHeight":y.vars.lineHeight.xl,"--FormLabel-margin":"horizontal"===c.orientation?"0 0.5rem 0 0":"0 0 0.25rem 0","--FormHelperText-fontSize":y.vars.fontSize.xs,"--FormHelperText-lineHeight":y.vars.lineHeight.xl}),"md"===c.size&&{"--FormLabel-fontSize":y.vars.fontSize.sm,"--FormLabel-lineHeight":y.vars.lineHeight.sm,"--FormLabel-margin":"horizontal"===c.orientation?"0 0.75rem 0 0":"0 0 0.375rem 0","--FormHelperText-fontSize":y.vars.fontSize.sm,"--FormHelperText-lineHeight":y.vars.lineHeight.sm}),"lg"===c.size&&{"--FormLabel-fontSize":y.vars.fontSize.md,"--FormLabel-lineHeight":y.vars.lineHeight.md,"--FormLabel-margin":"horizontal"===c.orientation?"0 1rem 0 0":"0 0 0.5rem 0","--FormHelperText-fontSize":y.vars.fontSize.sm,"--FormHelperText-lineHeight":y.vars.lineHeight.sm}),c.color&&{"--FormHelperText-color":null===(t=y.vars.palette[c.color])||void 0===t?void 0:t[500]}),{},(s={"--FormHelperText-margin":"0.375rem 0 0 0"},(0,r.Z)(s,"&.".concat(b.Z.error),{"--FormHelperText-color":y.vars.palette.danger[500]}),(0,r.Z)(s,"&.".concat(b.Z.disabled),{"--FormLabel-color":null===(n=y.variants.plainDisabled)||void 0===n?void 0:null===(a=n[c.color||"neutral"])||void 0===a?void 0:a.color,"--FormHelperText-color":null===(o=y.variants.plainDisabled)||void 0===o?void 0:null===(i=o[c.color||"neutral"])||void 0===i?void 0:i.color}),(0,r.Z)(s,"display","flex"),(0,r.Z)(s,"position","relative"),(0,r.Z)(s,"flexDirection","horizontal"===c.orientation?"row":"column"),s),"horizontal"===c.orientation&&(0,r.Z)({},"& > label ~ .".concat(m.Z.root),{"--unstable_Switch-margin":"0 0 0 auto"}))}),x=i.forwardRef(function(e,t){var n,r=(0,d.Z)({props:e,name:"JoyFormControl"}),y=r.id,h=r.className,p=r.component,b=void 0===p?"div":p,m=r.disabled,x=void 0!==m&&m,k=r.required,L=void 0!==k&&k,w=r.error,C=void 0!==w&&w,A=r.color,F=r.size,I=void 0===F?"md":F,R=r.orientation,D=r.slots,P=r.slotProps,M=(0,o.Z)(r,v),B=(0,c.Z)(y),O=i.useState(null),Z=(0,a.Z)(O,2),j=Z[0],G=Z[1],W=(0,l.Z)((0,l.Z)({},r),{},{id:B,component:b,color:A,disabled:x,error:C,required:L,size:I,orientation:void 0===R?"vertical":R}),E=T(W),V=(0,f.Z)("root",{ref:t,className:(0,s.default)(E.root,h),elementType:S,externalForwardedProps:(0,l.Z)((0,l.Z)({},M),{},{component:b,slots:void 0===D?{}:D,slotProps:void 0===P?{}:P}),ownerState:W}),H=(0,a.Z)(V,2),z=H[0],K=H[1],N=i.useMemo(function(){return{disabled:x,required:L,error:C,color:A,size:I,htmlFor:B,labelId:"".concat(B,"-label"),"aria-describedby":j?"".concat(B,"-helper-text"):void 0,setHelperText:G,registerEffect:n}},[A,x,C,j,B,n,L,I]);return(0,g.jsx)(u.Z.Provider,{value:N,children:(0,g.jsx)(z,(0,l.Z)({},K))})});t.Z=x},62717:function(e,t,n){"use strict";n.d(t,{S:function(){return o}});var a=n(912529);function o(e){return(0,a.d6)("MuiFormControl",e)}var r=(0,a.sI)("MuiFormControl",["root","error","disabled","colorPrimary","colorNeutral","colorDanger","colorSuccess","colorWarning","sizeSm","sizeMd","sizeLg","horizontal","vertical"]);t.Z=r},681314:function(e,t,n){"use strict";var a=n(648611),o=n(163804),r=n(80117),l=n(777193),i=n(667294),s=n(881886),y=n(829624),c=n(85643),h=n(14161),d=n(301435),p=n(700624),u=n(62717),b=n(585779),m=n(722039),f=n(785893),g=["children","component","slots","slotProps"],v=(0,c.Z)("div",{name:"JoyFormHelperText",slot:"Root",overridesResolver:function(e,t){return t.root}})(function(e){var t,n=e.theme;return t={"--Icon-fontSize":"calc(var(--FormHelperText-lineHeight) * 1em)",display:"flex",alignItems:"center",gap:"2px",fontFamily:n.vars.fontFamily.body,fontSize:"var(--FormHelperText-fontSize, ".concat(n.vars.fontSize.sm,")"),lineHeight:"var(--FormHelperText-lineHeight, ".concat(n.vars.lineHeight.sm,")"),color:"var(--FormHelperText-color, ".concat(n.vars.palette.text.tertiary,")"),margin:"var(--FormHelperText-margin, 0px)"},(0,l.Z)(t,".".concat(b.Z.root," + &"),{"--FormHelperText-margin":"0px"}),(0,l.Z)(t,".".concat(u.Z.error," &"),{"--Icon-color":"currentColor"}),t}),T=i.forwardRef(function(e,t){var n=(0,h.Z)({props:e,name:"JoyFormHelperText"}),l=n.children,c=n.component,u=n.slots,b=n.slotProps,T=(0,r.Z)(n,g),S=i.useRef(null),x=(0,s.Z)(S,t),k=i.useContext(p.Z),L=null==k?void 0:k.setHelperText;i.useEffect(function(){return null==L||L(S.current),function(){null==L||L(null)}},[L]);var w=(0,y.Z)({root:["root"]},d.p,{}),C=(0,o.Z)((0,o.Z)({},T),{},{component:c,slots:void 0===u?{}:u,slotProps:void 0===b?{}:b}),A=(0,m.Z)("root",{ref:x,elementType:v,externalForwardedProps:C,ownerState:n,additionalProps:{as:c,id:null==k?void 0:k["aria-describedby"]},className:w.root}),F=(0,a.Z)(A,2),I=F[0],R=F[1];return(0,f.jsx)(I,(0,o.Z)((0,o.Z)({},R),{},{children:l}))});t.Z=T},301435:function(e,t,n){"use strict";n.d(t,{p:function(){return o}});var a=n(912529);function o(e){return(0,a.d6)("MuiFormHelperText",e)}var r=(0,a.sI)("MuiFormHelperText",["root"]);t.Z=r},272879:function(e,t,n){"use strict";var a=n(648611),o=n(163804),r=n(80117),l=n(667294),i=n(829624),s=n(85643),y=n(14161),c=n(722039),h=n(585779),d=n(700624),p=n(785893),u=["children","component","slots","slotProps"],b=(0,s.Z)("label",{name:"JoyFormLabel",slot:"Root",overridesResolver:function(e,t){return t.root}})(function(e){var t=e.theme;return{"--Icon-fontSize":"calc(var(--FormLabel-lineHeight) * 1em)",WebkitTapHighlightColor:"transparent",alignSelf:"var(--FormLabel-alignSelf)",display:"flex",gap:"2px",alignItems:"center",flexWrap:"wrap",userSelect:"none",fontFamily:t.vars.fontFamily.body,fontSize:"var(--FormLabel-fontSize, ".concat(t.vars.fontSize.sm,")"),fontWeight:t.vars.fontWeight.md,lineHeight:"var(--FormLabel-lineHeight, ".concat(t.vars.lineHeight.sm,")"),color:"var(--FormLabel-color, ".concat(t.vars.palette.text.primary,")"),margin:"var(--FormLabel-margin, 0px)"}}),m=(0,s.Z)("span",{name:"JoyFormLabel",slot:"Asterisk",overridesResolver:function(e,t){return t.asterisk}})({color:"var(--FormLabel-asteriskColor)"}),f=l.forwardRef(function(e,t){var n,s,f=(0,y.Z)({props:e,name:"JoyFormLabel"}),g=f.children,v=f.component,T=f.slots,S=f.slotProps,x=(0,r.Z)(f,u),k=l.useContext(d.Z),L=null!==(n=null!==(s=e.required)&&void 0!==s?s:null==k?void 0:k.required)&&void 0!==n&&n,w=(0,o.Z)((0,o.Z)({},f),{},{required:L}),C=(0,i.Z)({root:["root"],asterisk:["asterisk"]},h.B,{}),A=(0,o.Z)((0,o.Z)({},x),{},{component:void 0===v?"label":v,slots:void 0===T?{}:T,slotProps:void 0===S?{}:S}),F=(0,c.Z)("root",{additionalProps:{htmlFor:null==k?void 0:k.htmlFor,id:null==k?void 0:k.labelId},ref:t,className:C.root,elementType:b,externalForwardedProps:A,ownerState:w}),I=(0,a.Z)(F,2),R=I[0],D=I[1],P=(0,c.Z)("asterisk",{additionalProps:{"aria-hidden":!0},className:C.asterisk,elementType:m,externalForwardedProps:A,ownerState:w}),M=(0,a.Z)(P,2),B=M[0],O=M[1];return(0,p.jsxs)(R,(0,o.Z)((0,o.Z)({},D),{},{children:[g,L&&(0,p.jsxs)(B,(0,o.Z)((0,o.Z)({},O),{},{children:[" ","*"]}))]}))});t.Z=f},585779:function(e,t,n){"use strict";n.d(t,{B:function(){return o}});var a=n(912529);function o(e){return(0,a.d6)("MuiFormLabel",e)}var r=(0,a.sI)("MuiFormLabel",["root","asterisk"]);t.Z=r},851077:function(e,t,n){"use strict";var a=n(648611),o=n(80117),r=n(163804),l=n(667294),i=n(490512),s=n(177811),y=n(245232),c=n(27262),h=n(829624),d=n(85643),p=n(14161),u=n(73236),b=n(7676),m=n(700624),f=n(722039),g=n(785893),v=["className","component","children","name","defaultValue","disableIcon","overlay","value","onChange","color","variant","size","orientation","role","slots","slotProps"],T=function(e){var t=e.orientation,n=e.size,a=e.variant,o=e.color,r={root:["root",t,a&&"variant".concat((0,s.Z)(a)),o&&"color".concat((0,s.Z)(o)),n&&"size".concat((0,s.Z)(n))]};return(0,h.Z)(r,u.s,{})},S=(0,d.Z)("div",{name:"JoyRadioGroup",slot:"Root",overridesResolver:function(e,t){return t.root}})(function(e){var t,n=e.ownerState,a=e.theme;return(0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)({},"sm"===n.size&&{"--RadioGroup-gap":"0.625rem"}),"md"===n.size&&{"--RadioGroup-gap":"0.875rem"}),"lg"===n.size&&{"--RadioGroup-gap":"1.25rem"}),{},{display:"flex",margin:"var(--unstable_RadioGroup-margin)",flexDirection:"horizontal"===n.orientation?"row":"column",borderRadius:a.vars.radius.sm},null===(t=a.variants[n.variant])||void 0===t?void 0:t[n.color])}),x=l.forwardRef(function(e,t){var n=(0,p.Z)({props:e,name:"JoyRadioGroup"}),s=n.className,h=n.component,d=n.children,u=n.name,x=n.defaultValue,k=n.disableIcon,L=void 0!==k&&k,w=n.overlay,C=n.value,A=n.onChange,F=n.color,I=n.variant,R=n.size,D=n.orientation,P=void 0===D?"vertical":D,M=n.role,B=void 0===M?"radiogroup":M,O=n.slots,Z=n.slotProps,j=(0,o.Z)(n,v),G=(0,y.Z)({controlled:C,default:x,name:"RadioGroup"}),W=(0,a.Z)(G,2),E=W[0],V=W[1],H=l.useContext(m.Z),z=e.size||(null==H?void 0:H.size)||(void 0===R?"md":R),K=(0,r.Z)({orientation:P,size:z,variant:void 0===I?"plain":I,color:void 0===F?"neutral":F,role:B},n),N=T(K),U=(0,c.Z)(u),J=l.useMemo(function(){return{disableIcon:L,overlay:w,orientation:P,size:z,name:U,value:E,onChange:function(e){V(e.target.value),A&&A(e)}}},[L,U,A,w,P,V,z,E]),q=(0,f.Z)("root",{ref:t,className:(0,i.default)(N.root,s),elementType:S,externalForwardedProps:(0,r.Z)((0,r.Z)({},j),{},{component:h,slots:void 0===O?{}:O,slotProps:void 0===Z?{}:Z}),ownerState:K,additionalProps:{as:h,role:B,id:null==H?void 0:H.htmlFor,"aria-labelledby":null==H?void 0:H.labelId,"aria-describedby":null==H?void 0:H["aria-describedby"]}}),_=(0,a.Z)(q,2),X=_[0],Y=_[1];return(0,g.jsx)(b.Z.Provider,{value:J,children:(0,g.jsx)(X,(0,r.Z)((0,r.Z)({},Y),{},{children:(0,g.jsx)(m.Z.Provider,{value:void 0,children:l.Children.map(d,function(e,t){return l.isValidElement(e)?l.cloneElement(e,(0,r.Z)((0,r.Z)((0,r.Z)({},0===t&&{"data-first-child":""}),t===l.Children.count(d)-1&&{"data-last-child":""}),{},{"data-parent":"RadioGroup"})):e})})}))})});t.Z=x},73236:function(e,t,n){"use strict";n.d(t,{s:function(){return o}});var a=n(912529);function o(e){return(0,a.d6)("MuiRadioGroup",e)}var r=(0,a.sI)("MuiRadioGroup",["root","colorPrimary","colorNeutral","colorDanger","colorSuccess","colorWarning","variantPlain","variantOutlined","variantSoft","variantSolid","sizeSm","sizeMd","sizeLg","horizontal","vertical"]);t.Z=r},986963:function(e,t,n){"use strict";var a=n(648611),o=n(80117),r=n(849088),l=n(777193),i=n(163804),s=n(667294),y=n(177811),c=n(27262),h=n(829624),d=n(873686),p=n(85643),u=n(14161),b=n(722039),m=n(37717),f=n(7676),g=n(964928),v=n(700624),T=n(785893),S=["checked","checkedIcon","defaultChecked","disabled","disableIcon","overlay","label","id","name","onBlur","onChange","onFocus","onFocusVisible","readOnly","required","color","variant","size","uncheckedIcon","value","component","slots","slotProps"],x=function(e){var t=e.checked,n=e.disabled,a=e.disableIcon,o=e.focusVisible,r=e.color,l=e.variant,i=e.size,s={root:["root",t&&"checked",n&&"disabled",o&&"focusVisible",l&&"variant".concat((0,y.Z)(l)),r&&"color".concat((0,y.Z)(r)),i&&"size".concat((0,y.Z)(i))],radio:["radio",t&&"checked",n&&"disabled"],icon:["icon"],action:["action",t&&"checked",a&&n&&"disabled",o&&"focusVisible"],input:["input"],label:["label"]};return(0,h.Z)(s,m.l,{})},k=(0,p.Z)("span",{name:"JoyRadio",slot:"Root",overridesResolver:function(e,t){return t.root}})(function(e){var t,n,a,o,r,s,y=e.ownerState,c=e.theme;return[(0,i.Z)((0,i.Z)((0,i.Z)((0,i.Z)((0,i.Z)({"--Icon-fontSize":"var(--Radio-size)","--Icon-color":"currentColor"},"sm"===y.size&&{"--Radio-size":"1rem","& ~ *":{"--FormHelperText-margin":"0 0 0 1.5rem"},fontSize:c.vars.fontSize.sm,gap:"var(--Radio-gap, 0.5rem)"}),"md"===y.size&&{"--Radio-size":"1.25rem","& ~ *":{"--FormHelperText-margin":"0.25rem 0 0 1.875rem"},fontSize:c.vars.fontSize.md,gap:"var(--Radio-gap, 0.625rem)"}),"lg"===y.size&&{"--Radio-size":"1.5rem","& ~ *":{"--FormHelperText-margin":"0.375rem 0 0 2.25rem"},fontSize:c.vars.fontSize.lg,gap:"var(--Radio-gap, 0.75rem)"}),{},(0,l.Z)({position:y.overlay?"initial":"relative",display:"inline-flex",boxSizing:"border-box",minWidth:0,fontFamily:c.vars.fontFamily.body,lineHeight:"var(--Radio-size)",color:c.vars.palette.text.primary},"&.".concat(m.Z.disabled),{color:null===(t=c.variants.plainDisabled)||void 0===t?void 0:null===(n=t[y.color])||void 0===n?void 0:n.color}),y.disableIcon&&(0,l.Z)({color:null===(a=c.variants[y.variant])||void 0===a?void 0:null===(o=a[y.color])||void 0===o?void 0:o.color},"&.".concat(m.Z.disabled),{color:null===(r=c.variants["".concat(y.variant,"Disabled")])||void 0===r?void 0:null===(s=r[y.color])||void 0===s?void 0:s.color})),"RadioGroup"===y["data-parent"]&&void 0===y["data-first-child"]&&{marginInlineStart:"horizontal"===y.orientation?"var(--RadioGroup-gap)":void 0,marginBlockStart:"horizontal"===y.orientation?void 0:"var(--RadioGroup-gap)"})]}),L=(0,p.Z)("span",{name:"JoyRadio",slot:"Radio",overridesResolver:function(e,t){return t.radio}})(function(e){var t,n,a,o,s,y=e.ownerState,c=e.theme,h=null===(t=c.variants["".concat(y.variant)])||void 0===t?void 0:t[y.color];return[(0,i.Z)((0,i.Z)({"--Icon-color":"neutral"!==y.color||"solid"===y.variant?"currentColor":c.vars.palette.text.icon,margin:0,boxSizing:"border-box",width:"var(--Radio-size)",height:"var(--Radio-size)",borderRadius:"var(--Radio-size)",display:"inline-flex",justifyContent:"center",alignItems:"center",flexShrink:0},y.disableIcon&&{display:"contents"}),{},(0,l.Z)({},"&.".concat(m.Z.checked),{"--Icon-color":"currentColor"}))].concat((0,r.Z)(y.disableIcon?[]:[(0,i.Z)((0,i.Z)({},h),{},{backgroundColor:null!==(n=null==h?void 0:h.backgroundColor)&&void 0!==n?n:c.vars.palette.background.surface}),{"&:hover":{"@media (hover: hover)":null===(a=c.variants["".concat(y.variant,"Hover")])||void 0===a?void 0:a[y.color]}},{"&:active":null===(o=c.variants["".concat(y.variant,"Active")])||void 0===o?void 0:o[y.color]},(0,l.Z)({},"&.".concat(m.Z.disabled),null===(s=c.variants["".concat(y.variant,"Disabled")])||void 0===s?void 0:s[y.color])]))}),w=(0,p.Z)("span",{name:"JoyRadio",slot:"Action",overridesResolver:function(e,t){return t.action}})(function(e){var t,n,a,o,i=e.theme,s=e.ownerState;return[(0,l.Z)({position:"absolute",textAlign:"left",borderRadius:"var(--Radio-actionRadius, ".concat(s.overlay?"var(--unstable_actionRadius, inherit)":"inherit",")"),top:"calc(-1 * var(--variant-borderWidth, 0px))",left:"calc(-1 * var(--variant-borderWidth, 0px))",bottom:"calc(-1 * var(--variant-borderWidth, 0px))",right:"calc(-1 * var(--variant-borderWidth, 0px))",zIndex:1},i.focus.selector,i.focus.default)].concat((0,r.Z)(s.disableIcon?[null===(t=i.variants[s.variant])||void 0===t?void 0:t[s.color],{"&:hover":{"@media (hover: hover)":null===(n=i.variants["".concat(s.variant,"Hover")])||void 0===n?void 0:n[s.color]}},{"&:active":null===(a=i.variants["".concat(s.variant,"Active")])||void 0===a?void 0:a[s.color]},(0,l.Z)({},"&.".concat(m.Z.disabled),null===(o=i.variants["".concat(s.variant,"Disabled")])||void 0===o?void 0:o[s.color])]:[]))}),C=(0,p.Z)("input",{name:"JoyRadio",slot:"Input",overridesResolver:function(e,t){return t.input}})(function(){return{margin:0,opacity:0,position:"absolute",height:"100%",width:"100%",cursor:"pointer"}}),A=(0,p.Z)("label",{name:"JoyRadio",slot:"Label",overridesResolver:function(e,t){return t.label}})(function(e){var t=e.ownerState;return(0,i.Z)({flex:1,minWidth:0},t.disableIcon&&{zIndex:1,pointerEvents:"none"})}),F=(0,p.Z)("span",{name:"JoyRadio",slot:"Icon",overridesResolver:function(e,t){return t.icon}})(function(e){return{width:"calc(var(--Radio-size) / 2)",height:"calc(var(--Radio-size) / 2)",borderRadius:"inherit",color:"inherit",backgroundColor:"currentColor",transform:e.ownerState.checked?"scale(1)":"scale(0)"}}),I=s.forwardRef(function(e,t){var n,r,l,y,h,p,m,I,R=(0,u.Z)({props:e,name:"JoyRadio"}),D=R.checked,P=R.checkedIcon,M=R.defaultChecked,B=R.disabled,O=R.disableIcon,Z=R.overlay,j=R.label,G=R.id,W=R.name,E=R.onBlur,V=R.onChange,H=R.onFocus,z=R.onFocusVisible,K=R.readOnly,N=R.required,U=R.color,J=R.variant,q=R.size,_=R.uncheckedIcon,X=R.value,Y=R.component,$=R.slots,Q=R.slotProps,ee=(0,o.Z)(R,S),et=s.useContext(v.Z),en=(0,c.Z)(null!=G?G:null==et?void 0:et.htmlFor),ea=s.useContext(f.Z),eo=null!=et&&et.error?"danger":null!==(r=null!==(l=null!==(y=e.color)&&void 0!==y?y:null==et?void 0:et.color)&&void 0!==l?l:U)&&void 0!==r?r:"primary",er=null!=et&&et.error?"danger":null!==(h=null!==(p=null!==(m=e.color)&&void 0!==m?m:null==et?void 0:et.color)&&void 0!==p?p:U)&&void 0!==h?h:"neutral",el=e.size||(null==et?void 0:et.size)||(null==ea?void 0:ea.size)||(void 0===q?"md":q),ei=e.name||(null==ea?void 0:ea.name)||W,es=e.disableIcon||(null==ea?void 0:ea.disableIcon)||void 0!==O&&O,ey=e.overlay||(null==ea?void 0:ea.overlay)||void 0!==Z&&Z,ec={checked:void 0===D&&X?(n=null==ea?void 0:ea.value,"object"==typeof X&&null!==X?n===X:String(n)===String(X)):D,defaultChecked:M,disabled:null!=B?B:null==et?void 0:et.disabled,onBlur:E,onChange:V,onFocus:H,onFocusVisible:z},eh=(0,d.h)(ec),ed=eh.getInputProps,ep=eh.checked,eu=eh.disabled,eb=eh.focusVisible,em=null!==(I=e.color)&&void 0!==I?I:ep?eo:er,ef=(0,i.Z)((0,i.Z)({},R),{},{checked:ep,disabled:eu,focusVisible:eb,color:em,variant:void 0===J?"outlined":J,size:el,disableIcon:es,overlay:ey,orientation:null==ea?void 0:ea.orientation}),eg=x(ef),ev=(0,i.Z)((0,i.Z)({},ee),{},{component:Y,slots:void 0===$?{}:$,slotProps:void 0===Q?{}:Q}),eT=(0,b.Z)("root",{ref:t,className:eg.root,elementType:k,externalForwardedProps:ev,ownerState:ef}),eS=(0,a.Z)(eT,2),ex=eS[0],ek=eS[1],eL=(0,b.Z)("radio",{className:eg.radio,elementType:L,externalForwardedProps:ev,ownerState:ef}),ew=(0,a.Z)(eL,2),eC=ew[0],eA=ew[1],eF=(0,b.Z)("icon",{className:eg.icon,elementType:F,externalForwardedProps:ev,ownerState:ef}),eI=(0,a.Z)(eF,2),eR=eI[0],eD=eI[1],eP=(0,b.Z)("action",{className:eg.action,elementType:w,externalForwardedProps:ev,ownerState:ef}),eM=(0,a.Z)(eP,2),eB=eM[0],eO=eM[1],eZ=(0,b.Z)("input",{additionalProps:{type:"radio",id:en,name:ei,readOnly:K,required:null!=N?N:null==et?void 0:et.required,value:String(X),"aria-describedby":null==et?void 0:et["aria-describedby"]},className:eg.input,elementType:C,externalForwardedProps:ev,getSlotProps:function(){return ed({onChange:null==ea?void 0:ea.onChange})},ownerState:ef}),ej=(0,a.Z)(eZ,2),eG=ej[0],eW=ej[1],eE=(0,b.Z)("label",{additionalProps:{htmlFor:en},className:eg.label,elementType:A,externalForwardedProps:ev,ownerState:ef}),eV=(0,a.Z)(eE,2),eH=eV[0],ez=eV[1];return(0,T.jsxs)(ex,(0,i.Z)((0,i.Z)({},ek),{},{children:[(0,T.jsxs)(eC,(0,i.Z)((0,i.Z)({},eA),{},{children:[ep&&!es&&P,!ep&&!es&&_,!P&&!_&&!es&&(0,T.jsx)(eR,(0,i.Z)({},eD)),(0,T.jsx)(eB,(0,i.Z)((0,i.Z)({},eO),{},{children:(0,T.jsx)(eG,(0,i.Z)({},eW))}))]})),j&&(0,T.jsx)(eH,(0,i.Z)((0,i.Z)({},ez),{},{children:(0,T.jsx)(g.FR.Provider,{value:!0,children:j})}))]}))});t.Z=I},37717:function(e,t,n){"use strict";n.d(t,{l:function(){return o}});var a=n(912529);function o(e){return(0,a.d6)("MuiRadio",e)}var r=(0,a.sI)("MuiRadio",["root","radio","icon","action","input","label","checked","disabled","focusVisible","colorPrimary","colorDanger","colorNeutral","colorSuccess","colorWarning","colorContext","sizeSm","sizeMd","sizeLg","variantOutlined","variantSoft","variantSolid"]);t.Z=r},291350:function(e,t,n){"use strict";var a=n(648611),o=n(80117),r=n(163804),l=n(667294),i=n(490512),s=n(829624),y=n(177811),c=n(830139),h=n(14161),d=n(598571),p=n(85643),u=n(297255),b=n(834610),m=n(722039),f=n(785893),g=["className","color","component","variant","invertedColors","slots","slotProps"],v=function(e){var t=e.variant,n=e.color,a={root:["root",t&&"variant".concat((0,y.Z)(t)),n&&"color".concat((0,y.Z)(n))]};return(0,s.Z)(a,b.G,{})},T=(0,p.Z)("div",{name:"JoySheet",slot:"Root",overridesResolver:function(e,t){return t.root}})(function(e){var t,n,a=e.theme,o=e.ownerState,l=null===(t=a.variants[o.variant])||void 0===t?void 0:t[o.color],i=(0,u.V)({theme:a,ownerState:o},["borderRadius","bgcolor","backgroundColor","background"]),s=i.borderRadius,y=i.bgcolor,h=i.backgroundColor,p=i.background,b=(0,c.DW)(a,"palette.".concat(y))||y||(0,c.DW)(a,"palette.".concat(h))||h||p||(null==l?void 0:l.backgroundColor)||(null==l?void 0:l.background)||a.vars.palette.background.surface;return[(0,r.Z)((0,r.Z)({"--Icon-color":"neutral"!==o.color||"solid"===o.variant?"currentColor":a.vars.palette.text.icon,"--ListItem-stickyBackground":"transparent"===b?"initial":b,"--Sheet-background":"transparent"===b?"initial":b},void 0!==s&&{"--List-radius":"calc(".concat(s," - var(--variant-borderWidth, 0px))"),"--unstable_actionRadius":"calc(".concat(s," - var(--variant-borderWidth, 0px))")}),{},{backgroundColor:a.vars.palette.background.surface,position:"relative"}),(0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)({},a.typography["body-md"]),"solid"===o.variant&&o.color&&o.invertedColors&&(0,d.Qr)(o.color)(a)),"soft"===o.variant&&o.color&&o.invertedColors&&(0,d.Ev)(o.color)(a)),null===(n=a.variants[o.variant])||void 0===n?void 0:n[o.color]),l)]}),S=l.forwardRef(function(e,t){var n=(0,h.Z)({props:e,name:"JoySheet"}),l=n.className,s=n.color,y=n.component,c=void 0===y?"div":y,d=n.variant,p=n.invertedColors,u=n.slots,b=n.slotProps,S=(0,o.Z)(n,g),x=(0,r.Z)((0,r.Z)({},n),{},{color:void 0===s?"neutral":s,component:c,invertedColors:void 0!==p&&p,variant:void 0===d?"plain":d}),k=v(x),L=(0,r.Z)((0,r.Z)({},S),{},{component:c,slots:void 0===u?{}:u,slotProps:void 0===b?{}:b}),w=(0,m.Z)("root",{ref:t,className:(0,i.default)(k.root,l),elementType:T,externalForwardedProps:L,ownerState:x}),C=(0,a.Z)(w,2),A=C[0],F=C[1];return(0,f.jsx)(A,(0,r.Z)({},F))});t.Z=S},834610:function(e,t,n){"use strict";n.d(t,{G:function(){return o}});var a=n(912529);function o(e){return(0,a.d6)("MuiSheet",e)}var r=(0,a.sI)("MuiSheet",["root","colorPrimary","colorNeutral","colorDanger","colorSuccess","colorWarning","colorContext","variantPlain","variantOutlined","variantSoft","variantSolid"]);t.Z=r},381733:function(e,t,n){"use strict";var a=n(648611),o=n(80117),r=n(777193),l=n(163804),i=n(667294),s=n(177811),y=n(829624),c=n(873686),h=n(85643),d=n(14161),p=n(722039),u=n(11633),b=n(700624),m=n(785893),f=["checked","defaultChecked","disabled","onBlur","onChange","onFocus","onFocusVisible","readOnly","required","id","color","variant","size","startDecorator","endDecorator","component","slots","slotProps"],g=function(e){var t=e.checked,n=e.disabled,a=e.focusVisible,o=e.readOnly,r=e.color,l=e.variant,i=e.size,c={root:["root",t&&"checked",n&&"disabled",a&&"focusVisible",o&&"readOnly",l&&"variant".concat((0,s.Z)(l)),r&&"color".concat((0,s.Z)(r)),i&&"size".concat((0,s.Z)(i))],thumb:["thumb",t&&"checked"],track:["track",t&&"checked"],action:["action",a&&"focusVisible"],input:["input"],startDecorator:["startDecorator"],endDecorator:["endDecorator"]};return(0,y.Z)(c,u.H,{})},v=function(e){var t=e.theme,n=e.ownerState;return function(){var e,a,o,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},l=(null===(e=t.variants["".concat(n.variant).concat(r.state||"")])||void 0===e?void 0:e[n.color])||{};return{"--Switch-trackBackground":null!==(a=l.backgroundColor)&&void 0!==a?a:t.vars.palette.background.surface,"--Switch-trackColor":l.color,"--Switch-trackBorderColor":"outlined"===n.variant?l.borderColor:"currentColor","--Switch-thumbBackground":l.color,"--Switch-thumbColor":null!==(o=l.backgroundColor)&&void 0!==o?o:t.vars.palette.background.surface}}},T=(0,h.Z)("div",{name:"JoySwitch",slot:"Root",overridesResolver:function(e,t){return t.root}})(function(e){var t,n,a,o=e.theme,i=e.ownerState,s=v({theme:o,ownerState:i});return(0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)({"--Icon-color":"currentColor","--variant-borderWidth":null===(t=o.variants[i.variant])||void 0===t?void 0:null===(n=t[i.color])||void 0===n?void 0:n["--variant-borderWidth"],"--Switch-trackRadius":o.vars.radius.xl,"--Switch-thumbShadow":"soft"===i.variant?"none":"0 0 0 1px var(--Switch-trackBackground)"},"sm"===i.size&&{"--Switch-trackWidth":"26px","--Switch-trackHeight":"16px","--Switch-thumbSize":"10px",fontSize:o.vars.fontSize.sm,gap:"var(--Switch-gap, 6px)"}),"md"===i.size&&{"--Switch-trackWidth":"32px","--Switch-trackHeight":"20px","--Switch-thumbSize":"14px",fontSize:o.vars.fontSize.md,gap:"var(--Switch-gap, 8px)"}),"lg"===i.size&&{"--Switch-trackWidth":"40px","--Switch-trackHeight":"24px","--Switch-thumbSize":"18px",gap:"var(--Switch-gap, 12px)"}),{},{"--unstable_paddingBlock":"max((var(--Switch-trackHeight) - 2 * var(--variant-borderWidth, 0px) - var(--Switch-thumbSize)) / 2, 0px)","--Switch-thumbRadius":"max(var(--Switch-trackRadius) - var(--unstable_paddingBlock), min(var(--unstable_paddingBlock) / 2, var(--Switch-trackRadius) / 2))","--Switch-thumbWidth":"var(--Switch-thumbSize)","--Switch-thumbOffset":"max((var(--Switch-trackHeight) - var(--Switch-thumbSize)) / 2, 0px)"},s()),{},(a={"&:hover":{"@media (hover: hover)":(0,l.Z)({},s({state:"Hover"}))}},(0,r.Z)(a,"&.".concat(u.Z.checked),(0,l.Z)((0,l.Z)({},s()),{},{"&:hover":{"@media (hover: hover)":(0,l.Z)({},s({state:"Hover"}))}})),(0,r.Z)(a,"&.".concat(u.Z.disabled),(0,l.Z)({pointerEvents:"none",color:o.vars.palette.text.tertiary},s({state:"Disabled"}))),(0,r.Z)(a,"display","inline-flex"),(0,r.Z)(a,"alignItems","center"),(0,r.Z)(a,"alignSelf","center"),(0,r.Z)(a,"fontFamily",o.vars.fontFamily.body),(0,r.Z)(a,"position","relative"),(0,r.Z)(a,"padding","calc((var(--Switch-thumbSize) / 2) - (var(--Switch-trackHeight) / 2)) calc(-1 * var(--Switch-thumbOffset))"),(0,r.Z)(a,"backgroundColor","initial"),(0,r.Z)(a,"border","none"),(0,r.Z)(a,"margin","var(--unstable_Switch-margin)"),a))}),S=(0,h.Z)("div",{name:"JoySwitch",slot:"Action",overridesResolver:function(e,t){return t.action}})(function(e){var t=e.theme;return(0,r.Z)({borderRadius:"var(--Switch-trackRadius)",position:"absolute",top:0,left:0,bottom:0,right:0},t.focus.selector,t.focus.default)}),x=(0,h.Z)("input",{name:"JoySwitch",slot:"Input",overridesResolver:function(e,t){return t.input}})({margin:0,height:"100%",width:"100%",opacity:0,position:"absolute",cursor:"pointer"}),k=(0,h.Z)("span",{name:"JoySwitch",slot:"Track",overridesResolver:function(e,t){return t.track}})(function(e){var t=e.theme,n=e.ownerState;return(0,l.Z)((0,l.Z)((0,l.Z)({position:"relative",color:"var(--Switch-trackColor)",height:"var(--Switch-trackHeight)",width:"var(--Switch-trackWidth)",display:"flex",flexShrink:0,justifyContent:"space-between",alignItems:"center",boxSizing:"border-box",border:"var(--variant-borderWidth, 0px) solid",borderColor:"var(--Switch-trackBorderColor)",backgroundColor:"var(--Switch-trackBackground)",borderRadius:"var(--Switch-trackRadius)",fontFamily:t.vars.fontFamily.body},"sm"===n.size&&{fontSize:t.vars.fontSize.xs}),"md"===n.size&&{fontSize:t.vars.fontSize.sm}),"lg"===n.size&&{fontSize:t.vars.fontSize.md})}),L=(0,h.Z)("span",{name:"JoySwitch",slot:"Thumb",overridesResolver:function(e,t){return t.thumb}})((0,r.Z)({"--Icon-fontSize":"calc(var(--Switch-thumbSize) * 0.75)",display:"inline-flex",justifyContent:"center",alignItems:"center",position:"absolute",top:"50%",left:"calc(50% - var(--Switch-trackWidth) / 2 + var(--Switch-thumbWidth) / 2 + var(--Switch-thumbOffset))",transform:"translate(-50%, -50%)",width:"var(--Switch-thumbWidth)",height:"var(--Switch-thumbSize)",borderRadius:"var(--Switch-thumbRadius)",boxShadow:"var(--Switch-thumbShadow)",color:"var(--Switch-thumbColor)",backgroundColor:"var(--Switch-thumbBackground)"},"&.".concat(u.Z.checked),{left:"calc(50% + var(--Switch-trackWidth) / 2 - var(--Switch-thumbWidth) / 2 - var(--Switch-thumbOffset))"})),w=(0,h.Z)("span",{name:"JoySwitch",slot:"StartDecorator",overridesResolver:function(e,t){return t.startDecorator}})({display:"inline-flex"}),C=(0,h.Z)("span",{name:"JoySwitch",slot:"EndDecorator",overridesResolver:function(e,t){return t.endDecorator}})({display:"inline-flex"}),A=i.forwardRef(function(e,t){var n,r,s,y,h,u,v=(0,d.Z)({props:e,name:"JoySwitch"});v.checked,v.defaultChecked;var A=v.disabled,F=(v.onBlur,v.onChange,v.onFocus,v.onFocusVisible,v.readOnly,v.required,v.id),I=v.color,R=v.variant,D=v.size,P=v.startDecorator,M=v.endDecorator,B=v.component,O=v.slots,Z=v.slotProps,j=(0,o.Z)(v,f),G=i.useContext(b.Z),W=null!==(n=null!==(r=e.size)&&void 0!==r?r:null==G?void 0:G.size)&&void 0!==n?n:void 0===D?"md":D,E=null!==(s=e.color)&&void 0!==s?s:null!=G&&G.error?"danger":null!==(y=null==G?void 0:G.color)&&void 0!==y?y:I,V=(0,l.Z)({disabled:null!==(h=null!==(u=e.disabled)&&void 0!==u?u:null==G?void 0:G.disabled)&&void 0!==h?h:A},v),H=(0,c.h)(V),z=H.getInputProps,K=H.checked,N=H.disabled,U=H.focusVisible,J=H.readOnly,q=(0,l.Z)((0,l.Z)({},v),{},{id:F,checked:K,disabled:N,focusVisible:U,readOnly:J,color:K?E||"primary":E||"neutral",variant:void 0===R?"solid":R,size:W}),_=g(q),X=(0,l.Z)((0,l.Z)({},j),{},{component:B,slots:void 0===O?{}:O,slotProps:void 0===Z?{}:Z}),Y=(0,p.Z)("root",{ref:t,className:_.root,elementType:T,externalForwardedProps:X,ownerState:q}),$=(0,a.Z)(Y,2),Q=$[0],ee=$[1],et=(0,p.Z)("startDecorator",{additionalProps:{"aria-hidden":!0},className:_.startDecorator,elementType:w,externalForwardedProps:X,ownerState:q}),en=(0,a.Z)(et,2),ea=en[0],eo=en[1],er=(0,p.Z)("endDecorator",{additionalProps:{"aria-hidden":!0},className:_.endDecorator,elementType:C,externalForwardedProps:X,ownerState:q}),el=(0,a.Z)(er,2),ei=el[0],es=el[1],ey=(0,p.Z)("track",{className:_.track,elementType:k,externalForwardedProps:X,ownerState:q}),ec=(0,a.Z)(ey,2),eh=ec[0],ed=ec[1],ep=(0,p.Z)("thumb",{className:_.thumb,elementType:L,externalForwardedProps:X,ownerState:q}),eu=(0,a.Z)(ep,2),eb=eu[0],em=eu[1],ef=(0,p.Z)("action",{className:_.action,elementType:S,externalForwardedProps:X,ownerState:q}),eg=(0,a.Z)(ef,2),ev=eg[0],eT=eg[1],eS=(0,p.Z)("input",{additionalProps:{id:null!=F?F:null==G?void 0:G.htmlFor,"aria-describedby":null==G?void 0:G["aria-describedby"]},className:_.input,elementType:x,externalForwardedProps:X,getSlotProps:z,ownerState:q}),ex=(0,a.Z)(eS,2),ek=ex[0],eL=ex[1];return(0,m.jsxs)(Q,(0,l.Z)((0,l.Z)({},ee),{},{children:[P&&(0,m.jsx)(ea,(0,l.Z)((0,l.Z)({},eo),{},{children:"function"==typeof P?P(q):P})),(0,m.jsxs)(eh,(0,l.Z)((0,l.Z)({},ed),{},{children:[null==ed?void 0:ed.children,(0,m.jsx)(eb,(0,l.Z)({},em))]})),(0,m.jsx)(ev,(0,l.Z)((0,l.Z)({},eT),{},{children:(0,m.jsx)(ek,(0,l.Z)({},eL))})),M&&(0,m.jsx)(ei,(0,l.Z)((0,l.Z)({},es),{},{children:"function"==typeof M?M(q):M}))]}))});t.Z=A},11633:function(e,t,n){"use strict";n.d(t,{H:function(){return o}});var a=n(912529);function o(e){return(0,a.d6)("MuiSwitch",e)}var r=(0,a.sI)("MuiSwitch",["root","checked","disabled","action","input","thumb","track","focusVisible","readOnly","colorPrimary","colorDanger","colorSuccess","colorWarning","colorContext","sizeSm","sizeMd","sizeLg","variantOutlined","variantSoft","variantSolid","startDecorator","endDecorator"]);t.Z=r},964928:function(e,t,n){"use strict";n.d(t,{FR:function(){return g},eu:function(){return v}});var a=n(648611),o=n(80117),r=n(163804),l=n(667294),i=n(177811),s=n(411200),y=n(381322),c=n(829624),h=n(85643),d=n(14161),p=n(722039),u=n(611441),b=n(785893),m=["color","textColor"],f=["component","gutterBottom","noWrap","level","levelMapping","children","endDecorator","startDecorator","variant","slots","slotProps"],g=l.createContext(!1),v=l.createContext(!1),T=function(e){var t=e.gutterBottom,n=e.noWrap,a=e.level,o=e.color,r=e.variant,l={root:["root",a,t&&"gutterBottom",n&&"noWrap",o&&"color".concat((0,i.Z)(o)),r&&"variant".concat((0,i.Z)(r))],startDecorator:["startDecorator"],endDecorator:["endDecorator"]};return(0,c.Z)(l,u.f,{})},S=(0,h.Z)("span",{name:"JoyTypography",slot:"StartDecorator",overridesResolver:function(e,t){return t.startDecorator}})({display:"inline-flex",marginInlineEnd:"clamp(4px, var(--Typography-gap, 0.375em), 0.75rem)"}),x=(0,h.Z)("span",{name:"JoyTypography",slot:"endDecorator",overridesResolver:function(e,t){return t.endDecorator}})({display:"inline-flex",marginInlineStart:"clamp(4px, var(--Typography-gap, 0.375em), 0.75rem)"}),k=(0,h.Z)("span",{name:"JoyTypography",slot:"Root",overridesResolver:function(e,t){return t.root}})(function(e){var t,n,a,o,l,i=e.theme,s=e.ownerState,y="inherit"!==s.level?null===(t=i.typography[s.level])||void 0===t?void 0:t.lineHeight:"1";return(0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)({"--Icon-fontSize":"calc(1em * ".concat(y,")")},s.color&&{"--Icon-color":"currentColor"}),{},{margin:"var(--Typography-margin, 0px)"},s.nesting?{display:"inline"}:(0,r.Z)({display:"block"},s.unstable_hasSkeleton&&{position:"relative"})),(s.startDecorator||s.endDecorator)&&(0,r.Z)({display:"flex",alignItems:"center"},s.nesting&&(0,r.Z)({display:"inline-flex"},s.startDecorator&&{verticalAlign:"bottom"}))),s.level&&"inherit"!==s.level&&i.typography[s.level]),{},{fontSize:"var(--Typography-fontSize, ".concat(s.level&&"inherit"!==s.level&&null!==(n=null===(a=i.typography[s.level])||void 0===a?void 0:a.fontSize)&&void 0!==n?n:"inherit",")")},s.noWrap&&{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"}),s.gutterBottom&&{marginBottom:"0.35em"}),s.color&&{color:"var(--variant-plainColor, rgba(".concat(null===(o=i.vars.palette[s.color])||void 0===o?void 0:o.mainChannel," / 1))")}),s.variant&&(0,r.Z)((0,r.Z)({borderRadius:i.vars.radius.xs,paddingBlock:"min(0.1em, 4px)",paddingInline:"0.25em"},!s.nesting&&{marginInline:"-0.25em"}),null===(l=i.variants[s.variant])||void 0===l?void 0:l[s.color]))}),L={h1:"h1",h2:"h2",h3:"h3",h4:"h4","title-lg":"p","title-md":"p","title-sm":"p","body-lg":"p","body-md":"p","body-sm":"p","body-xs":"span",inherit:"p"},w=l.forwardRef(function(e,t){var n,i=(0,d.Z)({props:e,name:"JoyTypography"}),c=i.color,h=i.textColor,u=(0,o.Z)(i,m),w=l.useContext(g),C=l.useContext(v),A=(0,y.Z)((0,r.Z)((0,r.Z)({},u),{},{color:h})),F=A.component,I=A.gutterBottom,R=A.noWrap,D=A.level,P=A.levelMapping,M=void 0===P?L:P,B=A.children,O=A.endDecorator,Z=A.startDecorator,j=A.variant,G=A.slots,W=A.slotProps,E=(0,o.Z)(A,f),V=null!==(n=e.color)&&void 0!==n?n:j?null!=c?c:"neutral":c,H=w||C?e.level||"inherit":void 0===D?"body-md":D,z=(0,s.Z)(B,["Skeleton"]),K=F||(w?"span":M[H]||L[H]||"span"),N=(0,r.Z)((0,r.Z)({},A),{},{level:H,component:K,color:V,gutterBottom:void 0!==I&&I,noWrap:void 0!==R&&R,nesting:w,variant:j,unstable_hasSkeleton:z}),U=T(N),J=(0,r.Z)((0,r.Z)({},E),{},{component:K,slots:void 0===G?{}:G,slotProps:void 0===W?{}:W}),q=(0,p.Z)("root",{ref:t,className:U.root,elementType:k,externalForwardedProps:J,ownerState:N}),_=(0,a.Z)(q,2),X=_[0],Y=_[1],$=(0,p.Z)("startDecorator",{className:U.startDecorator,elementType:S,externalForwardedProps:J,ownerState:N}),Q=(0,a.Z)($,2),ee=Q[0],et=Q[1],en=(0,p.Z)("endDecorator",{className:U.endDecorator,elementType:x,externalForwardedProps:J,ownerState:N}),ea=(0,a.Z)(en,2),eo=ea[0],er=ea[1];return(0,b.jsx)(g.Provider,{value:!0,children:(0,b.jsxs)(X,(0,r.Z)((0,r.Z)({},Y),{},{children:[Z&&(0,b.jsx)(ee,(0,r.Z)((0,r.Z)({},et),{},{children:Z})),z?l.cloneElement(B,{variant:B.props.variant||"inline"}):B,O&&(0,b.jsx)(eo,(0,r.Z)((0,r.Z)({},er),{},{children:O}))]}))})});w.muiName="Typography",t.ZP=w},611441:function(e,t,n){"use strict";n.d(t,{f:function(){return o}});var a=n(912529);function o(e){return(0,a.d6)("MuiTypography",e)}var r=(0,a.sI)("MuiTypography",["root","h1","h2","h3","h4","title-lg","title-md","title-sm","body-lg","body-md","body-sm","body-xs","noWrap","gutterBottom","startDecorator","endDecorator","colorPrimary","colorNeutral","colorDanger","colorSuccess","colorWarning","colorContext","variantPlain","variantOutlined","variantSoft","variantSolid"]);t.Z=r},791992:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return a.Z}});var a=n(881645)},481593:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return ns}});var a,o,r,l,i,s,y,c,h,d,p,u,b,m,f,g,v,T,S,x,k,L,w,C,A,F,I,R,D,P,M,B,O,Z,j,G,W,E,V,H,z,K,N,U,J,q,_,X,Y,$,Q,ee,et={};n.r(et),n.d(et,{demoComponents:function(){return nl},demos:function(){return nr},docs:function(){return no},srcComponents:function(){return ni}});var en=n(163804),ea=n(667294),eo=n.t(ea,2),er=n(165492),el=n(946234),ei=n(408234),es=n(875208),ey=n(696608),ec=n(210197),eh=n(939102),ed=n(188462),ep=n(109126),eu=n(100709),eb=n(819212),em=n.n(eb),ef=n(515439),eg=n(544931),ev=n(932023),eT=n(188738),eS=n(665418),ex=n(72547),ek=n(894921),eL=n(477863),ew=n.n(eL),eC=n(989929),eA=n(897895),eF=n(614281),eI=n(205871),eR=n(66877),eD=n(432953),eP=n.n(eD),eM=n(484826),eB=n(759216),eO=n(497633),eZ=n(67327),ej=n(600514),eG=n(436587),eW=n.n(eG),eE=n(163024),eV=n.n(eE),eH=n(791992),ez=n(45697),eK=n(690014),eN=n(223370),eU=n.n(eN),eJ=n(911447),eq=n.n(eJ),e_=n(201314),eX=n(152441),eY=n(152817),e$=n(38425),eQ=n(325386),e1=n(707017),e0=n(964928),e9=n(785893),e2=[{code:"AD",label:"Andorra",phone:"376"},{code:"AE",label:"United Arab Emirates",phone:"971"},{code:"AF",label:"Afghanistan",phone:"93"},{code:"AG",label:"Antigua and Barbuda",phone:"1-268"},{code:"AI",label:"Anguilla",phone:"1-264"},{code:"AL",label:"Albania",phone:"355"},{code:"AM",label:"Armenia",phone:"374"},{code:"AO",label:"Angola",phone:"244"},{code:"AQ",label:"Antarctica",phone:"672"},{code:"AR",label:"Argentina",phone:"54"},{code:"AS",label:"American Samoa",phone:"1-684"},{code:"AT",label:"Austria",phone:"43"},{code:"AU",label:"Australia",phone:"61",suggested:!0},{code:"AW",label:"Aruba",phone:"297"},{code:"AX",label:"Alland Islands",phone:"358"},{code:"AZ",label:"Azerbaijan",phone:"994"},{code:"BA",label:"Bosnia and Herzegovina",phone:"387"},{code:"BB",label:"Barbados",phone:"1-246"},{code:"BD",label:"Bangladesh",phone:"880"},{code:"BE",label:"Belgium",phone:"32"},{code:"BF",label:"Burkina Faso",phone:"226"},{code:"BG",label:"Bulgaria",phone:"359"},{code:"BH",label:"Bahrain",phone:"973"},{code:"BI",label:"Burundi",phone:"257"},{code:"BJ",label:"Benin",phone:"229"},{code:"BL",label:"Saint Barthelemy",phone:"590"},{code:"BM",label:"Bermuda",phone:"1-441"},{code:"BN",label:"Brunei Darussalam",phone:"673"},{code:"BO",label:"Bolivia",phone:"591"},{code:"BR",label:"Brazil",phone:"55"},{code:"BS",label:"Bahamas",phone:"1-242"},{code:"BT",label:"Bhutan",phone:"975"},{code:"BV",label:"Bouvet Island",phone:"47"},{code:"BW",label:"Botswana",phone:"267"},{code:"BY",label:"Belarus",phone:"375"},{code:"BZ",label:"Belize",phone:"501"},{code:"CA",label:"Canada",phone:"1",suggested:!0},{code:"CC",label:"Cocos (Keeling) Islands",phone:"61"},{code:"CD",label:"Congo, Democratic Republic of the",phone:"243"},{code:"CF",label:"Central African Republic",phone:"236"},{code:"CG",label:"Congo, Republic of the",phone:"242"},{code:"CH",label:"Switzerland",phone:"41"},{code:"CI",label:"Cote d'Ivoire",phone:"225"},{code:"CK",label:"Cook Islands",phone:"682"},{code:"CL",label:"Chile",phone:"56"},{code:"CM",label:"Cameroon",phone:"237"},{code:"CN",label:"China",phone:"86"},{code:"CO",label:"Colombia",phone:"57"},{code:"CR",label:"Costa Rica",phone:"506"},{code:"CU",label:"Cuba",phone:"53"},{code:"CV",label:"Cape Verde",phone:"238"},{code:"CW",label:"Curacao",phone:"599"},{code:"CX",label:"Christmas Island",phone:"61"},{code:"CY",label:"Cyprus",phone:"357"},{code:"CZ",label:"Czech Republic",phone:"420"},{code:"DE",label:"Germany",phone:"49",suggested:!0},{code:"DJ",label:"Djibouti",phone:"253"},{code:"DK",label:"Denmark",phone:"45"},{code:"DM",label:"Dominica",phone:"1-767"},{code:"DO",label:"Dominican Republic",phone:"1-809"},{code:"DZ",label:"Algeria",phone:"213"},{code:"EC",label:"Ecuador",phone:"593"},{code:"EE",label:"Estonia",phone:"372"},{code:"EG",label:"Egypt",phone:"20"},{code:"EH",label:"Western Sahara",phone:"212"},{code:"ER",label:"Eritrea",phone:"291"},{code:"ES",label:"Spain",phone:"34"},{code:"ET",label:"Ethiopia",phone:"251"},{code:"FI",label:"Finland",phone:"358"},{code:"FJ",label:"Fiji",phone:"679"},{code:"FK",label:"Falkland Islands (Malvinas)",phone:"500"},{code:"FM",label:"Micronesia, Federated States of",phone:"691"},{code:"FO",label:"Faroe Islands",phone:"298"},{code:"FR",label:"France",phone:"33",suggested:!0},{code:"GA",label:"Gabon",phone:"241"},{code:"GB",label:"United Kingdom",phone:"44"},{code:"GD",label:"Grenada",phone:"1-473"},{code:"GE",label:"Georgia",phone:"995"},{code:"GF",label:"French Guiana",phone:"594"},{code:"GG",label:"Guernsey",phone:"44"},{code:"GH",label:"Ghana",phone:"233"},{code:"GI",label:"Gibraltar",phone:"350"},{code:"GL",label:"Greenland",phone:"299"},{code:"GM",label:"Gambia",phone:"220"},{code:"GN",label:"Guinea",phone:"224"},{code:"GP",label:"Guadeloupe",phone:"590"},{code:"GQ",label:"Equatorial Guinea",phone:"240"},{code:"GR",label:"Greece",phone:"30"},{code:"GS",label:"South Georgia and the South Sandwich Islands",phone:"500"},{code:"GT",label:"Guatemala",phone:"502"},{code:"GU",label:"Guam",phone:"1-671"},{code:"GW",label:"Guinea-Bissau",phone:"245"},{code:"GY",label:"Guyana",phone:"592"},{code:"HK",label:"Hong Kong",phone:"852"},{code:"HM",label:"Heard Island and McDonald Islands",phone:"672"},{code:"HN",label:"Honduras",phone:"504"},{code:"HR",label:"Croatia",phone:"385"},{code:"HT",label:"Haiti",phone:"509"},{code:"HU",label:"Hungary",phone:"36"},{code:"ID",label:"Indonesia",phone:"62"},{code:"IE",label:"Ireland",phone:"353"},{code:"IL",label:"Israel",phone:"972"},{code:"IM",label:"Isle of Man",phone:"44"},{code:"IN",label:"India",phone:"91"},{code:"IO",label:"British Indian Ocean Territory",phone:"246"},{code:"IQ",label:"Iraq",phone:"964"},{code:"IR",label:"Iran, Islamic Republic of",phone:"98"},{code:"IS",label:"Iceland",phone:"354"},{code:"IT",label:"Italy",phone:"39"},{code:"JE",label:"Jersey",phone:"44"},{code:"JM",label:"Jamaica",phone:"1-876"},{code:"JO",label:"Jordan",phone:"962"},{code:"JP",label:"Japan",phone:"81",suggested:!0},{code:"KE",label:"Kenya",phone:"254"},{code:"KG",label:"Kyrgyzstan",phone:"996"},{code:"KH",label:"Cambodia",phone:"855"},{code:"KI",label:"Kiribati",phone:"686"},{code:"KM",label:"Comoros",phone:"269"},{code:"KN",label:"Saint Kitts and Nevis",phone:"1-869"},{code:"KP",label:"Korea, Democratic People's Republic of",phone:"850"},{code:"KR",label:"Korea, Republic of",phone:"82"},{code:"KW",label:"Kuwait",phone:"965"},{code:"KY",label:"Cayman Islands",phone:"1-345"},{code:"KZ",label:"Kazakhstan",phone:"7"},{code:"LA",label:"Lao People's Democratic Republic",phone:"856"},{code:"LB",label:"Lebanon",phone:"961"},{code:"LC",label:"Saint Lucia",phone:"1-758"},{code:"LI",label:"Liechtenstein",phone:"423"},{code:"LK",label:"Sri Lanka",phone:"94"},{code:"LR",label:"Liberia",phone:"231"},{code:"LS",label:"Lesotho",phone:"266"},{code:"LT",label:"Lithuania",phone:"370"},{code:"LU",label:"Luxembourg",phone:"352"},{code:"LV",label:"Latvia",phone:"371"},{code:"LY",label:"Libya",phone:"218"},{code:"MA",label:"Morocco",phone:"212"},{code:"MC",label:"Monaco",phone:"377"},{code:"MD",label:"Moldova, Republic of",phone:"373"},{code:"ME",label:"Montenegro",phone:"382"},{code:"MF",label:"Saint Martin (French part)",phone:"590"},{code:"MG",label:"Madagascar",phone:"261"},{code:"MH",label:"Marshall Islands",phone:"692"},{code:"MK",label:"Macedonia, the Former Yugoslav Republic of",phone:"389"},{code:"ML",label:"Mali",phone:"223"},{code:"MM",label:"Myanmar",phone:"95"},{code:"MN",label:"Mongolia",phone:"976"},{code:"MO",label:"Macao",phone:"853"},{code:"MP",label:"Northern Mariana Islands",phone:"1-670"},{code:"MQ",label:"Martinique",phone:"596"},{code:"MR",label:"Mauritania",phone:"222"},{code:"MS",label:"Montserrat",phone:"1-664"},{code:"MT",label:"Malta",phone:"356"},{code:"MU",label:"Mauritius",phone:"230"},{code:"MV",label:"Maldives",phone:"960"},{code:"MW",label:"Malawi",phone:"265"},{code:"MX",label:"Mexico",phone:"52"},{code:"MY",label:"Malaysia",phone:"60"},{code:"MZ",label:"Mozambique",phone:"258"},{code:"NA",label:"Namibia",phone:"264"},{code:"NC",label:"New Caledonia",phone:"687"},{code:"NE",label:"Niger",phone:"227"},{code:"NF",label:"Norfolk Island",phone:"672"},{code:"NG",label:"Nigeria",phone:"234"},{code:"NI",label:"Nicaragua",phone:"505"},{code:"NL",label:"Netherlands",phone:"31"},{code:"NO",label:"Norway",phone:"47"},{code:"NP",label:"Nepal",phone:"977"},{code:"NR",label:"Nauru",phone:"674"},{code:"NU",label:"Niue",phone:"683"},{code:"NZ",label:"New Zealand",phone:"64"},{code:"OM",label:"Oman",phone:"968"},{code:"PA",label:"Panama",phone:"507"},{code:"PE",label:"Peru",phone:"51"},{code:"PF",label:"French Polynesia",phone:"689"},{code:"PG",label:"Papua New Guinea",phone:"675"},{code:"PH",label:"Philippines",phone:"63"},{code:"PK",label:"Pakistan",phone:"92"},{code:"PL",label:"Poland",phone:"48"},{code:"PM",label:"Saint Pierre and Miquelon",phone:"508"},{code:"PN",label:"Pitcairn",phone:"870"},{code:"PR",label:"Puerto Rico",phone:"1"},{code:"PS",label:"Palestine, State of",phone:"970"},{code:"PT",label:"Portugal",phone:"351"},{code:"PW",label:"Palau",phone:"680"},{code:"PY",label:"Paraguay",phone:"595"},{code:"QA",label:"Qatar",phone:"974"},{code:"RE",label:"Reunion",phone:"262"},{code:"RO",label:"Romania",phone:"40"},{code:"RS",label:"Serbia",phone:"381"},{code:"RU",label:"Russian Federation",phone:"7"},{code:"RW",label:"Rwanda",phone:"250"},{code:"SA",label:"Saudi Arabia",phone:"966"},{code:"SB",label:"Solomon Islands",phone:"677"},{code:"SC",label:"Seychelles",phone:"248"},{code:"SD",label:"Sudan",phone:"249"},{code:"SE",label:"Sweden",phone:"46"},{code:"SG",label:"Singapore",phone:"65"},{code:"SH",label:"Saint Helena",phone:"290"},{code:"SI",label:"Slovenia",phone:"386"},{code:"SJ",label:"Svalbard and Jan Mayen",phone:"47"},{code:"SK",label:"Slovakia",phone:"421"},{code:"SL",label:"Sierra Leone",phone:"232"},{code:"SM",label:"San Marino",phone:"378"},{code:"SN",label:"Senegal",phone:"221"},{code:"SO",label:"Somalia",phone:"252"},{code:"SR",label:"Suriname",phone:"597"},{code:"SS",label:"South Sudan",phone:"211"},{code:"ST",label:"Sao Tome and Principe",phone:"239"},{code:"SV",label:"El Salvador",phone:"503"},{code:"SX",label:"Sint Maarten (Dutch part)",phone:"1-721"},{code:"SY",label:"Syrian Arab Republic",phone:"963"},{code:"SZ",label:"Swaziland",phone:"268"},{code:"TC",label:"Turks and Caicos Islands",phone:"1-649"},{code:"TD",label:"Chad",phone:"235"},{code:"TF",label:"French Southern Territories",phone:"262"},{code:"TG",label:"Togo",phone:"228"},{code:"TH",label:"Thailand",phone:"66"},{code:"TJ",label:"Tajikistan",phone:"992"},{code:"TK",label:"Tokelau",phone:"690"},{code:"TL",label:"Timor-Leste",phone:"670"},{code:"TM",label:"Turkmenistan",phone:"993"},{code:"TN",label:"Tunisia",phone:"216"},{code:"TO",label:"Tonga",phone:"676"},{code:"TR",label:"Turkey",phone:"90"},{code:"TT",label:"Trinidad and Tobago",phone:"1-868"},{code:"TV",label:"Tuvalu",phone:"688"},{code:"TW",label:"Taiwan, Province of China",phone:"886"},{code:"TZ",label:"United Republic of Tanzania",phone:"255"},{code:"UA",label:"Ukraine",phone:"380"},{code:"UG",label:"Uganda",phone:"256"},{code:"US",label:"United States",phone:"1",suggested:!0},{code:"UY",label:"Uruguay",phone:"598"},{code:"UZ",label:"Uzbekistan",phone:"998"},{code:"VA",label:"Holy See (Vatican City State)",phone:"379"},{code:"VC",label:"Saint Vincent and the Grenadines",phone:"1-784"},{code:"VE",label:"Venezuela",phone:"58"},{code:"VG",label:"British Virgin Islands",phone:"1-284"},{code:"VI",label:"US Virgin Islands",phone:"1-340"},{code:"VN",label:"Vietnam",phone:"84"},{code:"VU",label:"Vanuatu",phone:"678"},{code:"WF",label:"Wallis and Futuna",phone:"681"},{code:"WS",label:"Samoa",phone:"685"},{code:"XK",label:"Kosovo",phone:"383"},{code:"YE",label:"Yemen",phone:"967"},{code:"YT",label:"Mayotte",phone:"262"},{code:"ZA",label:"South Africa",phone:"27"},{code:"ZM",label:"Zambia",phone:"260"},{code:"ZW",label:"Zimbabwe",phone:"263"}],e4=n(264358),e7=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],e8=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],e6=n(561445),e5=n(272879),e3=n(681314),te=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],tt=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],tn=n(27921),ta=n.n(tn),to=ta()(Array(48)).map(function(e,t){return"".concat(t<20?"0":"").concat(Math.floor(t/2),":").concat(t%2==0?"00":"30")}),tr=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],tl=n(648611),ti=["Option 1","Option 2"],ts=n(5870),ty=n(66250),tc=n(773473),th=n.n(tc),td=n(72357),tp=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014}],tu=n(777193),tb=n(849088),tm=n(360191),tf=n(715496),tg=n(907313),tv=n(661649),tT=n(62717),tS=n(586903),tx=n(149352),tk=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],tL=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],tw=n(786923),tC=(0,tw.D)(),tA=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],tF=n(379529),tI=n.n(tF),tR=n(491647),tD=n(397778),tP=n(538421),tM=n(537881),tB=(0,tw.D)(),tO=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],tZ=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],tj=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],tG=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],tW=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],tE=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],tV=n(459289),tH=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],tz=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],tK=n(143221),tN=n(145002),tU=n(800689),tJ=n(291350),tq=n(881645),t_=ea.forwardRef(function(e,t){return(0,e9.jsx)(tU.Z,(0,en.Z)((0,en.Z)({ref:t},e),{},{variant:"plain",size:"sm",sx:{"--List-padding":"0px","--List-radius":"0px","--ListItem-paddingX":"8px","--ListItem-paddingY":"8px",minWidth:"100%"}}))}),tX=[{name:"good first issue",color:"#7057ff",description:"Good for newcomers"},{name:"help wanted",color:"#008672",description:"Extra attention is needed"},{name:"priority: critical",color:"#b60205",description:""},{name:"priority: high",color:"#d93f0b",description:""},{name:"priority: low",color:"#0e8a16",description:""},{name:"priority: medium",color:"#fbca04",description:""},{name:"status: can't reproduce",color:"#fec1c1",description:""},{name:"status: confirmed",color:"#215cea",description:""},{name:"status: duplicate",color:"#cfd3d7",description:"This issue or pull request already exists"},{name:"status: needs information",color:"#fef2c0",description:""},{name:"status: wont do/fix",color:"#eeeeee",description:"This will not be worked on"},{name:"type: bug",color:"#d73a4a",description:"Something isn't working"},{name:"type: discussion",color:"#d4c5f9",description:""},{name:"type: documentation",color:"#006b75",description:""},{name:"type: enhancement",color:"#84b6eb",description:""},{name:"type: epic",color:"#3e4b9e",description:"A theme of work that contain sub-tasks"},{name:"type: feature request",color:"#fbca04",description:"New feature or request"},{name:"type: question",color:"#d876e3",description:"Further information is requested"}],tY=(0,tw.D)({matchFrom:"start",stringify:function(e){return e.title}}),t$=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],tQ=n(80117),t1=n(85643),t0=["children","hint"],t9=(0,t1.Z)("div")({flex:1,minWidth:0,display:"flex",alignItems:"center",flexWrap:"wrap",position:"relative"});function t2(e){var t=e.children,n=e.hint,a=(0,tQ.Z)(e,t0);return(0,e9.jsxs)(t9,(0,en.Z)((0,en.Z)({},a),{},{children:[(0,e9.jsx)(e0.ZP,{sx:{position:"absolute",opacity:.6},children:n}),t]}))}var t4=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}],t7=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],t8=n(228872),t6=["children","anchorEl","open","modifiers"];function t5(e){var t=e.index,n=e.style,a=e.data[t],o=(0,en.Z)((0,en.Z)({},n),{},{top:n.top+6});return a.hasOwnProperty("group")?(0,e9.jsx)(t8.Z,{component:"li",style:o,children:a.group},a.key):(0,e9.jsx)(e$.Z,(0,en.Z)((0,en.Z)({},a[0]),{},{style:o,children:a[1]}))}var t3=ea.createContext({}),ne=ea.forwardRef(function(e,t){var n=ea.useContext(t3);return(0,e9.jsx)(tU.Z,(0,en.Z)((0,en.Z)((0,en.Z)({},e),n),{},{component:"div",ref:t,sx:{"& ul":{padding:0,margin:0,flexShrink:0}}}))}),nt=ea.forwardRef(function(e,t){var n=e.anchorEl,a=e.open,o=e.modifiers,r=(0,tQ.Z)(e,t6),l=[];e.children[0].forEach(function(e){e&&(l.push(e),l.push.apply(l,(0,tb.Z)(e.children||[])))});var i=l.length;return(0,e9.jsx)(tK.r,{ref:t,anchorEl:n,open:a,modifiers:o,children:(0,e9.jsx)(t3.Provider,{value:r,children:(0,e9.jsx)(e_.FixedSizeList,{itemData:l,height:320,width:"100%",outerElementType:ne,innerElementType:"ul",itemSize:40,overscanCount:5,itemCount:i,children:t5})})})}),nn=ta()(Array(1e4)).map(function(){return function(e){for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n="",a=0;a<e;a+=1)n+=t.charAt(Math.floor(Math.random()*t.length));return n}(10+Math.ceil(20*Math.random()))}).sort(function(e,t){return e.toUpperCase().localeCompare(t.toUpperCase())}),na=n(747892),no={en:{description:"The autocomplete is a text input enhanced by a panel of suggested options when users start typing.",location:"/brickmmo-docs-v2/data/joy/components/autocomplete/autocomplete.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<h1>Autocomplete</h1><p class="description">The autocomplete is a text input enhanced by a panel of suggested options when users start typing.</p>\n\n',{component:"modules/components/ComponentLinkHeader.js",design:!1},'<h2 id="introduction">Introduction<a aria-labelledby="introduction" class="anchor-link" href="#introduction" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="introduction"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p><code>Autocomplete</code> is an enhanced version of text input that shows suggested options as the users type and also let them select an option from the list.</p>\n',{demo:"Playground.js",hideToolbar:!0},'<h2 id="usage">Usage<a aria-labelledby="usage" class="anchor-link" href="#usage" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="usage"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>After <a href="/joy-ui/getting-started/installation/">installation</a>, you can start building with this component using the following basic elements:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Autocomplete <span class="token keyword">from</span> <span class="token string">\'@mui/joy/Autocomplete\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Input <span class="token keyword">from</span> <span class="token string">\'@mui/joy/Input\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Autocomplete</span></span> <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token string">\'Option 1\'</span><span class="token punctuation">,</span> <span class="token string">\'Option 2\'</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="basics">Basics<a aria-labelledby="basics" class="anchor-link" href="#basics" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="basics"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The Autocomplete component requires a list of <code>options</code> to be displayed after the textbox is focused. The value must be chosen from a predefined set of allowed values.</p>\n',{demo:"BasicAutocomplete.js"},'<h2 id="customization">Customization<a aria-labelledby="customization" class="anchor-link" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="customization"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="options-structure">Options structure<a aria-labelledby="options-structure" class="anchor-link" href="#options-structure" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="options-structure"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>By default, the <code>options</code> accepts an array of <code>string</code> or <code>{ label: string }</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'The Godfather\'</span><span class="token punctuation">,</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'Pulp Fiction\'</span><span class="token punctuation">,</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// or</span>\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'The Godfather\'</span><span class="token punctuation">,</span> <span class="token string">\'Pulp Fiction\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>However, you can use different structures by providing a <code>getOptionLabel</code> prop:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Pulp Fiction\'</span><span class="token punctuation">,</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Autocomplete</span></span> <span class="token attr-name">getOptionLabel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">option</span> <span class="token operator">=></span> option<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="option-appearance">Option appearance<a aria-labelledby="option-appearance" class="anchor-link" href="#option-appearance" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="option-appearance"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>To customize the appearance of the options, use <code>renderOption</code> prop in combination with the <code>AutocompleteOption</code> component as an option container.</p>\n',{demo:"CountrySelect.js"},'<h3 id="variants">Variants<a aria-labelledby="variants" class="anchor-link" href="#variants" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="variants"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The autocomplete component supports the four global variants: <code>outlined</code> (default), <code>soft</code>, <code>solid</code>, and <code>plain</code>.</p>\n<p>The variant and color values are propagated to the Autocomplete&#39;s <code>input</code> and <code>listbox</code> slots.</p>\n',{demo:"AutocompleteVariants.js"},'<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>To learn how to add more variants to the component, check out <a href="/joy-ui/customization/themed-components/#extend-variants">Themed components—Extend variants</a>.</p>\n\n</div></aside><p>To customize the variant and color for a specific slot, use <code>slotProps</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Autocomplete</span></span>\n  <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>plain<span class="token punctuation">"</span></span>\n  <span class="token attr-name">slotProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">listbox</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">variant</span><span class="token operator">:</span> <span class="token string">\'outlined\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="label">Label<a aria-labelledby="label" class="anchor-link" href="#label" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="label"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Put an <code>Autocomplete</code>, a <code>FormLabel</code> and a <code>FormHelperText</code> (optional) under a <code>FormControl</code> component to create an accessible autocomplete.</p>\n',{demo:"LabelAndHelperText.js"},'<h3 id="decorators">Decorators<a aria-labelledby="decorators" class="anchor-link" href="#decorators" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="decorators"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Use <code>startDecorator</code> or <code>endDecorator</code> to insert decorators to the autocomplete.</p>\n',{demo:"AutocompleteDecorators.js"},'<h3 id="controlled-states">Controlled states<a aria-labelledby="controlled-states" class="anchor-link" href="#controlled-states" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="controlled-states"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The component has two states that can be controlled:</p>\n<ol>\n<li>the &quot;value&quot; state with the <code>value</code>/<code>onChange</code> props combination. This state represents the value selected by the user, for instance when pressing <kbd class="key">Enter</kbd>.</li>\n<li>the &quot;input value&quot; state with the <code>inputValue</code>/<code>onInputChange</code> props combination. This state represents the value displayed in the textbox.</li>\n</ol>\n<p>These two states are isolated, and should be controlled independently.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <ul>\n<li>A component is <strong>controlled</strong> when it&#39;s managed by its parent using props.</li>\n<li>A component is <strong>uncontrolled</strong> when it&#39;s managed by its own local state.</li>\n</ul>\n<p>Learn more about controlled and uncontrolled components in the <a href="https://react.dev/learn/sharing-state-between-components#controlled-and-uncontrolled-components">React documentation</a>.</p>\n\n</div></aside>',{demo:"ControllableStates.js"},'<h3 id="disabled-options">Disabled options<a aria-labelledby="disabled-options" class="anchor-link" href="#disabled-options" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="disabled-options"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Use <code>getOptionDisabled</code> prop to read the options and returns <code>true</code> to disable them.</p>\n',{demo:"DisabledOptions.js"},'<h3 id="grouped-options">Grouped options<a aria-labelledby="grouped-options" class="anchor-link" href="#grouped-options" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="grouped-options"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>You can group the options with the <code>groupBy</code> prop.\nIf you do so, make sure that the options are also sorted with the same dimension that they are grouped by,\notherwise, you will notice duplicate headers.</p>\n',{demo:"Grouped.js"},'<h3 id="loading">Loading<a aria-labelledby="loading" class="anchor-link" href="#loading" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="loading"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>It displays a progress state as long as the network request is pending.</p>\n',{demo:"Asynchronous.js"},'<h3 id="search-input">Search input<a aria-labelledby="search-input" class="anchor-link" href="#search-input" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="search-input"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Use <code>freeSolo</code> to create a <strong>search input</strong> with suggestions experience, e.g. Google search or <a href="https://github.com/moroshko/react-autowhatever">react-autowhatever</a>.</p>\n',{demo:"FreeSolo.js"},'<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Be careful when using the free solo mode with non-string options, as it may cause type mismatch.</p>\n<p>The value created by typing into the textbox is always a string, regardless of the type of the options.</p>\n\n</div></aside><h3 id="users-created-option">User&#39;s created option<a aria-labelledby="users-created-option" class="anchor-link" href="#users-created-option" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="users-created-option"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>If you intend to use <code>freeSolo</code> mode for a <a href="#combo-box">combo box</a> like experience (an enhanced version of a select element) we recommend setting:</p>\n<ul>\n<li><code>selectOnFocus</code> to help the user clear the selected value.</li>\n<li><code>clearOnBlur</code> to help the user enter a new value.</li>\n<li><code>handleHomeEndKeys</code> to move focus inside the popup with the <kbd class="key">Home</kbd> and <kbd class="key">End</kbd> keys.</li>\n<li>A last option, for instance: <code>Add &quot;YOUR SEARCH&quot;</code>.</li>\n</ul>\n',{demo:"FreeSoloCreateOption.js"},"<p>You could also display a dialog when the user wants to add a new value.</p>\n",{demo:"FreeSoloCreateOptionDialog.js"},'<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The <code>AutocompleteOption</code> uses the same styles and variables as <a href="/joy-ui/react-list/#interactive-list-items"><code>ListItemButton</code></a>, so that you get the same customization experience.</p>\n\n</div></aside><h3 id="validation">Validation<a aria-labelledby="validation" class="anchor-link" href="#validation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="validation"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>To display invalid state, set the <code>error</code> prop on the <code>FormControl</code>.</p>\n',{demo:"AutocompleteError.js"},'<h3 id="multiple-selection">Multiple selection<a aria-labelledby="multiple-selection" class="anchor-link" href="#multiple-selection" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="multiple-selection"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>By default, the autocomplete uses <a href="/joy-ui/react-chip/"><code>Chip</code></a> component to render the user&#39;s selected options.</p>\n<p>When the autocomplete is focused, the user can press the backspace to remove the latest selected option from the list.</p>\n',{demo:"Tags.js"},'<h3 id="selected-options-appearance">Selected options appearance<a aria-labelledby="selected-options-appearance" class="anchor-link" href="#selected-options-appearance" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="selected-options-appearance"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Use the <code>renderTag</code> prop to customize the appearance.</p>\n',{demo:"CustomTags.js"},'<h3 id="limit-the-selected-options-to-be-displayed">Limit the selected options to be displayed<a aria-labelledby="limit-the-selected-options-to-be-displayed" class="anchor-link" href="#limit-the-selected-options-to-be-displayed" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="limit-the-selected-options-to-be-displayed"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>You can use the <code>limitTags</code> prop to limit the number of displayed options when not focused.</p>\n',{demo:"LimitTags.js"},'<h3 id="sizes">Sizes<a aria-labelledby="sizes" class="anchor-link" href="#sizes" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="sizes"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The autocomplete component comes with three sizes out of the box: <code>sm</code>, <code>md</code> (the default), and <code>lg</code>. The size is propagated to internal components, including <code>Input</code>, <code>Chip</code>, and <code>List</code>.</p>\n',{demo:"Sizes.js"},'<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>To learn how to add more sizes to the component, check out <a href="/joy-ui/customization/themed-components/#extend-sizes">Themed components—Extend sizes</a>.</p>\n\n</div></aside><p>The <code>size</code> can also be controlled at the <code>FormControl</code>.</p>\n',{demo:"SizeWithLabel.js"},'<h3 id="custom-filter">Custom filter<a aria-labelledby="custom-filter" class="anchor-link" href="#custom-filter" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="custom-filter"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The component exposes a factory to create a filter method that can be provided to the <code>filterOptions</code> prop.\nYou can use it to change the default option filter behavior.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> createFilterOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/Autocomplete\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>Arguments</h4><ol>\n<li><code>config</code> (<em>object</em> [optional]):</li>\n</ol>\n<ul>\n<li><code>config.ignoreAccents</code> (<em>bool</em> [optional]): Defaults to <code>true</code>. Remove diacritics.</li>\n<li><code>config.ignoreCase</code> (<em>bool</em> [optional]): Defaults to <code>true</code>. Lowercase everything.</li>\n<li><code>config.limit</code> (<em>number</em> [optional]): Default to null. Limit the number of suggested options to be shown. For example, if <code>config.limit</code> is <code>100</code>, only the first <code>100</code> matching options are shown. It can be useful if a lot of options match and virtualization wasn&#39;t set up.</li>\n<li><code>config.matchFrom</code> (<em>&#39;any&#39; | &#39;start&#39;</em> [optional]): Defaults to <code>&#39;any&#39;</code>.</li>\n<li><code>config.stringify</code> (<em>func</em> [optional]): Controls how an option is converted into a string so that it can be matched against the input text fragment.</li>\n<li><code>config.trim</code> (<em>bool</em> [optional]): Defaults to <code>false</code>. Remove trailing spaces.</li>\n</ul>\n<h4>Returns</h4><p><code>filterOptions</code>: the returned filter method can be provided directly to the <code>filterOptions</code> prop of the <code>Autocomplete</code> component, or the parameter of the same name for the hook.</p>\n<p>In the following demo, the options need to start with the query prefix:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">const</span> filterOptions <span class="token operator">=</span> <span class="token function">createFilterOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">matchFrom</span><span class="token operator">:</span> <span class="token string">\'start\'</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">stringify</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">option</span><span class="token punctuation">)</span> <span class="token operator">=></span> option<span class="token punctuation">.</span>title<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Autocomplete</span></span> <span class="token attr-name">filterOptions</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>filterOptions<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"Filter.js",defaultCodeOpen:!1},'<h3 id="advanced-filter">Advanced filter<a aria-labelledby="advanced-filter" class="anchor-link" href="#advanced-filter" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="advanced-filter"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>For richer filtering mechanisms, like fuzzy matching, it&#39;s recommended to look at <a href="https://github.com/kentcdodds/match-sorter">match-sorter</a>. For instance:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> matchSorter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'match-sorter\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">filterOptions</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> <span class="token punctuation">{</span> inputValue <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">matchSorter</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Autocomplete</span></span> <span class="token attr-name">filterOptions</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>filterOptions<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="css-variables-playground">CSS variables playground<a aria-labelledby="css-variables-playground" class="anchor-link" href="#css-variables-playground" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="css-variables-playground"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The Autocomplete component reuses CSS variables from the Input component to give you the consistent customization experience.</p>\n',{demo:"AutocompleteVariables.js",hideToolbar:!0,bg:"gradient"},'<h2 id="common-examples">Common examples<a aria-labelledby="common-examples" class="anchor-link" href="#common-examples" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="common-examples"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="hint">Hint<a aria-labelledby="hint" class="anchor-link" href="#hint" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="hint"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The following demo shows how to add a hint feature to the Autocomplete using the <code>filterOptions</code> prop:</p>\n',{demo:"AutocompleteHint.js"},'<h3 id="highlighting-options">Highlighting options<a aria-labelledby="highlighting-options" class="anchor-link" href="#highlighting-options" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="highlighting-options"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The following demo relies on <a href="https://github.com/moroshko/autosuggest-highlight">autosuggest-highlight</a>, a small (1 kB) utility for highlighting text in autosuggest and autocomplete components.</p>\n',{demo:"Highlights.js"},'<h3 id="githubs-picker">GitHub&#39;s picker<a aria-labelledby="githubs-picker" class="anchor-link" href="#githubs-picker" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="githubs-picker"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>To reproduce GitHub&#39;s label picker, the <code>Autocomplete</code> is rendered inside a Base UI <a href="/base-ui/react-popper/"><code>Popper</code></a>. To remove the popup behavior from the autocomplete, replace the listbox slot with the <code>AutocompleteListbox</code> component.</p>\n',{demo:"GitHubLabel.js"},'<h3 id="virtualization">Virtualization<a aria-labelledby="virtualization" class="anchor-link" href="#virtualization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="virtualization"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Search within 10,000 randomly generated options. The list is virtualized thanks to <a href="https://github.com/bvaughn/react-window">react-window</a>.</p>\n',{demo:"Virtualize.js"},'<h2 id="events">Events<a aria-labelledby="events" class="anchor-link" href="#events" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="events"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>If you would like to prevent the default key handler behavior, you can set the event&#39;s <code>defaultMuiPrevented</code> property to <code>true</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Autocomplete</span></span>\n  <span class="token attr-name">onKeyDown</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">\'Enter\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Prevent\'s default \'Enter\' behavior.</span>\n      event<span class="token punctuation">.</span>defaultMuiPrevented <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n      <span class="token comment">// your handler code</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="limitations">Limitations<a aria-labelledby="limitations" class="anchor-link" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="limitations"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="autocomplete-autofill">autocomplete/autofill<a aria-labelledby="autocomplete-autofill" class="anchor-link" href="#autocomplete-autofill" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="autocomplete-autofill"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>By default, the component disables the input <strong>autocomplete</strong> feature (remembering what the user has typed for a given field in a previous session) with the <code>autoComplete=&quot;off&quot;</code> attribute.\nGoogle Chrome does not currently support this attribute setting (<a href="https://bugs.chromium.org/p/chromium/issues/detail?id=587466">Issue 587466</a>).\nA possible workaround is to remove the <code>id</code> to have the component generate a random one.</p>\n<p>In addition to remembering past entered values, the browser might also propose <strong>autofill</strong> suggestions (saved login, address, or payment details).\nIn the event you want the avoid autofill, you can try the following:</p>\n<ul>\n<li><p>Name the input without leaking any information the browser can use. e.g. <code>id=&quot;field1&quot;</code> instead of <code>id=&quot;country&quot;</code>. If you leave the id empty, the component uses a random id.</p>\n</li>\n<li><p>Set <code>autoComplete=&quot;new-password&quot;</code> (some browsers will suggest a strong password for inputs with this attribute setting):</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Autocomplete</span></span>\n  <span class="token attr-name">slotProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">autoComplete</span><span class="token operator">:</span> <span class="token string">\'new-password\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n</li>\n</ul>\n<p>Read <a href="https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion">the guide on MDN</a> for more details.</p>\n<h3 id="ios-voiceover">iOS VoiceOver<a aria-labelledby="ios-voiceover" class="anchor-link" href="#ios-voiceover" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="ios-voiceover"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>VoiceOver on iOS Safari doesn&#39;t support the <code>aria-owns</code> attribute very well.\nYou can work around the issue with the <code>disablePortal</code> prop.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Autocomplete</span></span>\n  <span class="token attr-name">slotProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">listbox</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">disablePortal</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="accessibility">Accessibility<a aria-labelledby="accessibility" class="anchor-link" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="accessibility"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>(WAI-ARIA: <a href="https://www.w3.org/WAI/ARIA/apg/patterns/combobox/" target="_blank" rel="noopener nofollow">https://www.w3.org/WAI/ARIA/apg/patterns/combobox/</a>)</p>\n<p>We encourage the usage of a label for the textbox.\nThe component implements the WAI-ARIA authoring practices.</p>\n','<h2 id="api">API<a aria-labelledby="api" class="anchor-link" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>See the documentation below for a complete reference to all of the props and classes available to the components mentioned here.</p>\n<ul>\n<li><a href="/joy-ui/api/autocomplete/"><code>&lt;Autocomplete /&gt;</code></a></li>\n<li><a href="/joy-ui/api/autocomplete-listbox/"><code>&lt;AutocompleteListbox /&gt;</code></a></li>\n<li><a href="/joy-ui/api/autocomplete-option/"><code>&lt;AutocompleteOption /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Introduction",level:2,hash:"introduction",children:[]},{text:"Usage",level:2,hash:"usage",children:[]},{text:"Basics",level:2,hash:"basics",children:[]},{text:"Customization",level:2,hash:"customization",children:[{text:"Options structure",level:3,hash:"options-structure"},{text:"Option appearance",level:3,hash:"option-appearance"},{text:"Variants",level:3,hash:"variants"},{text:"Label",level:3,hash:"label"},{text:"Decorators",level:3,hash:"decorators"},{text:"Controlled states",level:3,hash:"controlled-states"},{text:"Disabled options",level:3,hash:"disabled-options"},{text:"Grouped options",level:3,hash:"grouped-options"},{text:"Loading",level:3,hash:"loading"},{text:"Search input",level:3,hash:"search-input"},{text:"User&#39;s created option",level:3,hash:"users-created-option"},{text:"Validation",level:3,hash:"validation"},{text:"Multiple selection",level:3,hash:"multiple-selection"},{text:"Selected options appearance",level:3,hash:"selected-options-appearance"},{text:"Limit the selected options to be displayed",level:3,hash:"limit-the-selected-options-to-be-displayed"},{text:"Sizes",level:3,hash:"sizes"},{text:"Custom filter",level:3,hash:"custom-filter"},{text:"Advanced filter",level:3,hash:"advanced-filter"}]},{text:"CSS variables playground",level:2,hash:"css-variables-playground",children:[]},{text:"Common examples",level:2,hash:"common-examples",children:[{text:"Hint",level:3,hash:"hint"},{text:"Highlighting options",level:3,hash:"highlighting-options"},{text:"GitHub&#39;s picker",level:3,hash:"githubs-picker"},{text:"Virtualization",level:3,hash:"virtualization"}]},{text:"Events",level:2,hash:"events",children:[]},{text:"Limitations",level:2,hash:"limitations",children:[{text:"autocomplete/autofill",level:3,hash:"autocomplete-autofill"},{text:"iOS VoiceOver",level:3,hash:"ios-voiceover"}]},{text:"Accessibility",level:2,hash:"accessibility",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"React Autocomplete component",headers:{productId:"joy-ui",title:"React Autocomplete component",components:["Autocomplete","AutocompleteListbox","AutocompleteOption"],githubLabel:"component: autocomplete",waiAria:"https://www.w3.org/WAI/ARIA/apg/patterns/combobox/",hooks:[]}}},nr={"CountrySelect.js":{module:"./CountrySelect.js",raw:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport ListItemDecorator from '@mui/joy/ListItemDecorator';\nimport ListItemContent from '@mui/joy/ListItemContent';\nimport Typography from '@mui/joy/Typography';\n\nexport default function CountrySelect() {\n  return (\n    <Autocomplete\n      id=\"country-select-demo\"\n      placeholder=\"Choose a country\"\n      slotProps={{\n        input: {\n          autoComplete: 'new-password', // disable autocomplete and autofill\n        },\n      }}\n      sx={{ width: 300 }}\n      options={countries}\n      autoHighlight\n      getOptionLabel={(option) => option.label}\n      renderOption={(props, option) => (\n        <AutocompleteOption {...props}>\n          <ListItemDecorator>\n            <img\n              loading=\"lazy\"\n              width=\"20\"\n              srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\n              src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\n              alt=\"\"\n            />\n          </ListItemDecorator>\n          <ListItemContent sx={{ fontSize: 'sm' }}>\n            {option.label}\n            <Typography level=\"body-xs\">\n              ({option.code}) +{option.phone}\n            </Typography>\n          </ListItemContent>\n        </AutocompleteOption>\n      )}\n    />\n  );\n}\n\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\nconst countries = [\n  { code: 'AD', label: 'Andorra', phone: '376' },\n  {\n    code: 'AE',\n    label: 'United Arab Emirates',\n    phone: '971',\n  },\n  { code: 'AF', label: 'Afghanistan', phone: '93' },\n  {\n    code: 'AG',\n    label: 'Antigua and Barbuda',\n    phone: '1-268',\n  },\n  { code: 'AI', label: 'Anguilla', phone: '1-264' },\n  { code: 'AL', label: 'Albania', phone: '355' },\n  { code: 'AM', label: 'Armenia', phone: '374' },\n  { code: 'AO', label: 'Angola', phone: '244' },\n  { code: 'AQ', label: 'Antarctica', phone: '672' },\n  { code: 'AR', label: 'Argentina', phone: '54' },\n  { code: 'AS', label: 'American Samoa', phone: '1-684' },\n  { code: 'AT', label: 'Austria', phone: '43' },\n  {\n    code: 'AU',\n    label: 'Australia',\n    phone: '61',\n    suggested: true,\n  },\n  { code: 'AW', label: 'Aruba', phone: '297' },\n  { code: 'AX', label: 'Alland Islands', phone: '358' },\n  { code: 'AZ', label: 'Azerbaijan', phone: '994' },\n  {\n    code: 'BA',\n    label: 'Bosnia and Herzegovina',\n    phone: '387',\n  },\n  { code: 'BB', label: 'Barbados', phone: '1-246' },\n  { code: 'BD', label: 'Bangladesh', phone: '880' },\n  { code: 'BE', label: 'Belgium', phone: '32' },\n  { code: 'BF', label: 'Burkina Faso', phone: '226' },\n  { code: 'BG', label: 'Bulgaria', phone: '359' },\n  { code: 'BH', label: 'Bahrain', phone: '973' },\n  { code: 'BI', label: 'Burundi', phone: '257' },\n  { code: 'BJ', label: 'Benin', phone: '229' },\n  { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\n  { code: 'BM', label: 'Bermuda', phone: '1-441' },\n  { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\n  { code: 'BO', label: 'Bolivia', phone: '591' },\n  { code: 'BR', label: 'Brazil', phone: '55' },\n  { code: 'BS', label: 'Bahamas', phone: '1-242' },\n  { code: 'BT', label: 'Bhutan', phone: '975' },\n  { code: 'BV', label: 'Bouvet Island', phone: '47' },\n  { code: 'BW', label: 'Botswana', phone: '267' },\n  { code: 'BY', label: 'Belarus', phone: '375' },\n  { code: 'BZ', label: 'Belize', phone: '501' },\n  {\n    code: 'CA',\n    label: 'Canada',\n    phone: '1',\n    suggested: true,\n  },\n  {\n    code: 'CC',\n    label: 'Cocos (Keeling) Islands',\n    phone: '61',\n  },\n  {\n    code: 'CD',\n    label: 'Congo, Democratic Republic of the',\n    phone: '243',\n  },\n  {\n    code: 'CF',\n    label: 'Central African Republic',\n    phone: '236',\n  },\n  {\n    code: 'CG',\n    label: 'Congo, Republic of the',\n    phone: '242',\n  },\n  { code: 'CH', label: 'Switzerland', phone: '41' },\n  { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\n  { code: 'CK', label: 'Cook Islands', phone: '682' },\n  { code: 'CL', label: 'Chile', phone: '56' },\n  { code: 'CM', label: 'Cameroon', phone: '237' },\n  { code: 'CN', label: 'China', phone: '86' },\n  { code: 'CO', label: 'Colombia', phone: '57' },\n  { code: 'CR', label: 'Costa Rica', phone: '506' },\n  { code: 'CU', label: 'Cuba', phone: '53' },\n  { code: 'CV', label: 'Cape Verde', phone: '238' },\n  { code: 'CW', label: 'Curacao', phone: '599' },\n  { code: 'CX', label: 'Christmas Island', phone: '61' },\n  { code: 'CY', label: 'Cyprus', phone: '357' },\n  { code: 'CZ', label: 'Czech Republic', phone: '420' },\n  {\n    code: 'DE',\n    label: 'Germany',\n    phone: '49',\n    suggested: true,\n  },\n  { code: 'DJ', label: 'Djibouti', phone: '253' },\n  { code: 'DK', label: 'Denmark', phone: '45' },\n  { code: 'DM', label: 'Dominica', phone: '1-767' },\n  {\n    code: 'DO',\n    label: 'Dominican Republic',\n    phone: '1-809',\n  },\n  { code: 'DZ', label: 'Algeria', phone: '213' },\n  { code: 'EC', label: 'Ecuador', phone: '593' },\n  { code: 'EE', label: 'Estonia', phone: '372' },\n  { code: 'EG', label: 'Egypt', phone: '20' },\n  { code: 'EH', label: 'Western Sahara', phone: '212' },\n  { code: 'ER', label: 'Eritrea', phone: '291' },\n  { code: 'ES', label: 'Spain', phone: '34' },\n  { code: 'ET', label: 'Ethiopia', phone: '251' },\n  { code: 'FI', label: 'Finland', phone: '358' },\n  { code: 'FJ', label: 'Fiji', phone: '679' },\n  {\n    code: 'FK',\n    label: 'Falkland Islands (Malvinas)',\n    phone: '500',\n  },\n  {\n    code: 'FM',\n    label: 'Micronesia, Federated States of',\n    phone: '691',\n  },\n  { code: 'FO', label: 'Faroe Islands', phone: '298' },\n  {\n    code: 'FR',\n    label: 'France',\n    phone: '33',\n    suggested: true,\n  },\n  { code: 'GA', label: 'Gabon', phone: '241' },\n  { code: 'GB', label: 'United Kingdom', phone: '44' },\n  { code: 'GD', label: 'Grenada', phone: '1-473' },\n  { code: 'GE', label: 'Georgia', phone: '995' },\n  { code: 'GF', label: 'French Guiana', phone: '594' },\n  { code: 'GG', label: 'Guernsey', phone: '44' },\n  { code: 'GH', label: 'Ghana', phone: '233' },\n  { code: 'GI', label: 'Gibraltar', phone: '350' },\n  { code: 'GL', label: 'Greenland', phone: '299' },\n  { code: 'GM', label: 'Gambia', phone: '220' },\n  { code: 'GN', label: 'Guinea', phone: '224' },\n  { code: 'GP', label: 'Guadeloupe', phone: '590' },\n  { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\n  { code: 'GR', label: 'Greece', phone: '30' },\n  {\n    code: 'GS',\n    label: 'South Georgia and the South Sandwich Islands',\n    phone: '500',\n  },\n  { code: 'GT', label: 'Guatemala', phone: '502' },\n  { code: 'GU', label: 'Guam', phone: '1-671' },\n  { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\n  { code: 'GY', label: 'Guyana', phone: '592' },\n  { code: 'HK', label: 'Hong Kong', phone: '852' },\n  {\n    code: 'HM',\n    label: 'Heard Island and McDonald Islands',\n    phone: '672',\n  },\n  { code: 'HN', label: 'Honduras', phone: '504' },\n  { code: 'HR', label: 'Croatia', phone: '385' },\n  { code: 'HT', label: 'Haiti', phone: '509' },\n  { code: 'HU', label: 'Hungary', phone: '36' },\n  { code: 'ID', label: 'Indonesia', phone: '62' },\n  { code: 'IE', label: 'Ireland', phone: '353' },\n  { code: 'IL', label: 'Israel', phone: '972' },\n  { code: 'IM', label: 'Isle of Man', phone: '44' },\n  { code: 'IN', label: 'India', phone: '91' },\n  {\n    code: 'IO',\n    label: 'British Indian Ocean Territory',\n    phone: '246',\n  },\n  { code: 'IQ', label: 'Iraq', phone: '964' },\n  {\n    code: 'IR',\n    label: 'Iran, Islamic Republic of',\n    phone: '98',\n  },\n  { code: 'IS', label: 'Iceland', phone: '354' },\n  { code: 'IT', label: 'Italy', phone: '39' },\n  { code: 'JE', label: 'Jersey', phone: '44' },\n  { code: 'JM', label: 'Jamaica', phone: '1-876' },\n  { code: 'JO', label: 'Jordan', phone: '962' },\n  {\n    code: 'JP',\n    label: 'Japan',\n    phone: '81',\n    suggested: true,\n  },\n  { code: 'KE', label: 'Kenya', phone: '254' },\n  { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\n  { code: 'KH', label: 'Cambodia', phone: '855' },\n  { code: 'KI', label: 'Kiribati', phone: '686' },\n  { code: 'KM', label: 'Comoros', phone: '269' },\n  {\n    code: 'KN',\n    label: 'Saint Kitts and Nevis',\n    phone: '1-869',\n  },\n  {\n    code: 'KP',\n    label: \"Korea, Democratic People's Republic of\",\n    phone: '850',\n  },\n  { code: 'KR', label: 'Korea, Republic of', phone: '82' },\n  { code: 'KW', label: 'Kuwait', phone: '965' },\n  { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\n  { code: 'KZ', label: 'Kazakhstan', phone: '7' },\n  {\n    code: 'LA',\n    label: \"Lao People's Democratic Republic\",\n    phone: '856',\n  },\n  { code: 'LB', label: 'Lebanon', phone: '961' },\n  { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\n  { code: 'LI', label: 'Liechtenstein', phone: '423' },\n  { code: 'LK', label: 'Sri Lanka', phone: '94' },\n  { code: 'LR', label: 'Liberia', phone: '231' },\n  { code: 'LS', label: 'Lesotho', phone: '266' },\n  { code: 'LT', label: 'Lithuania', phone: '370' },\n  { code: 'LU', label: 'Luxembourg', phone: '352' },\n  { code: 'LV', label: 'Latvia', phone: '371' },\n  { code: 'LY', label: 'Libya', phone: '218' },\n  { code: 'MA', label: 'Morocco', phone: '212' },\n  { code: 'MC', label: 'Monaco', phone: '377' },\n  {\n    code: 'MD',\n    label: 'Moldova, Republic of',\n    phone: '373',\n  },\n  { code: 'ME', label: 'Montenegro', phone: '382' },\n  {\n    code: 'MF',\n    label: 'Saint Martin (French part)',\n    phone: '590',\n  },\n  { code: 'MG', label: 'Madagascar', phone: '261' },\n  { code: 'MH', label: 'Marshall Islands', phone: '692' },\n  {\n    code: 'MK',\n    label: 'Macedonia, the Former Yugoslav Republic of',\n    phone: '389',\n  },\n  { code: 'ML', label: 'Mali', phone: '223' },\n  { code: 'MM', label: 'Myanmar', phone: '95' },\n  { code: 'MN', label: 'Mongolia', phone: '976' },\n  { code: 'MO', label: 'Macao', phone: '853' },\n  {\n    code: 'MP',\n    label: 'Northern Mariana Islands',\n    phone: '1-670',\n  },\n  { code: 'MQ', label: 'Martinique', phone: '596' },\n  { code: 'MR', label: 'Mauritania', phone: '222' },\n  { code: 'MS', label: 'Montserrat', phone: '1-664' },\n  { code: 'MT', label: 'Malta', phone: '356' },\n  { code: 'MU', label: 'Mauritius', phone: '230' },\n  { code: 'MV', label: 'Maldives', phone: '960' },\n  { code: 'MW', label: 'Malawi', phone: '265' },\n  { code: 'MX', label: 'Mexico', phone: '52' },\n  { code: 'MY', label: 'Malaysia', phone: '60' },\n  { code: 'MZ', label: 'Mozambique', phone: '258' },\n  { code: 'NA', label: 'Namibia', phone: '264' },\n  { code: 'NC', label: 'New Caledonia', phone: '687' },\n  { code: 'NE', label: 'Niger', phone: '227' },\n  { code: 'NF', label: 'Norfolk Island', phone: '672' },\n  { code: 'NG', label: 'Nigeria', phone: '234' },\n  { code: 'NI', label: 'Nicaragua', phone: '505' },\n  { code: 'NL', label: 'Netherlands', phone: '31' },\n  { code: 'NO', label: 'Norway', phone: '47' },\n  { code: 'NP', label: 'Nepal', phone: '977' },\n  { code: 'NR', label: 'Nauru', phone: '674' },\n  { code: 'NU', label: 'Niue', phone: '683' },\n  { code: 'NZ', label: 'New Zealand', phone: '64' },\n  { code: 'OM', label: 'Oman', phone: '968' },\n  { code: 'PA', label: 'Panama', phone: '507' },\n  { code: 'PE', label: 'Peru', phone: '51' },\n  { code: 'PF', label: 'French Polynesia', phone: '689' },\n  { code: 'PG', label: 'Papua New Guinea', phone: '675' },\n  { code: 'PH', label: 'Philippines', phone: '63' },\n  { code: 'PK', label: 'Pakistan', phone: '92' },\n  { code: 'PL', label: 'Poland', phone: '48' },\n  {\n    code: 'PM',\n    label: 'Saint Pierre and Miquelon',\n    phone: '508',\n  },\n  { code: 'PN', label: 'Pitcairn', phone: '870' },\n  { code: 'PR', label: 'Puerto Rico', phone: '1' },\n  {\n    code: 'PS',\n    label: 'Palestine, State of',\n    phone: '970',\n  },\n  { code: 'PT', label: 'Portugal', phone: '351' },\n  { code: 'PW', label: 'Palau', phone: '680' },\n  { code: 'PY', label: 'Paraguay', phone: '595' },\n  { code: 'QA', label: 'Qatar', phone: '974' },\n  { code: 'RE', label: 'Reunion', phone: '262' },\n  { code: 'RO', label: 'Romania', phone: '40' },\n  { code: 'RS', label: 'Serbia', phone: '381' },\n  { code: 'RU', label: 'Russian Federation', phone: '7' },\n  { code: 'RW', label: 'Rwanda', phone: '250' },\n  { code: 'SA', label: 'Saudi Arabia', phone: '966' },\n  { code: 'SB', label: 'Solomon Islands', phone: '677' },\n  { code: 'SC', label: 'Seychelles', phone: '248' },\n  { code: 'SD', label: 'Sudan', phone: '249' },\n  { code: 'SE', label: 'Sweden', phone: '46' },\n  { code: 'SG', label: 'Singapore', phone: '65' },\n  { code: 'SH', label: 'Saint Helena', phone: '290' },\n  { code: 'SI', label: 'Slovenia', phone: '386' },\n  {\n    code: 'SJ',\n    label: 'Svalbard and Jan Mayen',\n    phone: '47',\n  },\n  { code: 'SK', label: 'Slovakia', phone: '421' },\n  { code: 'SL', label: 'Sierra Leone', phone: '232' },\n  { code: 'SM', label: 'San Marino', phone: '378' },\n  { code: 'SN', label: 'Senegal', phone: '221' },\n  { code: 'SO', label: 'Somalia', phone: '252' },\n  { code: 'SR', label: 'Suriname', phone: '597' },\n  { code: 'SS', label: 'South Sudan', phone: '211' },\n  {\n    code: 'ST',\n    label: 'Sao Tome and Principe',\n    phone: '239',\n  },\n  { code: 'SV', label: 'El Salvador', phone: '503' },\n  {\n    code: 'SX',\n    label: 'Sint Maarten (Dutch part)',\n    phone: '1-721',\n  },\n  {\n    code: 'SY',\n    label: 'Syrian Arab Republic',\n    phone: '963',\n  },\n  { code: 'SZ', label: 'Swaziland', phone: '268' },\n  {\n    code: 'TC',\n    label: 'Turks and Caicos Islands',\n    phone: '1-649',\n  },\n  { code: 'TD', label: 'Chad', phone: '235' },\n  {\n    code: 'TF',\n    label: 'French Southern Territories',\n    phone: '262',\n  },\n  { code: 'TG', label: 'Togo', phone: '228' },\n  { code: 'TH', label: 'Thailand', phone: '66' },\n  { code: 'TJ', label: 'Tajikistan', phone: '992' },\n  { code: 'TK', label: 'Tokelau', phone: '690' },\n  { code: 'TL', label: 'Timor-Leste', phone: '670' },\n  { code: 'TM', label: 'Turkmenistan', phone: '993' },\n  { code: 'TN', label: 'Tunisia', phone: '216' },\n  { code: 'TO', label: 'Tonga', phone: '676' },\n  { code: 'TR', label: 'Turkey', phone: '90' },\n  {\n    code: 'TT',\n    label: 'Trinidad and Tobago',\n    phone: '1-868',\n  },\n  { code: 'TV', label: 'Tuvalu', phone: '688' },\n  {\n    code: 'TW',\n    label: 'Taiwan, Province of China',\n    phone: '886',\n  },\n  {\n    code: 'TZ',\n    label: 'United Republic of Tanzania',\n    phone: '255',\n  },\n  { code: 'UA', label: 'Ukraine', phone: '380' },\n  { code: 'UG', label: 'Uganda', phone: '256' },\n  {\n    code: 'US',\n    label: 'United States',\n    phone: '1',\n    suggested: true,\n  },\n  { code: 'UY', label: 'Uruguay', phone: '598' },\n  { code: 'UZ', label: 'Uzbekistan', phone: '998' },\n  {\n    code: 'VA',\n    label: 'Holy See (Vatican City State)',\n    phone: '379',\n  },\n  {\n    code: 'VC',\n    label: 'Saint Vincent and the Grenadines',\n    phone: '1-784',\n  },\n  { code: 'VE', label: 'Venezuela', phone: '58' },\n  {\n    code: 'VG',\n    label: 'British Virgin Islands',\n    phone: '1-284',\n  },\n  {\n    code: 'VI',\n    label: 'US Virgin Islands',\n    phone: '1-340',\n  },\n  { code: 'VN', label: 'Vietnam', phone: '84' },\n  { code: 'VU', label: 'Vanuatu', phone: '678' },\n  { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\n  { code: 'WS', label: 'Samoa', phone: '685' },\n  { code: 'XK', label: 'Kosovo', phone: '383' },\n  { code: 'YE', label: 'Yemen', phone: '967' },\n  { code: 'YT', label: 'Mayotte', phone: '262' },\n  { code: 'ZA', label: 'South Africa', phone: '27' },\n  { code: 'ZM', label: 'Zambia', phone: '260' },\n  { code: 'ZW', label: 'Zimbabwe', phone: '263' },\n];\n",moduleTS:"./CountrySelect.js",rawTS:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport ListItemDecorator from '@mui/joy/ListItemDecorator';\nimport ListItemContent from '@mui/joy/ListItemContent';\nimport Typography from '@mui/joy/Typography';\n\nexport default function CountrySelect() {\n  return (\n    <Autocomplete\n      id=\"country-select-demo\"\n      placeholder=\"Choose a country\"\n      slotProps={{\n        input: {\n          autoComplete: 'new-password', // disable autocomplete and autofill\n        },\n      }}\n      sx={{ width: 300 }}\n      options={countries}\n      autoHighlight\n      getOptionLabel={(option) => option.label}\n      renderOption={(props, option) => (\n        <AutocompleteOption {...props}>\n          <ListItemDecorator>\n            <img\n              loading=\"lazy\"\n              width=\"20\"\n              srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\n              src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\n              alt=\"\"\n            />\n          </ListItemDecorator>\n          <ListItemContent sx={{ fontSize: 'sm' }}>\n            {option.label}\n            <Typography level=\"body-xs\">\n              ({option.code}) +{option.phone}\n            </Typography>\n          </ListItemContent>\n        </AutocompleteOption>\n      )}\n    />\n  );\n}\n\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\nconst countries = [\n  { code: 'AD', label: 'Andorra', phone: '376' },\n  {\n    code: 'AE',\n    label: 'United Arab Emirates',\n    phone: '971',\n  },\n  { code: 'AF', label: 'Afghanistan', phone: '93' },\n  {\n    code: 'AG',\n    label: 'Antigua and Barbuda',\n    phone: '1-268',\n  },\n  { code: 'AI', label: 'Anguilla', phone: '1-264' },\n  { code: 'AL', label: 'Albania', phone: '355' },\n  { code: 'AM', label: 'Armenia', phone: '374' },\n  { code: 'AO', label: 'Angola', phone: '244' },\n  { code: 'AQ', label: 'Antarctica', phone: '672' },\n  { code: 'AR', label: 'Argentina', phone: '54' },\n  { code: 'AS', label: 'American Samoa', phone: '1-684' },\n  { code: 'AT', label: 'Austria', phone: '43' },\n  {\n    code: 'AU',\n    label: 'Australia',\n    phone: '61',\n    suggested: true,\n  },\n  { code: 'AW', label: 'Aruba', phone: '297' },\n  { code: 'AX', label: 'Alland Islands', phone: '358' },\n  { code: 'AZ', label: 'Azerbaijan', phone: '994' },\n  {\n    code: 'BA',\n    label: 'Bosnia and Herzegovina',\n    phone: '387',\n  },\n  { code: 'BB', label: 'Barbados', phone: '1-246' },\n  { code: 'BD', label: 'Bangladesh', phone: '880' },\n  { code: 'BE', label: 'Belgium', phone: '32' },\n  { code: 'BF', label: 'Burkina Faso', phone: '226' },\n  { code: 'BG', label: 'Bulgaria', phone: '359' },\n  { code: 'BH', label: 'Bahrain', phone: '973' },\n  { code: 'BI', label: 'Burundi', phone: '257' },\n  { code: 'BJ', label: 'Benin', phone: '229' },\n  { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\n  { code: 'BM', label: 'Bermuda', phone: '1-441' },\n  { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\n  { code: 'BO', label: 'Bolivia', phone: '591' },\n  { code: 'BR', label: 'Brazil', phone: '55' },\n  { code: 'BS', label: 'Bahamas', phone: '1-242' },\n  { code: 'BT', label: 'Bhutan', phone: '975' },\n  { code: 'BV', label: 'Bouvet Island', phone: '47' },\n  { code: 'BW', label: 'Botswana', phone: '267' },\n  { code: 'BY', label: 'Belarus', phone: '375' },\n  { code: 'BZ', label: 'Belize', phone: '501' },\n  {\n    code: 'CA',\n    label: 'Canada',\n    phone: '1',\n    suggested: true,\n  },\n  {\n    code: 'CC',\n    label: 'Cocos (Keeling) Islands',\n    phone: '61',\n  },\n  {\n    code: 'CD',\n    label: 'Congo, Democratic Republic of the',\n    phone: '243',\n  },\n  {\n    code: 'CF',\n    label: 'Central African Republic',\n    phone: '236',\n  },\n  {\n    code: 'CG',\n    label: 'Congo, Republic of the',\n    phone: '242',\n  },\n  { code: 'CH', label: 'Switzerland', phone: '41' },\n  { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\n  { code: 'CK', label: 'Cook Islands', phone: '682' },\n  { code: 'CL', label: 'Chile', phone: '56' },\n  { code: 'CM', label: 'Cameroon', phone: '237' },\n  { code: 'CN', label: 'China', phone: '86' },\n  { code: 'CO', label: 'Colombia', phone: '57' },\n  { code: 'CR', label: 'Costa Rica', phone: '506' },\n  { code: 'CU', label: 'Cuba', phone: '53' },\n  { code: 'CV', label: 'Cape Verde', phone: '238' },\n  { code: 'CW', label: 'Curacao', phone: '599' },\n  { code: 'CX', label: 'Christmas Island', phone: '61' },\n  { code: 'CY', label: 'Cyprus', phone: '357' },\n  { code: 'CZ', label: 'Czech Republic', phone: '420' },\n  {\n    code: 'DE',\n    label: 'Germany',\n    phone: '49',\n    suggested: true,\n  },\n  { code: 'DJ', label: 'Djibouti', phone: '253' },\n  { code: 'DK', label: 'Denmark', phone: '45' },\n  { code: 'DM', label: 'Dominica', phone: '1-767' },\n  {\n    code: 'DO',\n    label: 'Dominican Republic',\n    phone: '1-809',\n  },\n  { code: 'DZ', label: 'Algeria', phone: '213' },\n  { code: 'EC', label: 'Ecuador', phone: '593' },\n  { code: 'EE', label: 'Estonia', phone: '372' },\n  { code: 'EG', label: 'Egypt', phone: '20' },\n  { code: 'EH', label: 'Western Sahara', phone: '212' },\n  { code: 'ER', label: 'Eritrea', phone: '291' },\n  { code: 'ES', label: 'Spain', phone: '34' },\n  { code: 'ET', label: 'Ethiopia', phone: '251' },\n  { code: 'FI', label: 'Finland', phone: '358' },\n  { code: 'FJ', label: 'Fiji', phone: '679' },\n  {\n    code: 'FK',\n    label: 'Falkland Islands (Malvinas)',\n    phone: '500',\n  },\n  {\n    code: 'FM',\n    label: 'Micronesia, Federated States of',\n    phone: '691',\n  },\n  { code: 'FO', label: 'Faroe Islands', phone: '298' },\n  {\n    code: 'FR',\n    label: 'France',\n    phone: '33',\n    suggested: true,\n  },\n  { code: 'GA', label: 'Gabon', phone: '241' },\n  { code: 'GB', label: 'United Kingdom', phone: '44' },\n  { code: 'GD', label: 'Grenada', phone: '1-473' },\n  { code: 'GE', label: 'Georgia', phone: '995' },\n  { code: 'GF', label: 'French Guiana', phone: '594' },\n  { code: 'GG', label: 'Guernsey', phone: '44' },\n  { code: 'GH', label: 'Ghana', phone: '233' },\n  { code: 'GI', label: 'Gibraltar', phone: '350' },\n  { code: 'GL', label: 'Greenland', phone: '299' },\n  { code: 'GM', label: 'Gambia', phone: '220' },\n  { code: 'GN', label: 'Guinea', phone: '224' },\n  { code: 'GP', label: 'Guadeloupe', phone: '590' },\n  { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\n  { code: 'GR', label: 'Greece', phone: '30' },\n  {\n    code: 'GS',\n    label: 'South Georgia and the South Sandwich Islands',\n    phone: '500',\n  },\n  { code: 'GT', label: 'Guatemala', phone: '502' },\n  { code: 'GU', label: 'Guam', phone: '1-671' },\n  { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\n  { code: 'GY', label: 'Guyana', phone: '592' },\n  { code: 'HK', label: 'Hong Kong', phone: '852' },\n  {\n    code: 'HM',\n    label: 'Heard Island and McDonald Islands',\n    phone: '672',\n  },\n  { code: 'HN', label: 'Honduras', phone: '504' },\n  { code: 'HR', label: 'Croatia', phone: '385' },\n  { code: 'HT', label: 'Haiti', phone: '509' },\n  { code: 'HU', label: 'Hungary', phone: '36' },\n  { code: 'ID', label: 'Indonesia', phone: '62' },\n  { code: 'IE', label: 'Ireland', phone: '353' },\n  { code: 'IL', label: 'Israel', phone: '972' },\n  { code: 'IM', label: 'Isle of Man', phone: '44' },\n  { code: 'IN', label: 'India', phone: '91' },\n  {\n    code: 'IO',\n    label: 'British Indian Ocean Territory',\n    phone: '246',\n  },\n  { code: 'IQ', label: 'Iraq', phone: '964' },\n  {\n    code: 'IR',\n    label: 'Iran, Islamic Republic of',\n    phone: '98',\n  },\n  { code: 'IS', label: 'Iceland', phone: '354' },\n  { code: 'IT', label: 'Italy', phone: '39' },\n  { code: 'JE', label: 'Jersey', phone: '44' },\n  { code: 'JM', label: 'Jamaica', phone: '1-876' },\n  { code: 'JO', label: 'Jordan', phone: '962' },\n  {\n    code: 'JP',\n    label: 'Japan',\n    phone: '81',\n    suggested: true,\n  },\n  { code: 'KE', label: 'Kenya', phone: '254' },\n  { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\n  { code: 'KH', label: 'Cambodia', phone: '855' },\n  { code: 'KI', label: 'Kiribati', phone: '686' },\n  { code: 'KM', label: 'Comoros', phone: '269' },\n  {\n    code: 'KN',\n    label: 'Saint Kitts and Nevis',\n    phone: '1-869',\n  },\n  {\n    code: 'KP',\n    label: \"Korea, Democratic People's Republic of\",\n    phone: '850',\n  },\n  { code: 'KR', label: 'Korea, Republic of', phone: '82' },\n  { code: 'KW', label: 'Kuwait', phone: '965' },\n  { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\n  { code: 'KZ', label: 'Kazakhstan', phone: '7' },\n  {\n    code: 'LA',\n    label: \"Lao People's Democratic Republic\",\n    phone: '856',\n  },\n  { code: 'LB', label: 'Lebanon', phone: '961' },\n  { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\n  { code: 'LI', label: 'Liechtenstein', phone: '423' },\n  { code: 'LK', label: 'Sri Lanka', phone: '94' },\n  { code: 'LR', label: 'Liberia', phone: '231' },\n  { code: 'LS', label: 'Lesotho', phone: '266' },\n  { code: 'LT', label: 'Lithuania', phone: '370' },\n  { code: 'LU', label: 'Luxembourg', phone: '352' },\n  { code: 'LV', label: 'Latvia', phone: '371' },\n  { code: 'LY', label: 'Libya', phone: '218' },\n  { code: 'MA', label: 'Morocco', phone: '212' },\n  { code: 'MC', label: 'Monaco', phone: '377' },\n  {\n    code: 'MD',\n    label: 'Moldova, Republic of',\n    phone: '373',\n  },\n  { code: 'ME', label: 'Montenegro', phone: '382' },\n  {\n    code: 'MF',\n    label: 'Saint Martin (French part)',\n    phone: '590',\n  },\n  { code: 'MG', label: 'Madagascar', phone: '261' },\n  { code: 'MH', label: 'Marshall Islands', phone: '692' },\n  {\n    code: 'MK',\n    label: 'Macedonia, the Former Yugoslav Republic of',\n    phone: '389',\n  },\n  { code: 'ML', label: 'Mali', phone: '223' },\n  { code: 'MM', label: 'Myanmar', phone: '95' },\n  { code: 'MN', label: 'Mongolia', phone: '976' },\n  { code: 'MO', label: 'Macao', phone: '853' },\n  {\n    code: 'MP',\n    label: 'Northern Mariana Islands',\n    phone: '1-670',\n  },\n  { code: 'MQ', label: 'Martinique', phone: '596' },\n  { code: 'MR', label: 'Mauritania', phone: '222' },\n  { code: 'MS', label: 'Montserrat', phone: '1-664' },\n  { code: 'MT', label: 'Malta', phone: '356' },\n  { code: 'MU', label: 'Mauritius', phone: '230' },\n  { code: 'MV', label: 'Maldives', phone: '960' },\n  { code: 'MW', label: 'Malawi', phone: '265' },\n  { code: 'MX', label: 'Mexico', phone: '52' },\n  { code: 'MY', label: 'Malaysia', phone: '60' },\n  { code: 'MZ', label: 'Mozambique', phone: '258' },\n  { code: 'NA', label: 'Namibia', phone: '264' },\n  { code: 'NC', label: 'New Caledonia', phone: '687' },\n  { code: 'NE', label: 'Niger', phone: '227' },\n  { code: 'NF', label: 'Norfolk Island', phone: '672' },\n  { code: 'NG', label: 'Nigeria', phone: '234' },\n  { code: 'NI', label: 'Nicaragua', phone: '505' },\n  { code: 'NL', label: 'Netherlands', phone: '31' },\n  { code: 'NO', label: 'Norway', phone: '47' },\n  { code: 'NP', label: 'Nepal', phone: '977' },\n  { code: 'NR', label: 'Nauru', phone: '674' },\n  { code: 'NU', label: 'Niue', phone: '683' },\n  { code: 'NZ', label: 'New Zealand', phone: '64' },\n  { code: 'OM', label: 'Oman', phone: '968' },\n  { code: 'PA', label: 'Panama', phone: '507' },\n  { code: 'PE', label: 'Peru', phone: '51' },\n  { code: 'PF', label: 'French Polynesia', phone: '689' },\n  { code: 'PG', label: 'Papua New Guinea', phone: '675' },\n  { code: 'PH', label: 'Philippines', phone: '63' },\n  { code: 'PK', label: 'Pakistan', phone: '92' },\n  { code: 'PL', label: 'Poland', phone: '48' },\n  {\n    code: 'PM',\n    label: 'Saint Pierre and Miquelon',\n    phone: '508',\n  },\n  { code: 'PN', label: 'Pitcairn', phone: '870' },\n  { code: 'PR', label: 'Puerto Rico', phone: '1' },\n  {\n    code: 'PS',\n    label: 'Palestine, State of',\n    phone: '970',\n  },\n  { code: 'PT', label: 'Portugal', phone: '351' },\n  { code: 'PW', label: 'Palau', phone: '680' },\n  { code: 'PY', label: 'Paraguay', phone: '595' },\n  { code: 'QA', label: 'Qatar', phone: '974' },\n  { code: 'RE', label: 'Reunion', phone: '262' },\n  { code: 'RO', label: 'Romania', phone: '40' },\n  { code: 'RS', label: 'Serbia', phone: '381' },\n  { code: 'RU', label: 'Russian Federation', phone: '7' },\n  { code: 'RW', label: 'Rwanda', phone: '250' },\n  { code: 'SA', label: 'Saudi Arabia', phone: '966' },\n  { code: 'SB', label: 'Solomon Islands', phone: '677' },\n  { code: 'SC', label: 'Seychelles', phone: '248' },\n  { code: 'SD', label: 'Sudan', phone: '249' },\n  { code: 'SE', label: 'Sweden', phone: '46' },\n  { code: 'SG', label: 'Singapore', phone: '65' },\n  { code: 'SH', label: 'Saint Helena', phone: '290' },\n  { code: 'SI', label: 'Slovenia', phone: '386' },\n  {\n    code: 'SJ',\n    label: 'Svalbard and Jan Mayen',\n    phone: '47',\n  },\n  { code: 'SK', label: 'Slovakia', phone: '421' },\n  { code: 'SL', label: 'Sierra Leone', phone: '232' },\n  { code: 'SM', label: 'San Marino', phone: '378' },\n  { code: 'SN', label: 'Senegal', phone: '221' },\n  { code: 'SO', label: 'Somalia', phone: '252' },\n  { code: 'SR', label: 'Suriname', phone: '597' },\n  { code: 'SS', label: 'South Sudan', phone: '211' },\n  {\n    code: 'ST',\n    label: 'Sao Tome and Principe',\n    phone: '239',\n  },\n  { code: 'SV', label: 'El Salvador', phone: '503' },\n  {\n    code: 'SX',\n    label: 'Sint Maarten (Dutch part)',\n    phone: '1-721',\n  },\n  {\n    code: 'SY',\n    label: 'Syrian Arab Republic',\n    phone: '963',\n  },\n  { code: 'SZ', label: 'Swaziland', phone: '268' },\n  {\n    code: 'TC',\n    label: 'Turks and Caicos Islands',\n    phone: '1-649',\n  },\n  { code: 'TD', label: 'Chad', phone: '235' },\n  {\n    code: 'TF',\n    label: 'French Southern Territories',\n    phone: '262',\n  },\n  { code: 'TG', label: 'Togo', phone: '228' },\n  { code: 'TH', label: 'Thailand', phone: '66' },\n  { code: 'TJ', label: 'Tajikistan', phone: '992' },\n  { code: 'TK', label: 'Tokelau', phone: '690' },\n  { code: 'TL', label: 'Timor-Leste', phone: '670' },\n  { code: 'TM', label: 'Turkmenistan', phone: '993' },\n  { code: 'TN', label: 'Tunisia', phone: '216' },\n  { code: 'TO', label: 'Tonga', phone: '676' },\n  { code: 'TR', label: 'Turkey', phone: '90' },\n  {\n    code: 'TT',\n    label: 'Trinidad and Tobago',\n    phone: '1-868',\n  },\n  { code: 'TV', label: 'Tuvalu', phone: '688' },\n  {\n    code: 'TW',\n    label: 'Taiwan, Province of China',\n    phone: '886',\n  },\n  {\n    code: 'TZ',\n    label: 'United Republic of Tanzania',\n    phone: '255',\n  },\n  { code: 'UA', label: 'Ukraine', phone: '380' },\n  { code: 'UG', label: 'Uganda', phone: '256' },\n  {\n    code: 'US',\n    label: 'United States',\n    phone: '1',\n    suggested: true,\n  },\n  { code: 'UY', label: 'Uruguay', phone: '598' },\n  { code: 'UZ', label: 'Uzbekistan', phone: '998' },\n  {\n    code: 'VA',\n    label: 'Holy See (Vatican City State)',\n    phone: '379',\n  },\n  {\n    code: 'VC',\n    label: 'Saint Vincent and the Grenadines',\n    phone: '1-784',\n  },\n  { code: 'VE', label: 'Venezuela', phone: '58' },\n  {\n    code: 'VG',\n    label: 'British Virgin Islands',\n    phone: '1-284',\n  },\n  {\n    code: 'VI',\n    label: 'US Virgin Islands',\n    phone: '1-340',\n  },\n  { code: 'VN', label: 'Vietnam', phone: '84' },\n  { code: 'VU', label: 'Vanuatu', phone: '678' },\n  { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\n  { code: 'WS', label: 'Samoa', phone: '685' },\n  { code: 'XK', label: 'Kosovo', phone: '383' },\n  { code: 'YE', label: 'Yemen', phone: '967' },\n  { code: 'YT', label: 'Mayotte', phone: '262' },\n  { code: 'ZA', label: 'South Africa', phone: '27' },\n  { code: 'ZM', label: 'Zambia', phone: '260' },\n  { code: 'ZW', label: 'Zimbabwe', phone: '263' },\n];\n"},"AutocompleteVariants.js":{module:"./AutocompleteVariants.js",raw:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport Stack from '@mui/joy/Stack';\n\nexport default function AutocompleteVariants() {\n  return (\n    <Stack spacing={1}>\n      <Autocomplete\n        placeholder=\"Outlined variant (default)\"\n        options={top100Films}\n        sx={{ width: 300 }}\n      />\n      <Autocomplete\n        variant=\"soft\"\n        placeholder=\"Soft variant\"\n        options={top100Films}\n        sx={{ width: 300 }}\n      />\n      <Autocomplete\n        variant=\"solid\"\n        placeholder=\"Solid variant\"\n        options={top100Films}\n        renderOption={(props, option) => (\n          <AutocompleteOption variant=\"solid\" {...props}>\n            {option.label}\n          </AutocompleteOption>\n        )}\n        sx={{ width: 300 }}\n      />\n      <Autocomplete\n        variant=\"plain\"\n        placeholder=\"Plain variant\"\n        options={top100Films}\n        sx={{ width: 300 }}\n      />\n    </Stack>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",moduleTS:"./AutocompleteVariants.js",rawTS:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport Stack from '@mui/joy/Stack';\n\nexport default function AutocompleteVariants() {\n  return (\n    <Stack spacing={1}>\n      <Autocomplete\n        placeholder=\"Outlined variant (default)\"\n        options={top100Films}\n        sx={{ width: 300 }}\n      />\n      <Autocomplete\n        variant=\"soft\"\n        placeholder=\"Soft variant\"\n        options={top100Films}\n        sx={{ width: 300 }}\n      />\n      <Autocomplete\n        variant=\"solid\"\n        placeholder=\"Solid variant\"\n        options={top100Films}\n        renderOption={(props, option) => (\n          <AutocompleteOption variant=\"solid\" {...props}>\n            {option.label}\n          </AutocompleteOption>\n        )}\n        sx={{ width: 300 }}\n      />\n      <Autocomplete\n        variant=\"plain\"\n        placeholder=\"Plain variant\"\n        options={top100Films}\n        sx={{ width: 300 }}\n      />\n    </Stack>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"BasicAutocomplete.js":{module:"./BasicAutocomplete.js",raw:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function BasicAutocomplete() {\n  return (\n    <Autocomplete\n      placeholder=\"Combo box\"\n      options={top100Films}\n      sx={{ width: 300 }}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",jsxPreview:'<Autocomplete\n  placeholder="Combo box"\n  options={top100Films}\n  sx={{ width: 300 }}\n/>',moduleTS:"./BasicAutocomplete.js",rawTS:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function BasicAutocomplete() {\n  return (\n    <Autocomplete\n      placeholder=\"Combo box\"\n      options={top100Films}\n      sx={{ width: 300 }}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"LabelAndHelperText.js":{module:"./LabelAndHelperText.js",raw:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport FormHelperText from '@mui/joy/FormHelperText';\n\nexport default function LabelAndHelperText() {\n  return (\n    <FormControl>\n      <FormLabel>Label</FormLabel>\n      <Autocomplete\n        placeholder=\"Placeholder\"\n        options={top100Films}\n        sx={{ width: 300 }}\n      />\n      <FormHelperText>A description for the combo box.</FormHelperText>\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",jsxPreview:'<FormControl>\n  <FormLabel>Label</FormLabel>\n  <Autocomplete\n    placeholder="Placeholder"\n    options={top100Films}\n    sx={{ width: 300 }}\n  />\n  <FormHelperText>A description for the combo box.</FormHelperText>\n</FormControl>',moduleTS:"./LabelAndHelperText.js",rawTS:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport FormHelperText from '@mui/joy/FormHelperText';\n\nexport default function LabelAndHelperText() {\n  return (\n    <FormControl>\n      <FormLabel>Label</FormLabel>\n      <Autocomplete\n        placeholder=\"Placeholder\"\n        options={top100Films}\n        sx={{ width: 300 }}\n      />\n      <FormHelperText>A description for the combo box.</FormHelperText>\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"AutocompleteDecorators.js":{module:"./AutocompleteDecorators.js",raw:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport Stack from '@mui/joy/Stack';\nimport LiveTv from '@mui/icons-material/LiveTv';\n\nexport default function AutocompleteDecorators() {\n  return (\n    <Stack spacing={2}>\n      <Autocomplete\n        startDecorator={<LiveTv />}\n        placeholder=\"Decorators\"\n        options={top100Films}\n      />\n      <Autocomplete\n        multiple\n        startDecorator={<LiveTv />}\n        placeholder=\"Decorators\"\n        options={top100Films}\n        defaultValue={[top100Films[0]]}\n      />\n    </Stack>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",jsxPreview:'<Autocomplete\n  startDecorator={<LiveTv />}\n  placeholder="Decorators"\n  options={top100Films}\n/>\n<Autocomplete\n  multiple\n  startDecorator={<LiveTv />}\n  placeholder="Decorators"\n  options={top100Films}\n  defaultValue={[top100Films[0]]}\n/>',moduleTS:"./AutocompleteDecorators.js",rawTS:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport Stack from '@mui/joy/Stack';\nimport LiveTv from '@mui/icons-material/LiveTv';\n\nexport default function AutocompleteDecorators() {\n  return (\n    <Stack spacing={2}>\n      <Autocomplete\n        startDecorator={<LiveTv />}\n        placeholder=\"Decorators\"\n        options={top100Films}\n      />\n      <Autocomplete\n        multiple\n        startDecorator={<LiveTv />}\n        placeholder=\"Decorators\"\n        options={top100Films}\n        defaultValue={[top100Films[0]]}\n      />\n    </Stack>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"DisabledOptions.js":{module:"./DisabledOptions.js",raw:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function DisabledOptions() {\n  return (\n    <FormControl id=\"disabled-options-demo\">\n      <FormLabel>Disabled options</FormLabel>\n      <Autocomplete\n        options={timeSlots}\n        placeholder=\"Disabled options\"\n        getOptionDisabled={(option) =>\n          option === timeSlots[0] || option === timeSlots[2]\n        }\n        sx={{ width: 300 }}\n      />\n    </FormControl>\n  );\n}\n\n// One time slot every 30 minutes.\nconst timeSlots = Array.from(new Array(24 * 2)).map(\n  (_, index) =>\n    `${index < 20 ? '0' : ''}${Math.floor(index / 2)}:${\n      index % 2 === 0 ? '00' : '30'\n    }`,\n);\n",jsxPreview:'<FormControl id="disabled-options-demo">\n  <FormLabel>Disabled options</FormLabel>\n  <Autocomplete\n    options={timeSlots}\n    placeholder="Disabled options"\n    getOptionDisabled={(option) =>\n      option === timeSlots[0] || option === timeSlots[2]\n    }\n    sx={{ width: 300 }}\n  />\n</FormControl>',moduleTS:"./DisabledOptions.js",rawTS:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function DisabledOptions() {\n  return (\n    <FormControl id=\"disabled-options-demo\">\n      <FormLabel>Disabled options</FormLabel>\n      <Autocomplete\n        options={timeSlots}\n        placeholder=\"Disabled options\"\n        getOptionDisabled={(option) =>\n          option === timeSlots[0] || option === timeSlots[2]\n        }\n        sx={{ width: 300 }}\n      />\n    </FormControl>\n  );\n}\n\n// One time slot every 30 minutes.\nconst timeSlots = Array.from(new Array(24 * 2)).map(\n  (_, index) =>\n    `${index < 20 ? '0' : ''}${Math.floor(index / 2)}:${\n      index % 2 === 0 ? '00' : '30'\n    }`,\n);\n"},"Grouped.js":{module:"./Grouped.js",raw:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function Grouped() {\n  const options = top100Films.map((option) => {\n    const firstLetter = option.title[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      ...option,\n    };\n  });\n\n  return (\n    <FormControl id=\"grouped-demo\">\n      <FormLabel>With categories</FormLabel>\n      <Autocomplete\n        options={options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n        groupBy={(option) => option.firstLetter}\n        getOptionLabel={(option) => option.title}\n        sx={{ width: 300 }}\n      />\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",jsxPreview:'<FormControl id="grouped-demo">\n  <FormLabel>With categories</FormLabel>\n  <Autocomplete\n    options={options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n    groupBy={(option) => option.firstLetter}\n    getOptionLabel={(option) => option.title}\n    sx={{ width: 300 }}\n  />\n</FormControl>',moduleTS:"./Grouped.js",rawTS:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function Grouped() {\n  const options = top100Films.map((option) => {\n    const firstLetter = option.title[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      ...option,\n    };\n  });\n\n  return (\n    <FormControl id=\"grouped-demo\">\n      <FormLabel>With categories</FormLabel>\n      <Autocomplete\n        options={options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n        groupBy={(option) => option.firstLetter}\n        getOptionLabel={(option) => option.title}\n        sx={{ width: 300 }}\n      />\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"ControllableStates.js":{module:"./ControllableStates.js",raw:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport Typography from '@mui/joy/Typography';\n\nconst options = ['Option 1', 'Option 2'];\n\nexport default function ControllableStates() {\n  const [value, setValue] = React.useState(options[0]);\n  const [inputValue, setInputValue] = React.useState('');\n\n  return (\n    <div>\n      <Typography level=\"body-sm\" sx={{ mb: 1 }}>\n        <code>value: </code>\n        <Typography variant=\"soft\" sx={{ py: 0.4 }}>\n          <code>\n            <strong>{`${value !== null ? `'${value}'` : 'null'}`}</strong>\n          </code>\n        </Typography>\n      </Typography>\n      <Typography level=\"body-sm\">\n        <code>inputValue: </code>\n        <Typography variant=\"soft\" sx={{ py: 0.4 }}>\n          <code>\n            <strong>{`'${inputValue}'`}</strong>\n          </code>\n        </Typography>\n      </Typography>\n      <br />\n      <FormControl id=\"controllable-states-demo\">\n        <FormLabel>Controllable</FormLabel>\n        <Autocomplete\n          placeholder=\"Controllable\"\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          inputValue={inputValue}\n          onInputChange={(event, newInputValue) => {\n            setInputValue(newInputValue);\n          }}\n          options={options}\n          sx={{ width: 300 }}\n        />\n      </FormControl>\n    </div>\n  );\n}\n",moduleTS:"./ControllableStates.js",rawTS:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport Typography from '@mui/joy/Typography';\n\nconst options = ['Option 1', 'Option 2'];\n\nexport default function ControllableStates() {\n  const [value, setValue] = React.useState<string | null>(options[0]);\n  const [inputValue, setInputValue] = React.useState('');\n\n  return (\n    <div>\n      <Typography level=\"body-sm\" sx={{ mb: 1 }}>\n        <code>value: </code>\n        <Typography variant=\"soft\" sx={{ py: 0.4 }}>\n          <code>\n            <strong>{`${value !== null ? `'${value}'` : 'null'}`}</strong>\n          </code>\n        </Typography>\n      </Typography>\n      <Typography level=\"body-sm\">\n        <code>inputValue: </code>\n        <Typography variant=\"soft\" sx={{ py: 0.4 }}>\n          <code>\n            <strong>{`'${inputValue}'`}</strong>\n          </code>\n        </Typography>\n      </Typography>\n      <br />\n      <FormControl id=\"controllable-states-demo\">\n        <FormLabel>Controllable</FormLabel>\n        <Autocomplete\n          placeholder=\"Controllable\"\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          inputValue={inputValue}\n          onInputChange={(event, newInputValue) => {\n            setInputValue(newInputValue);\n          }}\n          options={options}\n          sx={{ width: 300 }}\n        />\n      </FormControl>\n    </div>\n  );\n}\n"},"Asynchronous.js":{module:"./Asynchronous.js",raw:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport CircularProgress from '@mui/joy/CircularProgress';\n\nfunction sleep(duration) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, duration);\n  });\n}\n\nexport default function Asynchronous() {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      await sleep(1e3); // For demo purposes.\n\n      if (active) {\n        setOptions([...topFilms]);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <FormControl id=\"asynchronous-demo\">\n      <FormLabel>Asynchronous</FormLabel>\n      <Autocomplete\n        sx={{ width: 300 }}\n        placeholder=\"Asynchronous\"\n        open={open}\n        onOpen={() => {\n          setOpen(true);\n        }}\n        onClose={() => {\n          setOpen(false);\n        }}\n        isOptionEqualToValue={(option, value) => option.title === value.title}\n        getOptionLabel={(option) => option.title}\n        options={options}\n        loading={loading}\n        endDecorator={\n          loading ? (\n            <CircularProgress size=\"sm\" sx={{ bgcolor: 'background.surface' }} />\n          ) : null\n        }\n      />\n    </FormControl>\n  );\n}\n\n// Top films as rated by IMDb users. http://www.imdb.com/chart/top\nconst topFilms = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n];\n",moduleTS:"./Asynchronous.js",rawTS:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport CircularProgress from '@mui/joy/CircularProgress';\n\nfunction sleep(duration: number): Promise<void> {\n  return new Promise<void>((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, duration);\n  });\n}\n\nexport default function Asynchronous() {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState<typeof topFilms>([]);\n  const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      await sleep(1e3); // For demo purposes.\n\n      if (active) {\n        setOptions([...topFilms]);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <FormControl id=\"asynchronous-demo\">\n      <FormLabel>Asynchronous</FormLabel>\n      <Autocomplete\n        sx={{ width: 300 }}\n        placeholder=\"Asynchronous\"\n        open={open}\n        onOpen={() => {\n          setOpen(true);\n        }}\n        onClose={() => {\n          setOpen(false);\n        }}\n        isOptionEqualToValue={(option, value) => option.title === value.title}\n        getOptionLabel={(option) => option.title}\n        options={options}\n        loading={loading}\n        endDecorator={\n          loading ? (\n            <CircularProgress size=\"sm\" sx={{ bgcolor: 'background.surface' }} />\n          ) : null\n        }\n      />\n    </FormControl>\n  );\n}\n\n// Top films as rated by IMDb users. http://www.imdb.com/chart/top\nconst topFilms = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n];\n"},"Playground.js":{module:"./Playground.js",raw:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport Box from '@mui/joy/Box';\nimport Checkbox from '@mui/joy/Checkbox';\nimport Divider from '@mui/joy/Divider';\nimport Link from '@mui/joy/Link';\nimport FormControl, { formControlClasses } from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport FormHelperText from '@mui/joy/FormHelperText';\nimport List from '@mui/joy/List';\nimport ListItem from '@mui/joy/ListItem';\nimport Typography from '@mui/joy/Typography';\n\nexport default function Playground() {\n  const [flags, setFlags] = React.useState([]);\n\n  const getCheckboxProps = (flag) => ({\n    checked: flags.includes(flag),\n    onChange: (event) => {\n      setFlags(\n        event.target.checked ? [...flags, flag] : flags.filter((f) => f !== flag),\n      );\n    },\n  });\n\n  return (\n    <div>\n      <Box\n        sx={{\n          mt: 3,\n          pt: 4,\n          position: 'sticky',\n          top: 'var(--MuiDocs-header-height)',\n          zIndex: 2,\n          border: '1px solid',\n          borderColor: 'divider',\n          borderRadius: 'xs',\n          bgcolor: 'background.surface',\n        }}\n      >\n        <FormControl sx={{ width: 300, mx: 'auto' }}>\n          <FormLabel>Playground</FormLabel>\n          <Autocomplete\n            options={top100Films}\n            placeholder=\"Type to search\"\n            {...flags.reduce((prev, current) => ({ ...prev, [current]: true }), {})}\n          />\n        </FormControl>\n        <Divider sx={{ mt: 4, mb: 2 }} />\n        <Box sx={{ display: 'flex', alignItems: 'baseline', mb: 2 }}>\n          <Typography\n            id=\"flags-playground\"\n            level=\"body-xs\"\n            sx={{\n              textTransform: 'uppercase',\n              fontWeight: 'lg',\n              letterSpacing: 'md',\n              px: 2,\n            }}\n          >\n            Flags {flags.length ? `(${flags.length})` : ''}\n          </Typography>\n          {flags.length > 0 && (\n            // eslint-disable-next-line jsx-a11y/anchor-is-valid\n            <Link\n              component=\"button\"\n              level=\"body-sm\"\n              onClick={() => setFlags([])}\n              sx={{ ml: 'auto', mr: 2 }}\n            >\n              Clear all\n            </Link>\n          )}\n        </Box>\n      </Box>\n      <Box sx={{ minWidth: 0, flexBasis: 300, flexGrow: 1 }}>\n        <List\n          aria-labelledby=\"flags-playground\"\n          sx={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n            overflow: 'auto',\n            px: 0.5,\n            '--List-gap': '8px',\n            '& > li:first-child': {\n              mt: 'var(--List-gap)',\n            },\n            [`& .${formControlClasses.root}`]: { position: 'initial', gap: 1.5 },\n            '& > li': {\n              alignItems: 'flex-start',\n            },\n          }}\n        >\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('autoComplete')} />\n              <div>\n                <FormLabel>autoComplete</FormLabel>\n                <FormHelperText>\n                  The completion string, appears inline after the input cursor in the\n                  textbox. The inline completion string is visually highlighted and\n                  has a selected state.\n                </FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('autoHighlight')} />\n              <div>\n                <FormLabel>autoHighlight</FormLabel>\n                <FormHelperText>\n                  The first option is automatically highlighted.\n                </FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('autoSelect')} />\n              <div>\n                <FormLabel>autoSelect</FormLabel>\n                <FormHelperText>\n                  The selected option becomes the value of the input when the\n                  Autocomplete loses focus unless the user chooses a different option\n                  or changes the character string in the input.\n                </FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('blurOnSelect')} />\n              <div>\n                <FormLabel>blurOnSelect</FormLabel>\n                <FormHelperText>The input is always blurred.</FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('clearOnBlur')} />\n              <div>\n                <FormLabel>clearOnBlur</FormLabel>\n                <FormHelperText>\n                  The input&apos;s text is cleared on blur if no value is selected.\n                </FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('clearOnEscape')} />\n              <div>\n                <FormLabel>clearOnEscape</FormLabel>\n                <FormHelperText>\n                  Clear all values when the user presses escape and the popup is\n                  closed.\n                </FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('disabled')} />\n              <div>\n                <FormLabel>disabled</FormLabel>\n                <FormHelperText>The component is disabled.</FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('disableClearable')} />\n              <div>\n                <FormLabel>disableClearable</FormLabel>\n                <FormHelperText>The input can&apos;t be cleared</FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('disableCloseOnSelect')} />\n              <div>\n                <FormLabel>disableCloseOnSelect</FormLabel>\n                <FormHelperText>\n                  The popup won&apos;t close when a value is selected.\n                </FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('disableListWrap')} />\n              <div>\n                <FormLabel>disableListWrap</FormLabel>\n                <FormHelperText>\n                  The list box in the popup will not wrap focus.\n                </FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('filterSelectedOptions')} />\n              <div>\n                <FormLabel>filterSelectedOptions</FormLabel>\n                <FormHelperText>\n                  Hide the selected option from the list box.\n                </FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('freeSolo')} />\n              <div>\n                <FormLabel>freeSolo</FormLabel>\n                <FormHelperText>\n                  The user input is not bound to the provided options.\n                </FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('includeInputInList')} />\n              <div>\n                <FormLabel>includeInputInList</FormLabel>\n                <FormHelperText>The highlight can move to the input.</FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('openOnFocus')} />\n              <div>\n                <FormLabel>openOnFocus</FormLabel>\n                <FormHelperText>The popup will open on input focus.</FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('disablePortal')} />\n              <div>\n                <FormLabel>disablePortal</FormLabel>\n                <FormHelperText>\n                  The popup will be under the DOM hierarchy of the parent component.\n                </FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('readOnly')} />\n              <div>\n                <FormLabel>readOnly</FormLabel>\n                <FormHelperText>\n                  The component becomes read-only. It is also supported in multiple\n                  tags where the tag cannot be deleted.\n                </FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n          <ListItem>\n            <FormControl orientation=\"horizontal\">\n              <Checkbox overlay {...getCheckboxProps('selectOnFocus')} />\n              <div>\n                <FormLabel>selectOnFocus</FormLabel>\n                <FormHelperText>\n                  The input&apos;s text is selected on focus. It helps the user clear\n                  the selected value.\n                </FormHelperText>\n              </div>\n            </FormControl>\n          </ListItem>\n        </List>\n      </Box>\n    </div>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"FreeSolo.js":{module:"./FreeSolo.js",raw:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Stack from '@mui/joy/Stack';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function FreeSolo() {\n  return (\n    <Stack spacing={2} sx={{ width: 300 }}>\n      <FormControl id=\"free-solo-demo\">\n        <FormLabel>freeSolo</FormLabel>\n        <Autocomplete\n          freeSolo\n          placeholder=\"Type anything\"\n          options={top100Films.map((option) => option.title)}\n        />\n      </FormControl>\n      <FormControl id=\"free-solo-2-demo\">\n        <FormLabel>Search input</FormLabel>\n        <Autocomplete\n          placeholder=\"Search anything\"\n          type=\"search\"\n          freeSolo\n          disableClearable\n          options={top100Films.map((option) => option.title)}\n        />\n      </FormControl>\n    </Stack>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",moduleTS:"./FreeSolo.js",rawTS:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Stack from '@mui/joy/Stack';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function FreeSolo() {\n  return (\n    <Stack spacing={2} sx={{ width: 300 }}>\n      <FormControl id=\"free-solo-demo\">\n        <FormLabel>freeSolo</FormLabel>\n        <Autocomplete\n          freeSolo\n          placeholder=\"Type anything\"\n          options={top100Films.map((option) => option.title)}\n        />\n      </FormControl>\n      <FormControl id=\"free-solo-2-demo\">\n        <FormLabel>Search input</FormLabel>\n        <Autocomplete\n          placeholder=\"Search anything\"\n          type=\"search\"\n          freeSolo\n          disableClearable\n          options={top100Films.map((option) => option.title)}\n        />\n      </FormControl>\n    </Stack>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"FreeSoloCreateOption.js":{module:"./FreeSoloCreateOption.js",raw:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete, { createFilterOptions } from '@mui/joy/Autocomplete';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport ListItemDecorator from '@mui/joy/ListItemDecorator';\nimport Add from '@mui/icons-material/Add';\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOption() {\n  const [value, setValue] = React.useState(null);\n\n  return (\n    <FormControl id=\"free-solo-with-text-demo\">\n      <FormLabel>Free solo with text demo</FormLabel>\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          if (typeof newValue === 'string') {\n            setValue({\n              title: newValue,\n            });\n          } else if (newValue && newValue.inputValue) {\n            // Create a new value from the user input\n            setValue({\n              title: newValue.inputValue,\n            });\n          } else {\n            setValue(newValue);\n          }\n        }}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n\n          const { inputValue } = params;\n          // Suggest the creation of a new value\n          const isExisting = options.some((option) => inputValue === option.title);\n          if (inputValue !== '' && !isExisting) {\n            filtered.push({\n              inputValue,\n              title: `Add \"${inputValue}\"`,\n            });\n          }\n\n          return filtered;\n        }}\n        selectOnFocus\n        clearOnBlur\n        handleHomeEndKeys\n        freeSolo\n        options={top100Films}\n        getOptionLabel={(option) => {\n          // Value selected with enter, right from the input\n          if (typeof option === 'string') {\n            return option;\n          }\n          // Add \"xxx\" option created dynamically\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          // Regular option\n          return option.title;\n        }}\n        renderOption={(props, option) => (\n          <AutocompleteOption {...props}>\n            {option.title?.startsWith('Add \"') && (\n              <ListItemDecorator>\n                <Add />\n              </ListItemDecorator>\n            )}\n\n            {option.title}\n          </AutocompleteOption>\n        )}\n        sx={{ width: 300 }}\n      />\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",moduleTS:"./FreeSoloCreateOption.js",rawTS:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete, { createFilterOptions } from '@mui/joy/Autocomplete';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport ListItemDecorator from '@mui/joy/ListItemDecorator';\nimport Add from '@mui/icons-material/Add';\n\nconst filter = createFilterOptions<FilmOptionType>();\n\nexport default function FreeSoloCreateOption() {\n  const [value, setValue] = React.useState<FilmOptionType | null>(null);\n\n  return (\n    <FormControl id=\"free-solo-with-text-demo\">\n      <FormLabel>Free solo with text demo</FormLabel>\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          if (typeof newValue === 'string') {\n            setValue({\n              title: newValue,\n            });\n          } else if (newValue && newValue.inputValue) {\n            // Create a new value from the user input\n            setValue({\n              title: newValue.inputValue,\n            });\n          } else {\n            setValue(newValue);\n          }\n        }}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n\n          const { inputValue } = params;\n          // Suggest the creation of a new value\n          const isExisting = options.some((option) => inputValue === option.title);\n          if (inputValue !== '' && !isExisting) {\n            filtered.push({\n              inputValue,\n              title: `Add \"${inputValue}\"`,\n            });\n          }\n\n          return filtered;\n        }}\n        selectOnFocus\n        clearOnBlur\n        handleHomeEndKeys\n        freeSolo\n        options={top100Films}\n        getOptionLabel={(option) => {\n          // Value selected with enter, right from the input\n          if (typeof option === 'string') {\n            return option;\n          }\n          // Add \"xxx\" option created dynamically\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          // Regular option\n          return option.title;\n        }}\n        renderOption={(props, option) => (\n          <AutocompleteOption {...props}>\n            {option.title?.startsWith('Add \"') && (\n              <ListItemDecorator>\n                <Add />\n              </ListItemDecorator>\n            )}\n            {option.title}\n          </AutocompleteOption>\n        )}\n        sx={{ width: 300 }}\n      />\n    </FormControl>\n  );\n}\n\ninterface FilmOptionType {\n  inputValue?: string;\n  title: string;\n  year?: number;\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films: readonly FilmOptionType[] = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"FreeSoloCreateOptionDialog.js":{module:"./FreeSoloCreateOptionDialog.js",raw:"import * as React from 'react';\nimport Autocomplete, { createFilterOptions } from '@mui/joy/Autocomplete';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Modal from '@mui/joy/Modal';\nimport ModalDialog from '@mui/joy/ModalDialog';\nimport Button from '@mui/joy/Button';\nimport Input from '@mui/joy/Input';\nimport Typography from '@mui/joy/Typography';\nimport Stack from '@mui/joy/Stack';\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOptionDialog() {\n  const [value, setValue] = React.useState(null);\n  const [open, toggleOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setDialogValue({\n      title: '',\n      year: '',\n    });\n\n    toggleOpen(false);\n  };\n\n  const [dialogValue, setDialogValue] = React.useState({\n    title: '',\n    year: '',\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setValue({\n      title: dialogValue.title,\n      year: parseInt(dialogValue.year, 10),\n    });\n\n    handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      <FormControl id=\"free-solo-dialog-demo\">\n        <FormLabel>Free solo dialog</FormLabel>\n        <Autocomplete\n          value={value}\n          onChange={(event, newValue) => {\n            if (typeof newValue === 'string') {\n              // timeout to avoid instant validation of the dialog's form.\n              setTimeout(() => {\n                toggleOpen(true);\n                setDialogValue({\n                  title: newValue,\n                  year: '',\n                });\n              });\n            } else if (newValue && newValue.inputValue) {\n              toggleOpen(true);\n              setDialogValue({\n                title: newValue.inputValue,\n                year: '',\n              });\n            } else {\n              setValue(newValue);\n            }\n          }}\n          filterOptions={(options, params) => {\n            const filtered = filter(options, params);\n\n            if (params.inputValue !== '') {\n              filtered.push({\n                inputValue: params.inputValue,\n                title: `Add \"${params.inputValue}\"`,\n              });\n            }\n\n            return filtered;\n          }}\n          options={top100Films}\n          getOptionLabel={(option) => {\n            // e.g. value selected with enter, right from the input\n            if (typeof option === 'string') {\n              return option;\n            }\n            if (option.inputValue) {\n              return option.inputValue;\n            }\n            return option.title;\n          }}\n          freeSolo\n          selectOnFocus\n          clearOnBlur\n          handleHomeEndKeys\n          renderOption={(props, option) => (\n            <AutocompleteOption {...props}>{option.title}</AutocompleteOption>\n          )}\n          sx={{ width: 300 }}\n        />\n      </FormControl>\n      <Modal open={open} onClose={handleClose}>\n        <ModalDialog>\n          <form onSubmit={handleSubmit}>\n            <Typography\n              id=\"basic-modal-dialog-title\"\n              component=\"h2\"\n              level=\"inherit\"\n              fontSize=\"1.25em\"\n              mb=\"0.25em\"\n            >\n              Add a new film\n            </Typography>\n            <Typography\n              id=\"basic-modal-dialog-description\"\n              mt={0.5}\n              mb={2}\n              textColor=\"text.tertiary\"\n            >\n              Did you miss any film in our list? Please, add it!\n            </Typography>\n            <Stack spacing={2}>\n              <FormControl id=\"name\">\n                <FormLabel>Title</FormLabel>\n                <Input\n                  autoFocus\n                  type=\"text\"\n                  value={dialogValue.title}\n                  onChange={(event) =>\n                    setDialogValue({\n                      ...dialogValue,\n                      title: event.target.value,\n                    })\n                  }\n                />\n              </FormControl>\n              <FormControl id=\"year\">\n                <FormLabel>year</FormLabel>\n                <Input\n                  type=\"number\"\n                  value={dialogValue.year}\n                  onChange={(event) =>\n                    setDialogValue({\n                      ...dialogValue,\n                      year: event.target.value,\n                    })\n                  }\n                />\n              </FormControl>\n              <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={2}>\n                <Button variant=\"plain\" color=\"neutral\" onClick={handleClose}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">Add</Button>\n              </Stack>\n            </Stack>\n          </form>\n        </ModalDialog>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",moduleTS:"./FreeSoloCreateOptionDialog.js",rawTS:"import * as React from 'react';\nimport Autocomplete, { createFilterOptions } from '@mui/joy/Autocomplete';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Modal from '@mui/joy/Modal';\nimport ModalDialog from '@mui/joy/ModalDialog';\nimport Button from '@mui/joy/Button';\nimport Input from '@mui/joy/Input';\nimport Typography from '@mui/joy/Typography';\nimport Stack from '@mui/joy/Stack';\n\nconst filter = createFilterOptions<FilmOptionType>();\n\nexport default function FreeSoloCreateOptionDialog() {\n  const [value, setValue] = React.useState<FilmOptionType | null>(null);\n  const [open, toggleOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setDialogValue({\n      title: '',\n      year: '',\n    });\n\n    toggleOpen(false);\n  };\n\n  const [dialogValue, setDialogValue] = React.useState({\n    title: '',\n    year: '',\n  });\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setValue({\n      title: dialogValue.title,\n      year: parseInt(dialogValue.year, 10),\n    });\n\n    handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      <FormControl id=\"free-solo-dialog-demo\">\n        <FormLabel>Free solo dialog</FormLabel>\n        <Autocomplete\n          value={value}\n          onChange={(event, newValue) => {\n            if (typeof newValue === 'string') {\n              // timeout to avoid instant validation of the dialog's form.\n              setTimeout(() => {\n                toggleOpen(true);\n                setDialogValue({\n                  title: newValue,\n                  year: '',\n                });\n              });\n            } else if (newValue && newValue.inputValue) {\n              toggleOpen(true);\n              setDialogValue({\n                title: newValue.inputValue,\n                year: '',\n              });\n            } else {\n              setValue(newValue);\n            }\n          }}\n          filterOptions={(options, params) => {\n            const filtered = filter(options, params);\n\n            if (params.inputValue !== '') {\n              filtered.push({\n                inputValue: params.inputValue,\n                title: `Add \"${params.inputValue}\"`,\n              });\n            }\n\n            return filtered;\n          }}\n          options={top100Films}\n          getOptionLabel={(option) => {\n            // e.g. value selected with enter, right from the input\n            if (typeof option === 'string') {\n              return option;\n            }\n            if (option.inputValue) {\n              return option.inputValue;\n            }\n            return option.title;\n          }}\n          freeSolo\n          selectOnFocus\n          clearOnBlur\n          handleHomeEndKeys\n          renderOption={(props, option) => (\n            <AutocompleteOption {...props}>{option.title}</AutocompleteOption>\n          )}\n          sx={{ width: 300 }}\n        />\n      </FormControl>\n      <Modal open={open} onClose={handleClose}>\n        <ModalDialog>\n          <form onSubmit={handleSubmit}>\n            <Typography\n              id=\"basic-modal-dialog-title\"\n              component=\"h2\"\n              level=\"inherit\"\n              fontSize=\"1.25em\"\n              mb=\"0.25em\"\n            >\n              Add a new film\n            </Typography>\n            <Typography\n              id=\"basic-modal-dialog-description\"\n              mt={0.5}\n              mb={2}\n              textColor=\"text.tertiary\"\n            >\n              Did you miss any film in our list? Please, add it!\n            </Typography>\n            <Stack spacing={2}>\n              <FormControl id=\"name\">\n                <FormLabel>Title</FormLabel>\n                <Input\n                  autoFocus\n                  type=\"text\"\n                  value={dialogValue.title}\n                  onChange={(event) =>\n                    setDialogValue({\n                      ...dialogValue,\n                      title: event.target.value,\n                    })\n                  }\n                />\n              </FormControl>\n              <FormControl id=\"year\">\n                <FormLabel>year</FormLabel>\n                <Input\n                  type=\"number\"\n                  value={dialogValue.year}\n                  onChange={(event) =>\n                    setDialogValue({\n                      ...dialogValue,\n                      year: event.target.value,\n                    })\n                  }\n                />\n              </FormControl>\n              <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={2}>\n                <Button variant=\"plain\" color=\"neutral\" onClick={handleClose}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">Add</Button>\n              </Stack>\n            </Stack>\n          </form>\n        </ModalDialog>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\ninterface FilmOptionType {\n  inputValue?: string;\n  title: string;\n  year?: number;\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films: readonly FilmOptionType[] = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"AutocompleteError.js":{module:"./AutocompleteError.js",raw:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport FormHelperText from '@mui/joy/FormHelperText';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function AutocompleteError() {\n  return (\n    <FormControl error>\n      <FormLabel>Invalid</FormLabel>\n      <Autocomplete placeholder=\"Error\" options={top100Films} sx={{ width: 300 }} />\n      <FormHelperText>Oops! something went wrong.</FormHelperText>\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",jsxPreview:'<FormControl error>\n  <FormLabel>Invalid</FormLabel>\n  <Autocomplete placeholder="Error" options={top100Films} sx={{ width: 300 }} />\n  <FormHelperText>Oops! something went wrong.</FormHelperText>\n</FormControl>',moduleTS:"./AutocompleteError.js",rawTS:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport FormHelperText from '@mui/joy/FormHelperText';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function AutocompleteError() {\n  return (\n    <FormControl error>\n      <FormLabel>Invalid</FormLabel>\n      <Autocomplete placeholder=\"Error\" options={top100Films} sx={{ width: 300 }} />\n      <FormHelperText>Oops! something went wrong.</FormHelperText>\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"Tags.js":{module:"./Tags.js",raw:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function Tags() {\n  return (\n    <Autocomplete\n      multiple\n      id=\"tags-default\"\n      placeholder=\"Favorites\"\n      options={top100Films}\n      getOptionLabel={(option) => option.title}\n      defaultValue={[top100Films[13]]}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",jsxPreview:'<Autocomplete\n  multiple\n  id="tags-default"\n  placeholder="Favorites"\n  options={top100Films}\n  getOptionLabel={(option) => option.title}\n  defaultValue={[top100Films[13]]}\n/>',moduleTS:"./Tags.js",rawTS:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function Tags() {\n  return (\n    <Autocomplete\n      multiple\n      id=\"tags-default\"\n      placeholder=\"Favorites\"\n      options={top100Films}\n      getOptionLabel={(option) => option.title}\n      defaultValue={[top100Films[13]]}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"SizeWithLabel.js":{module:"./SizeWithLabel.js",raw:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport FormHelperText from '@mui/joy/FormHelperText';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function SizeWithLabel() {\n  return (\n    <FormControl size=\"sm\">\n      <FormLabel>Small field</FormLabel>\n      <Autocomplete\n        multiple\n        placeholder=\"Favorite movies\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n      />\n      <FormHelperText>This is a small description.</FormHelperText>\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",jsxPreview:'<FormControl size="sm">\n  <FormLabel>Small field</FormLabel>\n  <Autocomplete\n    multiple\n    placeholder="Favorite movies"\n    options={top100Films}\n    getOptionLabel={(option) => option.title}\n    defaultValue={[top100Films[13]]}\n  />\n  <FormHelperText>This is a small description.</FormHelperText>\n</FormControl>',moduleTS:"./SizeWithLabel.js",rawTS:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport FormHelperText from '@mui/joy/FormHelperText';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function SizeWithLabel() {\n  return (\n    <FormControl size=\"sm\">\n      <FormLabel>Small field</FormLabel>\n      <Autocomplete\n        multiple\n        placeholder=\"Favorite movies\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n      />\n      <FormHelperText>This is a small description.</FormHelperText>\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"Sizes.js":{module:"./Sizes.js",raw:"import * as React from 'react';\nimport Stack from '@mui/joy/Stack';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function Sizes() {\n  return (\n    <Stack spacing={2} sx={{ width: 500 }}>\n      <Autocomplete\n        multiple\n        size=\"sm\"\n        placeholder='size=\"sm\"'\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n      />\n      <Autocomplete\n        multiple\n        size=\"md\"\n        placeholder='size=\"md\" (default)'\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n      />\n      <Autocomplete\n        multiple\n        size=\"lg\"\n        placeholder='size=\"lg\"'\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n      />\n    </Stack>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",moduleTS:"./Sizes.js",rawTS:"import * as React from 'react';\nimport Stack from '@mui/joy/Stack';\nimport Autocomplete from '@mui/joy/Autocomplete';\n\nexport default function Sizes() {\n  return (\n    <Stack spacing={2} sx={{ width: 500 }}>\n      <Autocomplete\n        multiple\n        size=\"sm\"\n        placeholder='size=\"sm\"'\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n      />\n      <Autocomplete\n        multiple\n        size=\"md\"\n        placeholder='size=\"md\" (default)'\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n      />\n      <Autocomplete\n        multiple\n        size=\"lg\"\n        placeholder='size=\"lg\"'\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n      />\n    </Stack>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"LimitTags.js":{module:"./LimitTags.js",raw:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\n\nexport default function LimitTags() {\n  return (\n    <FormControl id=\"multiple-limit-tags\">\n      <FormLabel>limitTags</FormLabel>\n      <Autocomplete\n        multiple\n        placeholder=\"Favorites\"\n        limitTags={2}\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n        sx={{ width: '500px' }}\n      />\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",jsxPreview:'<FormControl id="multiple-limit-tags">\n  <FormLabel>limitTags</FormLabel>\n  <Autocomplete\n    multiple\n    placeholder="Favorites"\n    limitTags={2}\n    options={top100Films}\n    getOptionLabel={(option) => option.title}\n    defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n    sx={{ width: \'500px\' }}\n  />\n</FormControl>',moduleTS:"./LimitTags.js",rawTS:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\n\nexport default function LimitTags() {\n  return (\n    <FormControl id=\"multiple-limit-tags\">\n      <FormLabel>limitTags</FormLabel>\n      <Autocomplete\n        multiple\n        placeholder=\"Favorites\"\n        limitTags={2}\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n        sx={{ width: '500px' }}\n      />\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"CustomTags.js":{module:"./CustomTags.js",raw:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport Chip from '@mui/joy/Chip';\nimport Close from '@mui/icons-material/Close';\n\nexport default function CustomTags() {\n  return (\n    <Autocomplete\n      id=\"tags-default\"\n      multiple\n      placeholder=\"Favorites\"\n      options={top100Films}\n      getOptionLabel={(option) => option.title}\n      defaultValue={[top100Films[13]]}\n      renderTags={(tags, getTagProps) =>\n        tags.map((item, index) => (\n          <Chip\n            variant=\"solid\"\n            color=\"primary\"\n            endDecorator={<Close fontSize=\"sm\" />}\n            {...getTagProps({ index })}\n          >\n            {item.title}\n          </Chip>\n        ))\n      }\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",moduleTS:"./CustomTags.js",rawTS:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport Chip from '@mui/joy/Chip';\nimport Close from '@mui/icons-material/Close';\n\nexport default function CustomTags() {\n  return (\n    <Autocomplete\n      id=\"tags-default\"\n      multiple\n      placeholder=\"Favorites\"\n      options={top100Films}\n      getOptionLabel={(option) => option.title}\n      defaultValue={[top100Films[13]]}\n      renderTags={(tags, getTagProps) =>\n        tags.map((item, index) => (\n          <Chip\n            variant=\"solid\"\n            color=\"primary\"\n            endDecorator={<Close fontSize=\"sm\" />}\n            {...getTagProps({ index })}\n          >\n            {item.title}\n          </Chip>\n        ))\n      }\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"AutocompleteVariables.js":{module:"./AutocompleteVariables.js",raw:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport Stack from '@mui/joy/Stack';\nimport LiveTv from '@mui/icons-material/LiveTv';\nimport JoyVariablesDemo from 'docs/src/modules/components/JoyVariablesDemo';\n\nexport default function AutocompleteVariables() {\n  return (\n    <JoyVariablesDemo\n      componentName=\"Autocomplete\"\n      data={[\n        [\n          'Input',\n          [\n            {\n              var: '--Input-minHeight',\n              defaultValue: '40px',\n            },\n            {\n              var: '--Input-radius',\n              defaultValue: '8px',\n            },\n            {\n              var: '--Input-gap',\n              defaultValue: '8px',\n            },\n            {\n              var: '--Input-paddingInline',\n              defaultValue: '12px',\n            },\n            {\n              var: '--Input-decoratorChildHeight',\n              defaultValue: '32px',\n            },\n          ],\n        ],\n        [\n          'Autocomplete',\n          [\n            {\n              var: '--Autocomplete-wrapperGap',\n              defaultValue: '3px',\n            },\n          ],\n          { defaultOpen: true },\n        ],\n        [\n          'Chip',\n          [\n            {\n              var: '--Chip-minHeight',\n              defaultValue: '32px',\n            },\n            {\n              var: '--Chip-radius',\n            },\n          ],\n          { defaultOpen: true },\n        ],\n        [\n          'Icon',\n          [\n            {\n              var: '--Icon-fontSize',\n              defaultValue: '24px',\n            },\n          ],\n          { defaultOpen: true },\n        ],\n      ]}\n      renderDemo={(sx) => (\n        <Stack spacing={2} sx={{ width: 400, maxWidth: '100%' }}>\n          <Autocomplete\n            startDecorator={<LiveTv />}\n            placeholder=\"Decorators\"\n            options={top100Films}\n            sx={sx}\n          />\n          <Autocomplete\n            multiple\n            startDecorator={<LiveTv />}\n            placeholder=\"Decorators\"\n            options={top100Films}\n            defaultValue={[top100Films[1], top100Films[6]]}\n            sx={sx}\n          />\n        </Stack>\n      )}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"GitHubLabel.js":{module:"./GitHubLabel.js",raw:"import * as React from 'react';\nimport { Popper } from '@mui/base/Popper';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport AutocompleteListbox from '@mui/joy/AutocompleteListbox';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport Box from '@mui/joy/Box';\nimport Link from '@mui/joy/Link';\nimport List from '@mui/joy/List';\nimport ListItem from '@mui/joy/ListItem';\nimport Typography from '@mui/joy/Typography';\nimport Sheet from '@mui/joy/Sheet';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DoneIcon from '@mui/icons-material/Done';\nimport colors from '@mui/joy/colors';\n\nconst Listbox = React.forwardRef((props, ref) => (\n  <AutocompleteListbox\n    ref={ref}\n    {...props}\n    variant=\"plain\"\n    size=\"sm\"\n    sx={{\n      '--List-padding': '0px',\n      '--List-radius': '0px',\n      '--ListItem-paddingX': '8px',\n      '--ListItem-paddingY': '8px',\n      minWidth: '100%',\n    }}\n  />\n));\n\nexport default function GitHubLabel() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [value, setValue] = React.useState([labels[1], labels[11]]);\n  const [pendingValue, setPendingValue] = React.useState([]);\n\n  const handleClick = (event) => {\n    setPendingValue(value);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setValue(pendingValue);\n    if (anchorEl) {\n      anchorEl.focus();\n    }\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'github-label' : undefined;\n\n  return (\n    <React.Fragment>\n      <Box sx={{ width: 221 }}>\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <Link\n          color=\"neutral\"\n          component=\"button\"\n          underline=\"none\"\n          level=\"body-xs\"\n          aria-describedby={id}\n          onClick={handleClick}\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '100%',\n            fontWeight: 'lg',\n            color: 'text.secondary',\n            py: 1,\n            '&:hover': {\n              color: 'primary.plainColor',\n            },\n          }}\n        >\n          <span>Labels</span>\n          <SettingsIcon />\n        </Link>\n        <List\n          size=\"sm\"\n          sx={{\n            '--List-gap': '3px',\n            '--ListItem-minHeight': '20px',\n            '--ListItem-paddingX': '4px',\n            '--ListItem-paddingY': '0.15em',\n            '--ListItem-radius': '2px',\n            fontSize: '13px',\n          }}\n        >\n          {value.map((label) => (\n            <ListItem\n              key={label.name}\n              sx={{\n                fontWeight: 600,\n                backgroundColor: label.color,\n                color: '#fff',\n              }}\n            >\n              {label.name}\n            </ListItem>\n          ))}\n        </List>\n      </Box>\n      <Popper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\">\n        <ClickAwayListener onClickAway={handleClose}>\n          <Sheet\n            variant=\"outlined\"\n            sx={(theme) => ({\n              width: 300,\n              boxShadow: 'md',\n              borderRadius: '6px',\n              overflow: 'hidden',\n              '--joy-palette-neutral-plainBg': '#fff',\n              '--joy-palette-background-surface': '#fff',\n              [theme.getColorSchemeSelector('dark')]: {\n                '--joy-palette-neutral-plainBg': '#000',\n                '--joy-palette-background-surface': '#000',\n              },\n            })}\n          >\n            <Typography\n              fontSize=\"sm\"\n              fontWeight={600}\n              sx={{\n                padding: '8px 10px',\n                borderBottom: '1px solid',\n                borderColor: 'divider',\n              }}\n            >\n              Apply labels to this pull request\n            </Typography>\n            <Autocomplete\n              open\n              autoFocus\n              multiple\n              size=\"sm\"\n              placeholder=\"Filter labels\"\n              slots={{ listbox: Listbox }}\n              onClose={(event, reason) => {\n                if (reason === 'escape') {\n                  handleClose();\n                }\n              }}\n              value={pendingValue}\n              onChange={(event, newValue, reason) => {\n                if (\n                  event.type === 'keydown' &&\n                  event.key === 'Backspace' &&\n                  reason === 'removeOption'\n                ) {\n                  return;\n                }\n                setPendingValue(newValue);\n              }}\n              disableClearable\n              disableCloseOnSelect\n              forcePopupIcon={false}\n              renderTags={() => null}\n              noOptionsText=\"No labels\"\n              renderOption={(props, option, { selected }) => (\n                <AutocompleteOption\n                  {...props}\n                  color=\"neutral\"\n                  sx={(theme) => ({\n                    alignItems: 'flex-start',\n                    border: 'none',\n                    borderBottom: '1px solid',\n                    borderColor: 'divider',\n                    '--joy-palette-neutral-plainHoverBg': 'rgba(0, 0, 0, 0.03)',\n                    '--joy-palette-neutral-plainActiveBg': 'rgba(0, 0, 0, 0.03)',\n                    [theme.getColorSchemeSelector('dark')]: {\n                      '--joy-palette-neutral-plainHoverBg': colors.grey[800],\n                      '--joy-palette-neutral-plainActiveBg': colors.grey[800],\n                    },\n                    '&[aria-selected=\"true\"]': {\n                      fontWeight: 'normal',\n                    },\n                    '&:first-of-type': {\n                      borderTop: '1px solid',\n                      borderColor: 'divider',\n                    },\n                  })}\n                >\n                  <DoneIcon sx={{ visibility: selected ? 'visible' : 'hidden' }} />\n                  <Box\n                    component=\"span\"\n                    sx={{\n                      width: 14,\n                      height: 14,\n                      flexShrink: 0,\n                      borderRadius: '3px',\n                      mr: 1,\n                      ml: '5px',\n                      mt: '4px',\n                      backgroundColor: option.color,\n                    }}\n                  />\n                  <Box sx={{ flexGrow: 1 }}>\n                    <Typography level=\"title-sm\">{option.name}</Typography>\n                    <Typography level=\"body-xs\">{option.description}</Typography>\n                  </Box>\n                  <CloseIcon sx={{ visibility: selected ? 'visible' : 'hidden' }} />\n                </AutocompleteOption>\n              )}\n              options={[...labels].sort((a, b) => {\n                // Display the selected labels first.\n                let ai = value.indexOf(a);\n                ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\n                let bi = value.indexOf(b);\n                bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\n                return ai - bi;\n              })}\n              getOptionLabel={(option) => option.name}\n              sx={{\n                p: '4px 2px',\n                borderTop: '1px solid',\n                borderBottom: '1px solid',\n                borderColor: 'divider',\n                '--Input-radius': '4px',\n                m: '0.75rem 0.5rem',\n              }}\n            />\n          </Sheet>\n        </ClickAwayListener>\n      </Popper>\n    </React.Fragment>\n  );\n}\n\n// From https://github.com/abdonrd/github-labels\nconst labels = [\n  {\n    name: 'good first issue',\n    color: '#7057ff',\n    description: 'Good for newcomers',\n  },\n  {\n    name: 'help wanted',\n    color: '#008672',\n    description: 'Extra attention is needed',\n  },\n  {\n    name: 'priority: critical',\n    color: '#b60205',\n    description: '',\n  },\n  {\n    name: 'priority: high',\n    color: '#d93f0b',\n    description: '',\n  },\n  {\n    name: 'priority: low',\n    color: '#0e8a16',\n    description: '',\n  },\n  {\n    name: 'priority: medium',\n    color: '#fbca04',\n    description: '',\n  },\n  {\n    name: \"status: can't reproduce\",\n    color: '#fec1c1',\n    description: '',\n  },\n  {\n    name: 'status: confirmed',\n    color: '#215cea',\n    description: '',\n  },\n  {\n    name: 'status: duplicate',\n    color: '#cfd3d7',\n    description: 'This issue or pull request already exists',\n  },\n  {\n    name: 'status: needs information',\n    color: '#fef2c0',\n    description: '',\n  },\n  {\n    name: 'status: wont do/fix',\n    color: '#eeeeee',\n    description: 'This will not be worked on',\n  },\n  {\n    name: 'type: bug',\n    color: '#d73a4a',\n    description: \"Something isn't working\",\n  },\n  {\n    name: 'type: discussion',\n    color: '#d4c5f9',\n    description: '',\n  },\n  {\n    name: 'type: documentation',\n    color: '#006b75',\n    description: '',\n  },\n  {\n    name: 'type: enhancement',\n    color: '#84b6eb',\n    description: '',\n  },\n  {\n    name: 'type: epic',\n    color: '#3e4b9e',\n    description: 'A theme of work that contain sub-tasks',\n  },\n  {\n    name: 'type: feature request',\n    color: '#fbca04',\n    description: 'New feature or request',\n  },\n  {\n    name: 'type: question',\n    color: '#d876e3',\n    description: 'Further information is requested',\n  },\n];\n",moduleTS:"./GitHubLabel.js",rawTS:"import * as React from 'react';\nimport { Popper } from '@mui/base/Popper';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport AutocompleteListbox from '@mui/joy/AutocompleteListbox';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport Box from '@mui/joy/Box';\nimport Link from '@mui/joy/Link';\nimport List from '@mui/joy/List';\nimport ListItem from '@mui/joy/ListItem';\nimport Typography from '@mui/joy/Typography';\nimport Sheet from '@mui/joy/Sheet';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DoneIcon from '@mui/icons-material/Done';\nimport colors from '@mui/joy/colors';\n\nconst Listbox = React.forwardRef<HTMLUListElement, any>((props, ref) => (\n  <AutocompleteListbox\n    ref={ref}\n    {...props}\n    variant=\"plain\"\n    size=\"sm\"\n    sx={{\n      '--List-padding': '0px',\n      '--List-radius': '0px',\n      '--ListItem-paddingX': '8px',\n      '--ListItem-paddingY': '8px',\n      minWidth: '100%',\n    }}\n  />\n));\n\nexport default function GitHubLabel() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [value, setValue] = React.useState<LabelType[]>([labels[1], labels[11]]);\n  const [pendingValue, setPendingValue] = React.useState<LabelType[]>([]);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPendingValue(value);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setValue(pendingValue);\n    if (anchorEl) {\n      anchorEl.focus();\n    }\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'github-label' : undefined;\n\n  return (\n    <React.Fragment>\n      <Box sx={{ width: 221 }}>\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <Link\n          color=\"neutral\"\n          component=\"button\"\n          underline=\"none\"\n          level=\"body-xs\"\n          aria-describedby={id}\n          onClick={handleClick}\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '100%',\n            fontWeight: 'lg',\n            color: 'text.secondary',\n            py: 1,\n            '&:hover': {\n              color: 'primary.plainColor',\n            },\n          }}\n        >\n          <span>Labels</span>\n          <SettingsIcon />\n        </Link>\n        <List\n          size=\"sm\"\n          sx={{\n            '--List-gap': '3px',\n            '--ListItem-minHeight': '20px',\n            '--ListItem-paddingX': '4px',\n            '--ListItem-paddingY': '0.15em',\n            '--ListItem-radius': '2px',\n            fontSize: '13px',\n          }}\n        >\n          {value.map((label) => (\n            <ListItem\n              key={label.name}\n              sx={{\n                fontWeight: 600,\n                backgroundColor: label.color,\n                color: '#fff',\n              }}\n            >\n              {label.name}\n            </ListItem>\n          ))}\n        </List>\n      </Box>\n      <Popper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\">\n        <ClickAwayListener onClickAway={handleClose}>\n          <Sheet\n            variant=\"outlined\"\n            sx={(theme) => ({\n              width: 300,\n              boxShadow: 'md',\n              borderRadius: '6px',\n              overflow: 'hidden',\n              '--joy-palette-neutral-plainBg': '#fff',\n              '--joy-palette-background-surface': '#fff',\n              [theme.getColorSchemeSelector('dark')]: {\n                '--joy-palette-neutral-plainBg': '#000',\n                '--joy-palette-background-surface': '#000',\n              },\n            })}\n          >\n            <Typography\n              fontSize=\"sm\"\n              fontWeight={600}\n              sx={{\n                padding: '8px 10px',\n                borderBottom: '1px solid',\n                borderColor: 'divider',\n              }}\n            >\n              Apply labels to this pull request\n            </Typography>\n            <Autocomplete\n              open\n              autoFocus\n              multiple\n              size=\"sm\"\n              placeholder=\"Filter labels\"\n              slots={{ listbox: Listbox }}\n              onClose={(event, reason) => {\n                if (reason === 'escape') {\n                  handleClose();\n                }\n              }}\n              value={pendingValue}\n              onChange={(event, newValue, reason) => {\n                if (\n                  event.type === 'keydown' &&\n                  (event as React.KeyboardEvent).key === 'Backspace' &&\n                  reason === 'removeOption'\n                ) {\n                  return;\n                }\n                setPendingValue(newValue);\n              }}\n              disableClearable\n              disableCloseOnSelect\n              forcePopupIcon={false}\n              renderTags={() => null}\n              noOptionsText=\"No labels\"\n              renderOption={(props, option, { selected }) => (\n                <AutocompleteOption\n                  {...props}\n                  color=\"neutral\"\n                  sx={(theme) => ({\n                    alignItems: 'flex-start',\n                    border: 'none',\n                    borderBottom: '1px solid',\n                    borderColor: 'divider',\n                    '--joy-palette-neutral-plainHoverBg': 'rgba(0, 0, 0, 0.03)',\n                    '--joy-palette-neutral-plainActiveBg': 'rgba(0, 0, 0, 0.03)',\n                    [theme.getColorSchemeSelector('dark')]: {\n                      '--joy-palette-neutral-plainHoverBg': colors.grey[800],\n                      '--joy-palette-neutral-plainActiveBg': colors.grey[800],\n                    },\n                    '&[aria-selected=\"true\"]': {\n                      fontWeight: 'normal',\n                    },\n                    '&:first-of-type': {\n                      borderTop: '1px solid',\n                      borderColor: 'divider',\n                    },\n                  })}\n                >\n                  <DoneIcon sx={{ visibility: selected ? 'visible' : 'hidden' }} />\n                  <Box\n                    component=\"span\"\n                    sx={{\n                      width: 14,\n                      height: 14,\n                      flexShrink: 0,\n                      borderRadius: '3px',\n                      mr: 1,\n                      ml: '5px',\n                      mt: '4px',\n                      backgroundColor: option.color,\n                    }}\n                  />\n                  <Box sx={{ flexGrow: 1 }}>\n                    <Typography level=\"title-sm\">{option.name}</Typography>\n                    <Typography level=\"body-xs\">{option.description}</Typography>\n                  </Box>\n                  <CloseIcon sx={{ visibility: selected ? 'visible' : 'hidden' }} />\n                </AutocompleteOption>\n              )}\n              options={[...labels].sort((a, b) => {\n                // Display the selected labels first.\n                let ai = value.indexOf(a);\n                ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\n                let bi = value.indexOf(b);\n                bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\n                return ai - bi;\n              })}\n              getOptionLabel={(option) => option.name}\n              sx={{\n                p: '4px 2px',\n                borderTop: '1px solid',\n                borderBottom: '1px solid',\n                borderColor: 'divider',\n                '--Input-radius': '4px',\n                m: '0.75rem 0.5rem',\n              }}\n            />\n          </Sheet>\n        </ClickAwayListener>\n      </Popper>\n    </React.Fragment>\n  );\n}\n\ninterface LabelType {\n  name: string;\n  color: string;\n  description?: string;\n}\n\n// From https://github.com/abdonrd/github-labels\nconst labels = [\n  {\n    name: 'good first issue',\n    color: '#7057ff',\n    description: 'Good for newcomers',\n  },\n  {\n    name: 'help wanted',\n    color: '#008672',\n    description: 'Extra attention is needed',\n  },\n  {\n    name: 'priority: critical',\n    color: '#b60205',\n    description: '',\n  },\n  {\n    name: 'priority: high',\n    color: '#d93f0b',\n    description: '',\n  },\n  {\n    name: 'priority: low',\n    color: '#0e8a16',\n    description: '',\n  },\n  {\n    name: 'priority: medium',\n    color: '#fbca04',\n    description: '',\n  },\n  {\n    name: \"status: can't reproduce\",\n    color: '#fec1c1',\n    description: '',\n  },\n  {\n    name: 'status: confirmed',\n    color: '#215cea',\n    description: '',\n  },\n  {\n    name: 'status: duplicate',\n    color: '#cfd3d7',\n    description: 'This issue or pull request already exists',\n  },\n  {\n    name: 'status: needs information',\n    color: '#fef2c0',\n    description: '',\n  },\n  {\n    name: 'status: wont do/fix',\n    color: '#eeeeee',\n    description: 'This will not be worked on',\n  },\n  {\n    name: 'type: bug',\n    color: '#d73a4a',\n    description: \"Something isn't working\",\n  },\n  {\n    name: 'type: discussion',\n    color: '#d4c5f9',\n    description: '',\n  },\n  {\n    name: 'type: documentation',\n    color: '#006b75',\n    description: '',\n  },\n  {\n    name: 'type: enhancement',\n    color: '#84b6eb',\n    description: '',\n  },\n  {\n    name: 'type: epic',\n    color: '#3e4b9e',\n    description: 'A theme of work that contain sub-tasks',\n  },\n  {\n    name: 'type: feature request',\n    color: '#fbca04',\n    description: 'New feature or request',\n  },\n  {\n    name: 'type: question',\n    color: '#d876e3',\n    description: 'Further information is requested',\n  },\n];\n"},"Filter.js":{module:"./Filter.js",raw:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete, { createFilterOptions } from '@mui/joy/Autocomplete';\n\nconst filterOptions = createFilterOptions({\n  matchFrom: 'start',\n  stringify: (option) => option.title,\n});\n\nexport default function Filter() {\n  return (\n    <FormControl id=\"filter-demo\">\n      <FormLabel>Custom filter</FormLabel>\n      <Autocomplete\n        placeholder=\"Type something\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        filterOptions={filterOptions}\n        sx={{ width: 300 }}\n      />\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",jsxPreview:'<FormControl id="filter-demo">\n  <FormLabel>Custom filter</FormLabel>\n  <Autocomplete\n    placeholder="Type something"\n    options={top100Films}\n    getOptionLabel={(option) => option.title}\n    filterOptions={filterOptions}\n    sx={{ width: 300 }}\n  />\n</FormControl>',moduleTS:"./Filter.js",rawTS:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete, { createFilterOptions } from '@mui/joy/Autocomplete';\n\nconst filterOptions = createFilterOptions({\n  matchFrom: 'start',\n  stringify: (option: { title: string }) => option.title,\n});\n\nexport default function Filter() {\n  return (\n    <FormControl id=\"filter-demo\">\n      <FormLabel>Custom filter</FormLabel>\n      <Autocomplete\n        placeholder=\"Type something\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        filterOptions={filterOptions}\n        sx={{ width: 300 }}\n      />\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"AutocompleteHint.js":{module:"./AutocompleteHint.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport { Typography, styled } from '@mui/joy';\n\nconst StyledDiv = styled('div')({\n  flex: 1, // stretch to fill the root slot\n  minWidth: 0, // won't push end decorator out of the autocomplete\n  display: 'flex',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  position: 'relative',\n});\n\nfunction Wrapper({ children, hint, ...props }) {\n  return (\n    <StyledDiv {...props}>\n      <Typography sx={{ position: 'absolute', opacity: 0.6 }}>{hint}</Typography>\n      {children}\n    </StyledDiv>\n  );\n}\n\nWrapper.propTypes = {\n  children: PropTypes.element.isRequired,\n  hint: PropTypes.string.isRequired,\n};\n\nexport default function AutocompleteHint() {\n  const hint = React.useRef('');\n  const [inputValue, setInputValue] = React.useState('');\n  return (\n    <Autocomplete\n      onInputChange={(event, value) => {\n        if (!value) {\n          hint.current = '';\n        }\n        const matchingOption = top100Films.find((option) =>\n          option.label.startsWith(value),\n        );\n        if (value && matchingOption) {\n          hint.current = matchingOption.label;\n        } else {\n          hint.current = '';\n        }\n        setInputValue(value);\n      }}\n      onKeyDown={(event) => {\n        if (event.key === 'Tab') {\n          if (hint.current) {\n            setInputValue(hint.current);\n            event.preventDefault();\n          }\n        }\n      }}\n      onBlur={() => {\n        hint.current = '';\n      }}\n      inputValue={inputValue}\n      filterOptions={(options, state) => {\n        const displayOptions = options.filter((option) =>\n          option.label\n            .toLowerCase()\n            .trim()\n            .includes(state.inputValue.toLowerCase().trim()),\n        );\n\n        const matchingOption = options.find((option) =>\n          option.label.startsWith(state.inputValue),\n        );\n        if (displayOptions.length > 0 && state.inputValue && matchingOption) {\n          hint.current = matchingOption.label;\n        } else {\n          hint.current = '';\n        }\n        return displayOptions;\n      }}\n      id=\"combo-box-hint-demo\"\n      options={top100Films}\n      slots={{\n        wrapper: Wrapper,\n      }}\n      slotProps={{\n        wrapper: {\n          hint: hint.current,\n        },\n        input: {\n          sx: {\n            zIndex: 1,\n          },\n        },\n      }}\n      sx={{ width: 300 }}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",moduleTS:"./AutocompleteHint.js",rawTS:"import * as React from 'react';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport { Typography, styled } from '@mui/joy';\n\nconst StyledDiv = styled('div')({\n  flex: 1, // stretch to fill the root slot\n  minWidth: 0, // won't push end decorator out of the autocomplete\n  display: 'flex',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  position: 'relative',\n});\n\ntype WrapperProps = {\n  children: JSX.Element;\n  hint: string;\n};\n\nfunction Wrapper({ children, hint, ...props }: WrapperProps) {\n  return (\n    <StyledDiv {...props}>\n      <Typography sx={{ position: 'absolute', opacity: 0.6 }}>{hint}</Typography>\n      {children}\n    </StyledDiv>\n  );\n}\n\nexport default function AutocompleteHint() {\n  const hint = React.useRef('');\n  const [inputValue, setInputValue] = React.useState('');\n  return (\n    <Autocomplete\n      onInputChange={(event, value) => {\n        if (!value) {\n          hint.current = '';\n        }\n        const matchingOption = top100Films.find((option) =>\n          option.label.startsWith(value),\n        );\n        if (value && matchingOption) {\n          hint.current = matchingOption.label;\n        } else {\n          hint.current = '';\n        }\n        setInputValue(value);\n      }}\n      onKeyDown={(event) => {\n        if (event.key === 'Tab') {\n          if (hint.current) {\n            setInputValue(hint.current);\n            event.preventDefault();\n          }\n        }\n      }}\n      onBlur={() => {\n        hint.current = '';\n      }}\n      inputValue={inputValue}\n      filterOptions={(options, state) => {\n        const displayOptions = options.filter((option) =>\n          option.label\n            .toLowerCase()\n            .trim()\n            .includes(state.inputValue.toLowerCase().trim()),\n        );\n\n        const matchingOption = options.find((option) =>\n          option.label.startsWith(state.inputValue),\n        );\n        if (displayOptions.length > 0 && state.inputValue && matchingOption) {\n          hint.current = matchingOption.label;\n        } else {\n          hint.current = '';\n        }\n        return displayOptions;\n      }}\n      id=\"combo-box-hint-demo\"\n      options={top100Films}\n      slots={{\n        wrapper: Wrapper,\n      }}\n      slotProps={{\n        wrapper: {\n          hint: hint.current,\n        },\n        input: {\n          sx: {\n            zIndex: 1,\n          },\n        },\n      }}\n      sx={{ width: 300 }}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"Highlights.js":{module:"./Highlights.js",raw:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport Typography from '@mui/joy/Typography';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\n\nexport default function Highlights() {\n  return (\n    <FormControl id=\"highlights-demo\">\n      <FormLabel>Highlights</FormLabel>\n      <Autocomplete\n        sx={{ width: 300 }}\n        placeholder=\"Type a movie name\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        renderOption={(props, option, { inputValue }) => {\n          const matches = match(option.title, inputValue);\n          const parts = parse(option.title, matches);\n\n          return (\n            <AutocompleteOption {...props}>\n              <Typography level=\"inherit\">\n                {option.title === inputValue\n                  ? option.title\n                  : parts.map((part, index) => (\n                      <Typography\n                        key={index}\n                        {...(part.highlight && {\n                          variant: 'soft',\n                          color: 'primary',\n                          fontWeight: 'lg',\n                          px: '2px',\n                        })}\n                      >\n                        {part.text}\n                      </Typography>\n                    ))}\n              </Typography>\n            </AutocompleteOption>\n          );\n        }}\n      />\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n",moduleTS:"./Highlights.js",rawTS:"import * as React from 'react';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport Typography from '@mui/joy/Typography';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\n\nexport default function Highlights() {\n  return (\n    <FormControl id=\"highlights-demo\">\n      <FormLabel>Highlights</FormLabel>\n      <Autocomplete\n        sx={{ width: 300 }}\n        placeholder=\"Type a movie name\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        renderOption={(props, option, { inputValue }) => {\n          const matches = match(option.title, inputValue);\n          const parts = parse(option.title, matches);\n\n          return (\n            <AutocompleteOption {...props}>\n              <Typography level=\"inherit\">\n                {option.title === inputValue\n                  ? option.title\n                  : parts.map((part, index) => (\n                      <Typography\n                        key={index}\n                        {...(part.highlight && {\n                          variant: 'soft',\n                          color: 'primary',\n                          fontWeight: 'lg',\n                          px: '2px',\n                        })}\n                      >\n                        {part.text}\n                      </Typography>\n                    ))}\n              </Typography>\n            </AutocompleteOption>\n          );\n        }}\n      />\n    </FormControl>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},"Virtualize.js":{module:"./Virtualize.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FixedSizeList } from 'react-window';\nimport { Popper } from '@mui/base/Popper';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport AutocompleteListbox from '@mui/joy/AutocompleteListbox';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport ListSubheader from '@mui/joy/ListSubheader';\n\nconst LISTBOX_PADDING = 6; // px\n\nfunction renderRow(props) {\n  const { data, index, style } = props;\n  const dataSet = data[index];\n  const inlineStyle = {\n    ...style,\n    top: style.top + LISTBOX_PADDING,\n  };\n\n  if (dataSet.hasOwnProperty('group')) {\n    return (\n      <ListSubheader key={dataSet.key} component=\"li\" style={inlineStyle}>\n        {dataSet.group}\n      </ListSubheader>\n    );\n  }\n\n  return (\n    <AutocompleteOption {...dataSet[0]} style={inlineStyle}>\n      {dataSet[1]}\n    </AutocompleteOption>\n  );\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef((props, ref) => {\n  const outerProps = React.useContext(OuterElementContext);\n  return (\n    <AutocompleteListbox\n      {...props}\n      {...outerProps}\n      component=\"div\"\n      ref={ref}\n      sx={{\n        '& ul': {\n          padding: 0,\n          margin: 0,\n          flexShrink: 0,\n        },\n      }}\n    />\n  );\n});\n\n// Adapter for react-window\n\nconst ListboxComponent = React.forwardRef(function ListboxComponent(props, ref) {\n  const { children, anchorEl, open, modifiers, ...other } = props;\n  const itemData = [];\n\n  children[0].forEach((item) => {\n    if (item) {\n      itemData.push(item);\n      itemData.push(...(item.children || []));\n    }\n  });\n\n  const itemCount = itemData.length;\n  const itemSize = 40;\n\n  return (\n    <Popper ref={ref} anchorEl={anchorEl} open={open} modifiers={modifiers}>\n      <OuterElementContext.Provider value={other}>\n        <FixedSizeList\n          itemData={itemData}\n          height={itemSize * 8}\n          width=\"100%\"\n          outerElementType={OuterElementType}\n          innerElementType=\"ul\"\n          itemSize={itemSize}\n          overscanCount={5}\n          itemCount={itemCount}\n        >\n          {renderRow}\n        </FixedSizeList>\n      </OuterElementContext.Provider>\n    </Popper>\n  );\n});\n\nListboxComponent.propTypes = {\n  anchorEl: PropTypes.any.isRequired,\n  children: PropTypes.node,\n  modifiers: PropTypes.array.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nfunction random(length) {\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n\n  for (let i = 0; i < length; i += 1) {\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\n  }\n\n  return result;\n}\n\nconst OPTIONS = Array.from(new Array(10000))\n  .map(() => random(10 + Math.ceil(Math.random() * 20)))\n  .sort((a, b) => a.toUpperCase().localeCompare(b.toUpperCase()));\n\nexport default function Virtualize() {\n  return (\n    <FormControl id=\"virtualize-demo\">\n      <FormLabel>10,000 options</FormLabel>\n      <Autocomplete\n        sx={{ width: 300 }}\n        disableListWrap\n        placeholder=\"Type to search\"\n        slots={{\n          listbox: ListboxComponent,\n        }}\n        options={OPTIONS}\n        groupBy={(option) => option[0].toUpperCase()}\n        renderOption={(props, option) => [props, option]}\n        // TODO: Post React 18 update - validate this conversion, look like a hidden bug\n        renderGroup={(params) => params}\n      />\n    </FormControl>\n  );\n}\n",jsxPreview:'<FormControl id="virtualize-demo">\n  <FormLabel>10,000 options</FormLabel>\n  <Autocomplete\n    sx={{ width: 300 }}\n    disableListWrap\n    placeholder="Type to search"\n    slots={{\n      listbox: ListboxComponent,\n    }}\n    options={OPTIONS}\n    groupBy={(option) => option[0].toUpperCase()}\n    renderOption={(props, option) => [props, option] as React.ReactNode}\n    // TODO: Post React 18 update - validate this conversion, look like a hidden bug\n    renderGroup={(params) => params as unknown as React.ReactNode}\n  />\n</FormControl>',moduleTS:"./Virtualize.js",rawTS:"import * as React from 'react';\nimport { FixedSizeList, ListChildComponentProps } from 'react-window';\nimport { Popper } from '@mui/base/Popper';\nimport Autocomplete from '@mui/joy/Autocomplete';\nimport AutocompleteListbox from '@mui/joy/AutocompleteListbox';\nimport AutocompleteOption from '@mui/joy/AutocompleteOption';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport ListSubheader from '@mui/joy/ListSubheader';\n\nconst LISTBOX_PADDING = 6; // px\n\nfunction renderRow(props: ListChildComponentProps) {\n  const { data, index, style } = props;\n  const dataSet = data[index];\n  const inlineStyle = {\n    ...style,\n    top: (style.top as number) + LISTBOX_PADDING,\n  };\n\n  if (dataSet.hasOwnProperty('group')) {\n    return (\n      <ListSubheader key={dataSet.key} component=\"li\" style={inlineStyle}>\n        {dataSet.group}\n      </ListSubheader>\n    );\n  }\n\n  return (\n    <AutocompleteOption {...dataSet[0]} style={inlineStyle}>\n      {dataSet[1]}\n    </AutocompleteOption>\n  );\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef<HTMLDivElement>((props, ref) => {\n  const outerProps = React.useContext(OuterElementContext);\n  return (\n    <AutocompleteListbox\n      {...props}\n      {...outerProps}\n      component=\"div\"\n      ref={ref}\n      sx={{\n        '& ul': {\n          padding: 0,\n          margin: 0,\n          flexShrink: 0,\n        },\n      }}\n    />\n  );\n});\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef<\n  HTMLDivElement,\n  {\n    anchorEl: any;\n    open: boolean;\n    modifiers: any[];\n  } & React.HTMLAttributes<HTMLElement>\n>(function ListboxComponent(props, ref) {\n  const { children, anchorEl, open, modifiers, ...other } = props;\n  const itemData: Array<any> = [];\n  (\n    children as [Array<{ children: Array<React.ReactElement> | undefined }>]\n  )[0].forEach((item) => {\n    if (item) {\n      itemData.push(item);\n      itemData.push(...(item.children || []));\n    }\n  });\n\n  const itemCount = itemData.length;\n  const itemSize = 40;\n\n  return (\n    <Popper ref={ref} anchorEl={anchorEl} open={open} modifiers={modifiers}>\n      <OuterElementContext.Provider value={other}>\n        <FixedSizeList\n          itemData={itemData}\n          height={itemSize * 8}\n          width=\"100%\"\n          outerElementType={OuterElementType}\n          innerElementType=\"ul\"\n          itemSize={itemSize}\n          overscanCount={5}\n          itemCount={itemCount}\n        >\n          {renderRow}\n        </FixedSizeList>\n      </OuterElementContext.Provider>\n    </Popper>\n  );\n});\n\nfunction random(length: number) {\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n\n  for (let i = 0; i < length; i += 1) {\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\n  }\n\n  return result;\n}\n\nconst OPTIONS = Array.from(new Array(10000))\n  .map(() => random(10 + Math.ceil(Math.random() * 20)))\n  .sort((a, b) => a.toUpperCase().localeCompare(b.toUpperCase()));\n\nexport default function Virtualize() {\n  return (\n    <FormControl id=\"virtualize-demo\">\n      <FormLabel>10,000 options</FormLabel>\n      <Autocomplete\n        sx={{ width: 300 }}\n        disableListWrap\n        placeholder=\"Type to search\"\n        slots={{\n          listbox: ListboxComponent,\n        }}\n        options={OPTIONS}\n        groupBy={(option) => option[0].toUpperCase()}\n        renderOption={(props, option) => [props, option] as React.ReactNode}\n        // TODO: Post React 18 update - validate this conversion, look like a hidden bug\n        renderGroup={(params) => params as unknown as React.ReactNode}\n      />\n    </FormControl>\n  );\n}\n"}};nr.scope={process:{},import:{react:eo,"@mui/joy/Autocomplete":el,"@mui/joy/AutocompleteOption":ei,"@mui/joy/ListItemDecorator":es,"@mui/joy/ListItemContent":ey,"@mui/joy/Typography":ec,"@mui/joy/Stack":eh,"@mui/joy/FormControl":ed,"@mui/joy/FormLabel":ep,"@mui/joy/FormHelperText":eu,"@mui/icons-material/LiveTv":eb,"@mui/joy/CircularProgress":ef,"@mui/joy/Box":eg,"@mui/joy/Checkbox":ev,"@mui/joy/Divider":eT,"@mui/joy/Link":eS,"@mui/joy/List":ex,"@mui/joy/ListItem":ek,"@mui/icons-material/Add":eL,"@mui/joy/Modal":eC,"@mui/joy/ModalDialog":eA,"@mui/joy/Button":eF,"@mui/joy/Input":eI,"@mui/joy/Chip":eR,"@mui/icons-material/Close":eD,"docs/src/modules/components/JoyVariablesDemo":eM,"@mui/base/Popper":eB,"@mui/base/ClickAwayListener":eO,"@mui/joy/AutocompleteListbox":eZ,"@mui/joy/Sheet":ej,"@mui/icons-material/Settings":eG,"@mui/icons-material/Done":eE,"@mui/joy/colors":eH,"prop-types":ez,"@mui/joy":eK,"autosuggest-highlight/parse":eN,"autosuggest-highlight/match":eJ,"react-window":e_,"@mui/joy/ListSubheader":eX}};var nl={"./CountrySelect.js":function(){return(0,e9.jsx)(eY.Z,{id:"country-select-demo",placeholder:"Choose a country",slotProps:{input:{autoComplete:"new-password"}},sx:{width:300},options:e2,autoHighlight:!0,getOptionLabel:function(e){return e.label},renderOption:function(e,t){return(0,e9.jsxs)(e$.Z,(0,en.Z)((0,en.Z)({},e),{},{children:[(0,e9.jsx)(eQ.Z,{children:(0,e9.jsx)("img",{loading:"lazy",width:"20",srcSet:"https://flagcdn.com/w40/".concat(t.code.toLowerCase(),".png 2x"),src:"https://flagcdn.com/w20/".concat(t.code.toLowerCase(),".png"),alt:""})}),(0,e9.jsxs)(e1.Z,{sx:{fontSize:"sm"},children:[t.label,(0,e9.jsxs)(e0.ZP,{level:"body-xs",children:["(",t.code,") +",t.phone]})]})]}))}})},"./AutocompleteVariants.js":function(){return(0,e9.jsxs)(e4.Z,{spacing:1,children:[(0,e9.jsx)(eY.Z,{placeholder:"Outlined variant (default)",options:e7,sx:{width:300}}),(0,e9.jsx)(eY.Z,{variant:"soft",placeholder:"Soft variant",options:e7,sx:{width:300}}),(0,e9.jsx)(eY.Z,{variant:"solid",placeholder:"Solid variant",options:e7,renderOption:function(e,t){return(0,e9.jsx)(e$.Z,(0,en.Z)((0,en.Z)({variant:"solid"},e),{},{children:t.label}))},sx:{width:300}}),(0,e9.jsx)(eY.Z,{variant:"plain",placeholder:"Plain variant",options:e7,sx:{width:300}})]})},"./BasicAutocomplete.js":function(){return(0,e9.jsx)(eY.Z,{placeholder:"Combo box",options:e8,sx:{width:300}})},"./LabelAndHelperText.js":function(){return(0,e9.jsxs)(e6.Z,{children:[a||(a=(0,e9.jsx)(e5.Z,{children:"Label"})),(0,e9.jsx)(eY.Z,{placeholder:"Placeholder",options:te,sx:{width:300}}),o||(o=(0,e9.jsx)(e3.Z,{children:"A description for the combo box."}))]})},"./AutocompleteDecorators.js":function(){return(0,e9.jsxs)(e4.Z,{spacing:2,children:[r||(r=(0,e9.jsx)(eY.Z,{startDecorator:(0,e9.jsx)(em(),{}),placeholder:"Decorators",options:tt})),(0,e9.jsx)(eY.Z,{multiple:!0,startDecorator:l||(l=(0,e9.jsx)(em(),{})),placeholder:"Decorators",options:tt,defaultValue:[tt[0]]})]})},"./DisabledOptions.js":function(){return(0,e9.jsxs)(e6.Z,{id:"disabled-options-demo",children:[i||(i=(0,e9.jsx)(e5.Z,{children:"Disabled options"})),(0,e9.jsx)(eY.Z,{options:to,placeholder:"Disabled options",getOptionDisabled:function(e){return e===to[0]||e===to[2]},sx:{width:300}})]})},"./Grouped.js":function(){var e=tr.map(function(e){var t=e.title[0].toUpperCase();return(0,en.Z)({firstLetter:/[0-9]/.test(t)?"0-9":t},e)});return(0,e9.jsxs)(e6.Z,{id:"grouped-demo",children:[s||(s=(0,e9.jsx)(e5.Z,{children:"With categories"})),(0,e9.jsx)(eY.Z,{options:e.sort(function(e,t){return-t.firstLetter.localeCompare(e.firstLetter)}),groupBy:function(e){return e.firstLetter},getOptionLabel:function(e){return e.title},sx:{width:300}})]})},"./ControllableStates.js":function(){var e=ea.useState("Option 1"),t=(0,tl.Z)(e,2),n=t[0],a=t[1],o=ea.useState(""),r=(0,tl.Z)(o,2),l=r[0],i=r[1];return(0,e9.jsxs)("div",{children:[(0,e9.jsxs)(e0.ZP,{level:"body-sm",sx:{mb:1},children:[y||(y=(0,e9.jsx)("code",{children:"value: "})),(0,e9.jsx)(e0.ZP,{variant:"soft",sx:{py:.4},children:(0,e9.jsx)("code",{children:(0,e9.jsx)("strong",{children:"".concat(null!==n?"'".concat(n,"'"):"null")})})})]}),(0,e9.jsxs)(e0.ZP,{level:"body-sm",children:[c||(c=(0,e9.jsx)("code",{children:"inputValue: "})),(0,e9.jsx)(e0.ZP,{variant:"soft",sx:{py:.4},children:(0,e9.jsx)("code",{children:(0,e9.jsx)("strong",{children:"'".concat(l,"'")})})})]}),h||(h=(0,e9.jsx)("br",{})),(0,e9.jsxs)(e6.Z,{id:"controllable-states-demo",children:[d||(d=(0,e9.jsx)(e5.Z,{children:"Controllable"})),(0,e9.jsx)(eY.Z,{placeholder:"Controllable",value:n,onChange:function(e,t){a(t)},inputValue:l,onInputChange:function(e,t){i(t)},options:ti,sx:{width:300}})]})]})},"./Asynchronous.js":function(){var e=ea.useState(!1),t=(0,tl.Z)(e,2),n=t[0],a=t[1],o=ea.useState([]),r=(0,tl.Z)(o,2),l=r[0],i=r[1],s=n&&0===l.length;return ea.useEffect(function(){var e=!0;if(s)return(0,ty.Z)((0,ts.Z)().mark(function t(){return(0,ts.Z)().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,new(th())(function(e){setTimeout(function(){e()},1e3)});case 2:e&&i([].concat(tp));case 3:case"end":return t.stop()}},t)}))(),function(){e=!1}},[s]),ea.useEffect(function(){n||i([])},[n]),(0,e9.jsxs)(e6.Z,{id:"asynchronous-demo",children:[p||(p=(0,e9.jsx)(e5.Z,{children:"Asynchronous"})),(0,e9.jsx)(eY.Z,{sx:{width:300},placeholder:"Asynchronous",open:n,onOpen:function(){a(!0)},onClose:function(){a(!1)},isOptionEqualToValue:function(e,t){return e.title===t.title},getOptionLabel:function(e){return e.title},options:l,loading:s,endDecorator:s?(0,e9.jsx)(td.Z,{size:"sm",sx:{bgcolor:"background.surface"}}):null})]})},"./Playground.js":function(){var e,t=ea.useState([]),n=(0,tl.Z)(t,2),a=n[0],o=n[1],r=function(e){return{checked:a.includes(e),onChange:function(t){o(t.target.checked?[].concat((0,tb.Z)(a),[e]):a.filter(function(t){return t!==e}))}}};return(0,e9.jsxs)("div",{children:[(0,e9.jsxs)(tm.Z,{sx:{mt:3,pt:4,position:"sticky",top:"var(--MuiDocs-header-height)",zIndex:2,border:"1px solid",borderColor:"divider",borderRadius:"xs",bgcolor:"background.surface"},children:[(0,e9.jsxs)(e6.Z,{sx:{width:300,mx:"auto"},children:[u||(u=(0,e9.jsx)(e5.Z,{children:"Playground"})),(0,e9.jsx)(eY.Z,(0,en.Z)({options:tk,placeholder:"Type to search"},a.reduce(function(e,t){return(0,en.Z)((0,en.Z)({},e),{},(0,tu.Z)({},t,!0))},{})))]}),(0,e9.jsx)(tg.Z,{sx:{mt:4,mb:2}}),(0,e9.jsxs)(tm.Z,{sx:{display:"flex",alignItems:"baseline",mb:2},children:[(0,e9.jsxs)(e0.ZP,{id:"flags-playground",level:"body-xs",sx:{textTransform:"uppercase",fontWeight:"lg",letterSpacing:"md",px:2},children:["Flags ",a.length?"(".concat(a.length,")"):""]}),a.length>0&&(0,e9.jsx)(tv.Z,{component:"button",level:"body-sm",onClick:function(){return o([])},sx:{ml:"auto",mr:2},children:"Clear all"})]})]}),(0,e9.jsx)(tm.Z,{sx:{minWidth:0,flexBasis:300,flexGrow:1},children:(0,e9.jsxs)(tS.Z,{"aria-labelledby":"flags-playground",sx:(e={display:"grid",gridTemplateColumns:"repeat(auto-fill, minmax(300px, 1fr))",overflow:"auto",px:.5,"--List-gap":"8px","& > li:first-child":{mt:"var(--List-gap)"}},(0,tu.Z)(e,"& .".concat(tT.Z.root),{position:"initial",gap:1.5}),(0,tu.Z)(e,"& > li",{alignItems:"flex-start"}),e),children:[(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("autoComplete"))),b||(b=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"autoComplete"}),(0,e9.jsx)(e3.Z,{children:"The completion string, appears inline after the input cursor in the textbox. The inline completion string is visually highlighted and has a selected state."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("autoHighlight"))),m||(m=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"autoHighlight"}),(0,e9.jsx)(e3.Z,{children:"The first option is automatically highlighted."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("autoSelect"))),f||(f=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"autoSelect"}),(0,e9.jsx)(e3.Z,{children:"The selected option becomes the value of the input when the Autocomplete loses focus unless the user chooses a different option or changes the character string in the input."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("blurOnSelect"))),g||(g=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"blurOnSelect"}),(0,e9.jsx)(e3.Z,{children:"The input is always blurred."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("clearOnBlur"))),v||(v=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"clearOnBlur"}),(0,e9.jsx)(e3.Z,{children:"The input's text is cleared on blur if no value is selected."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("clearOnEscape"))),T||(T=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"clearOnEscape"}),(0,e9.jsx)(e3.Z,{children:"Clear all values when the user presses escape and the popup is closed."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("disabled"))),S||(S=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"disabled"}),(0,e9.jsx)(e3.Z,{children:"The component is disabled."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("disableClearable"))),x||(x=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"disableClearable"}),(0,e9.jsx)(e3.Z,{children:"The input can't be cleared"})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("disableCloseOnSelect"))),k||(k=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"disableCloseOnSelect"}),(0,e9.jsx)(e3.Z,{children:"The popup won't close when a value is selected."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("disableListWrap"))),L||(L=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"disableListWrap"}),(0,e9.jsx)(e3.Z,{children:"The list box in the popup will not wrap focus."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("filterSelectedOptions"))),w||(w=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"filterSelectedOptions"}),(0,e9.jsx)(e3.Z,{children:"Hide the selected option from the list box."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("freeSolo"))),C||(C=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"freeSolo"}),(0,e9.jsx)(e3.Z,{children:"The user input is not bound to the provided options."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("includeInputInList"))),A||(A=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"includeInputInList"}),(0,e9.jsx)(e3.Z,{children:"The highlight can move to the input."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("openOnFocus"))),F||(F=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"openOnFocus"}),(0,e9.jsx)(e3.Z,{children:"The popup will open on input focus."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("disablePortal"))),I||(I=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"disablePortal"}),(0,e9.jsx)(e3.Z,{children:"The popup will be under the DOM hierarchy of the parent component."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("readOnly"))),R||(R=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"readOnly"}),(0,e9.jsx)(e3.Z,{children:"The component becomes read-only. It is also supported in multiple tags where the tag cannot be deleted."})]}))]})}),(0,e9.jsx)(tx.Z,{children:(0,e9.jsxs)(e6.Z,{orientation:"horizontal",children:[(0,e9.jsx)(tf.Z,(0,en.Z)({overlay:!0},r("selectOnFocus"))),D||(D=(0,e9.jsxs)("div",{children:[(0,e9.jsx)(e5.Z,{children:"selectOnFocus"}),(0,e9.jsx)(e3.Z,{children:"The input's text is selected on focus. It helps the user clear the selected value."})]}))]})})]})})]})},"./FreeSolo.js":function(){return(0,e9.jsxs)(e4.Z,{spacing:2,sx:{width:300},children:[(0,e9.jsxs)(e6.Z,{id:"free-solo-demo",children:[P||(P=(0,e9.jsx)(e5.Z,{children:"freeSolo"})),(0,e9.jsx)(eY.Z,{freeSolo:!0,placeholder:"Type anything",options:tL.map(function(e){return e.title})})]}),(0,e9.jsxs)(e6.Z,{id:"free-solo-2-demo",children:[M||(M=(0,e9.jsx)(e5.Z,{children:"Search input"})),(0,e9.jsx)(eY.Z,{placeholder:"Search anything",type:"search",freeSolo:!0,disableClearable:!0,options:tL.map(function(e){return e.title})})]})]})},"./FreeSoloCreateOption.js":function(){var e=ea.useState(null),t=(0,tl.Z)(e,2),n=t[0],a=t[1];return(0,e9.jsxs)(e6.Z,{id:"free-solo-with-text-demo",children:[B||(B=(0,e9.jsx)(e5.Z,{children:"Free solo with text demo"})),(0,e9.jsx)(eY.Z,{value:n,onChange:function(e,t){"string"==typeof t?a({title:t}):t&&t.inputValue?a({title:t.inputValue}):a(t)},filterOptions:function(e,t){var n=tC(e,t),a=t.inputValue,o=e.some(function(e){return a===e.title});return""===a||o||n.push({inputValue:a,title:'Add "'.concat(a,'"')}),n},selectOnFocus:!0,clearOnBlur:!0,handleHomeEndKeys:!0,freeSolo:!0,options:tA,getOptionLabel:function(e){return"string"==typeof e?e:e.inputValue?e.inputValue:e.title},renderOption:function(e,t){var n;return(0,e9.jsxs)(e$.Z,(0,en.Z)((0,en.Z)({},e),{},{children:[(null===(n=t.title)||void 0===n?void 0:n.startsWith('Add "'))&&(O||(O=(0,e9.jsx)(eQ.Z,{children:(0,e9.jsx)(ew(),{})}))),t.title]}))},sx:{width:300}})]})},"./FreeSoloCreateOptionDialog.js":function(){var e=ea.useState(null),t=(0,tl.Z)(e,2),n=t[0],a=t[1],o=ea.useState(!1),r=(0,tl.Z)(o,2),l=r[0],i=r[1],s=function(){d({title:"",year:""}),i(!1)},y=ea.useState({title:"",year:""}),c=(0,tl.Z)(y,2),h=c[0],d=c[1];return(0,e9.jsxs)(ea.Fragment,{children:[(0,e9.jsxs)(e6.Z,{id:"free-solo-dialog-demo",children:[Z||(Z=(0,e9.jsx)(e5.Z,{children:"Free solo dialog"})),(0,e9.jsx)(eY.Z,{value:n,onChange:function(e,t){"string"==typeof t?setTimeout(function(){i(!0),d({title:t,year:""})}):t&&t.inputValue?(i(!0),d({title:t.inputValue,year:""})):a(t)},filterOptions:function(e,t){var n=tB(e,t);return""!==t.inputValue&&n.push({inputValue:t.inputValue,title:'Add "'.concat(t.inputValue,'"')}),n},options:tO,getOptionLabel:function(e){return"string"==typeof e?e:e.inputValue?e.inputValue:e.title},freeSolo:!0,selectOnFocus:!0,clearOnBlur:!0,handleHomeEndKeys:!0,renderOption:function(e,t){return(0,e9.jsx)(e$.Z,(0,en.Z)((0,en.Z)({},e),{},{children:t.title}))},sx:{width:300}})]}),(0,e9.jsx)(tR.ZP,{open:l,onClose:s,children:(0,e9.jsx)(tD.Z,{children:(0,e9.jsxs)("form",{onSubmit:function(e){e.preventDefault(),a({title:h.title,year:tI()(h.year,10)}),s()},children:[j||(j=(0,e9.jsx)(e0.ZP,{id:"basic-modal-dialog-title",component:"h2",level:"inherit",fontSize:"1.25em",mb:"0.25em",children:"Add a new film"})),G||(G=(0,e9.jsx)(e0.ZP,{id:"basic-modal-dialog-description",mt:.5,mb:2,textColor:"text.tertiary",children:"Did you miss any film in our list? Please, add it!"})),(0,e9.jsxs)(e4.Z,{spacing:2,children:[(0,e9.jsxs)(e6.Z,{id:"name",children:[W||(W=(0,e9.jsx)(e5.Z,{children:"Title"})),(0,e9.jsx)(tM.ZP,{autoFocus:!0,type:"text",value:h.title,onChange:function(e){return d((0,en.Z)((0,en.Z)({},h),{},{title:e.target.value}))}})]}),(0,e9.jsxs)(e6.Z,{id:"year",children:[E||(E=(0,e9.jsx)(e5.Z,{children:"year"})),(0,e9.jsx)(tM.ZP,{type:"number",value:h.year,onChange:function(e){return d((0,en.Z)((0,en.Z)({},h),{},{year:e.target.value}))}})]}),(0,e9.jsxs)(e4.Z,{direction:"row",justifyContent:"flex-end",spacing:2,children:[(0,e9.jsx)(tP.Z,{variant:"plain",color:"neutral",onClick:s,children:"Cancel"}),V||(V=(0,e9.jsx)(tP.Z,{type:"submit",children:"Add"}))]})]})]})})})]})},"./AutocompleteError.js":function(){return(0,e9.jsxs)(e6.Z,{error:!0,children:[H||(H=(0,e9.jsx)(e5.Z,{children:"Invalid"})),(0,e9.jsx)(eY.Z,{placeholder:"Error",options:tZ,sx:{width:300}}),z||(z=(0,e9.jsx)(e3.Z,{children:"Oops! something went wrong."}))]})},"./Tags.js":function(){return(0,e9.jsx)(eY.Z,{multiple:!0,id:"tags-default",placeholder:"Favorites",options:tj,getOptionLabel:function(e){return e.title},defaultValue:[tj[13]]})},"./SizeWithLabel.js":function(){return(0,e9.jsxs)(e6.Z,{size:"sm",children:[K||(K=(0,e9.jsx)(e5.Z,{children:"Small field"})),(0,e9.jsx)(eY.Z,{multiple:!0,placeholder:"Favorite movies",options:tG,getOptionLabel:function(e){return e.title},defaultValue:[tG[13]]}),N||(N=(0,e9.jsx)(e3.Z,{children:"This is a small description."}))]})},"./Sizes.js":function(){return(0,e9.jsxs)(e4.Z,{spacing:2,sx:{width:500},children:[(0,e9.jsx)(eY.Z,{multiple:!0,size:"sm",placeholder:'size="sm"',options:tW,getOptionLabel:function(e){return e.title},defaultValue:[tW[13]]}),(0,e9.jsx)(eY.Z,{multiple:!0,size:"md",placeholder:'size="md" (default)',options:tW,getOptionLabel:function(e){return e.title},defaultValue:[tW[13]]}),(0,e9.jsx)(eY.Z,{multiple:!0,size:"lg",placeholder:'size="lg"',options:tW,getOptionLabel:function(e){return e.title},defaultValue:[tW[13]]})]})},"./LimitTags.js":function(){return(0,e9.jsxs)(e6.Z,{id:"multiple-limit-tags",children:[U||(U=(0,e9.jsx)(e5.Z,{children:"limitTags"})),(0,e9.jsx)(eY.Z,{multiple:!0,placeholder:"Favorites",limitTags:2,options:tE,getOptionLabel:function(e){return e.title},defaultValue:[tE[13],tE[12],tE[11]],sx:{width:"500px"}})]})},"./CustomTags.js":function(){return(0,e9.jsx)(eY.Z,{id:"tags-default",multiple:!0,placeholder:"Favorites",options:tH,getOptionLabel:function(e){return e.title},defaultValue:[tH[13]],renderTags:function(e,t){return e.map(function(e,n){return(0,e9.jsx)(tV.Z,(0,en.Z)((0,en.Z)({variant:"solid",color:"primary",endDecorator:J||(J=(0,e9.jsx)(eP(),{fontSize:"sm"}))},t({index:n})),{},{children:e.title}))})}})},"./AutocompleteVariables.js":function(){return(0,e9.jsx)(eM.default,{componentName:"Autocomplete",data:[["Input",[{var:"--Input-minHeight",defaultValue:"40px"},{var:"--Input-radius",defaultValue:"8px"},{var:"--Input-gap",defaultValue:"8px"},{var:"--Input-paddingInline",defaultValue:"12px"},{var:"--Input-decoratorChildHeight",defaultValue:"32px"}]],["Autocomplete",[{var:"--Autocomplete-wrapperGap",defaultValue:"3px"}],{defaultOpen:!0}],["Chip",[{var:"--Chip-minHeight",defaultValue:"32px"},{var:"--Chip-radius"}],{defaultOpen:!0}],["Icon",[{var:"--Icon-fontSize",defaultValue:"24px"}],{defaultOpen:!0}]],renderDemo:function(e){return(0,e9.jsxs)(e4.Z,{spacing:2,sx:{width:400,maxWidth:"100%"},children:[(0,e9.jsx)(eY.Z,{startDecorator:q||(q=(0,e9.jsx)(em(),{})),placeholder:"Decorators",options:tz,sx:e}),(0,e9.jsx)(eY.Z,{multiple:!0,startDecorator:_||(_=(0,e9.jsx)(em(),{})),placeholder:"Decorators",options:tz,defaultValue:[tz[1],tz[6]],sx:e})]})}})},"./GitHubLabel.js":function(){var e=ea.useState(null),t=(0,tl.Z)(e,2),n=t[0],a=t[1],o=ea.useState([tX[1],tX[11]]),r=(0,tl.Z)(o,2),l=r[0],i=r[1],s=ea.useState([]),y=(0,tl.Z)(s,2),c=y[0],h=y[1],d=function(){i(c),n&&n.focus(),a(null)},p=!!n,u=p?"github-label":void 0;return(0,e9.jsxs)(ea.Fragment,{children:[(0,e9.jsxs)(tm.Z,{sx:{width:221},children:[(0,e9.jsxs)(tv.Z,{color:"neutral",component:"button",underline:"none",level:"body-xs","aria-describedby":u,onClick:function(e){h(l),a(e.currentTarget)},sx:{display:"flex",justifyContent:"space-between",width:"100%",fontWeight:"lg",color:"text.secondary",py:1,"&:hover":{color:"primary.plainColor"}},children:[X||(X=(0,e9.jsx)("span",{children:"Labels"})),Y||(Y=(0,e9.jsx)(eW(),{}))]}),(0,e9.jsx)(tS.Z,{size:"sm",sx:{"--List-gap":"3px","--ListItem-minHeight":"20px","--ListItem-paddingX":"4px","--ListItem-paddingY":"0.15em","--ListItem-radius":"2px",fontSize:"13px"},children:l.map(function(e){return(0,e9.jsx)(tx.Z,{sx:{fontWeight:600,backgroundColor:e.color,color:"#fff"},children:e.name},e.name)})})]}),(0,e9.jsx)(tK.r,{id:u,open:p,anchorEl:n,placement:"bottom-start",children:(0,e9.jsx)(tN.d,{onClickAway:d,children:(0,e9.jsxs)(tJ.Z,{variant:"outlined",sx:function(e){return(0,tu.Z)({width:300,boxShadow:"md",borderRadius:"6px",overflow:"hidden","--joy-palette-neutral-plainBg":"#fff","--joy-palette-background-surface":"#fff"},e.getColorSchemeSelector("dark"),{"--joy-palette-neutral-plainBg":"#000","--joy-palette-background-surface":"#000"})},children:[(0,e9.jsx)(e0.ZP,{fontSize:"sm",fontWeight:600,sx:{padding:"8px 10px",borderBottom:"1px solid",borderColor:"divider"},children:"Apply labels to this pull request"}),(0,e9.jsx)(eY.Z,{open:!0,autoFocus:!0,multiple:!0,size:"sm",placeholder:"Filter labels",slots:{listbox:t_},onClose:function(e,t){"escape"===t&&d()},value:c,onChange:function(e,t,n){("keydown"!==e.type||"Backspace"!==e.key||"removeOption"!==n)&&h(t)},disableClearable:!0,disableCloseOnSelect:!0,forcePopupIcon:!1,renderTags:function(){return null},noOptionsText:"No labels",renderOption:function(e,t,n){var a=n.selected;return(0,e9.jsxs)(e$.Z,(0,en.Z)((0,en.Z)({},e),{},{color:"neutral",sx:function(e){var t;return t={alignItems:"flex-start",border:"none",borderBottom:"1px solid",borderColor:"divider","--joy-palette-neutral-plainHoverBg":"rgba(0, 0, 0, 0.03)","--joy-palette-neutral-plainActiveBg":"rgba(0, 0, 0, 0.03)"},(0,tu.Z)(t,e.getColorSchemeSelector("dark"),{"--joy-palette-neutral-plainHoverBg":tq.Z.grey[800],"--joy-palette-neutral-plainActiveBg":tq.Z.grey[800]}),(0,tu.Z)(t,'&[aria-selected="true"]',{fontWeight:"normal"}),(0,tu.Z)(t,"&:first-of-type",{borderTop:"1px solid",borderColor:"divider"}),t},children:[(0,e9.jsx)(eV(),{sx:{visibility:a?"visible":"hidden"}}),(0,e9.jsx)(tm.Z,{component:"span",sx:{width:14,height:14,flexShrink:0,borderRadius:"3px",mr:1,ml:"5px",mt:"4px",backgroundColor:t.color}}),(0,e9.jsxs)(tm.Z,{sx:{flexGrow:1},children:[(0,e9.jsx)(e0.ZP,{level:"title-sm",children:t.name}),(0,e9.jsx)(e0.ZP,{level:"body-xs",children:t.description})]}),(0,e9.jsx)(eP(),{sx:{visibility:a?"visible":"hidden"}})]}))},options:[].concat(tX).sort(function(e,t){var n=l.indexOf(e);n=-1===n?l.length+tX.indexOf(e):n;var a=l.indexOf(t);return n-(a=-1===a?l.length+tX.indexOf(t):a)}),getOptionLabel:function(e){return e.name},sx:{p:"4px 2px",borderTop:"1px solid",borderBottom:"1px solid",borderColor:"divider","--Input-radius":"4px",m:"0.75rem 0.5rem"}})]})})})]})},"./Filter.js":function(){return(0,e9.jsxs)(e6.Z,{id:"filter-demo",children:[$||($=(0,e9.jsx)(e5.Z,{children:"Custom filter"})),(0,e9.jsx)(eY.Z,{placeholder:"Type something",options:t$,getOptionLabel:function(e){return e.title},filterOptions:tY,sx:{width:300}})]})},"./AutocompleteHint.js":function(){var e=ea.useRef(""),t=ea.useState(""),n=(0,tl.Z)(t,2),a=n[0],o=n[1];return(0,e9.jsx)(eY.Z,{onInputChange:function(t,n){n||(e.current="");var a=t4.find(function(e){return e.label.startsWith(n)});n&&a?e.current=a.label:e.current="",o(n)},onKeyDown:function(t){"Tab"===t.key&&e.current&&(o(e.current),t.preventDefault())},onBlur:function(){e.current=""},inputValue:a,filterOptions:function(t,n){var a=t.filter(function(e){return e.label.toLowerCase().trim().includes(n.inputValue.toLowerCase().trim())}),o=t.find(function(e){return e.label.startsWith(n.inputValue)});return a.length>0&&n.inputValue&&o?e.current=o.label:e.current="",a},id:"combo-box-hint-demo",options:t4,slots:{wrapper:t2},slotProps:{wrapper:{hint:e.current},input:{sx:{zIndex:1}}},sx:{width:300}})},"./Highlights.js":function(){return(0,e9.jsxs)(e6.Z,{id:"highlights-demo",children:[Q||(Q=(0,e9.jsx)(e5.Z,{children:"Highlights"})),(0,e9.jsx)(eY.Z,{sx:{width:300},placeholder:"Type a movie name",options:t7,getOptionLabel:function(e){return e.title},renderOption:function(e,t,n){var a=n.inputValue,o=eq()(t.title,a),r=eU()(t.title,o);return(0,e9.jsx)(e$.Z,(0,en.Z)((0,en.Z)({},e),{},{children:(0,e9.jsx)(e0.ZP,{level:"inherit",children:t.title===a?t.title:r.map(function(e,t){return(0,e9.jsx)(e0.ZP,(0,en.Z)((0,en.Z)({},e.highlight&&{variant:"soft",color:"primary",fontWeight:"lg",px:"2px"}),{},{children:e.text}),t)})})}))}})]})},"./Virtualize.js":function(){return(0,e9.jsxs)(e6.Z,{id:"virtualize-demo",children:[ee||(ee=(0,e9.jsx)(e5.Z,{children:"10,000 options"})),(0,e9.jsx)(eY.Z,{sx:{width:300},disableListWrap:!0,placeholder:"Type to search",slots:{listbox:nt},options:nn,groupBy:function(e){return e[0].toUpperCase()},renderOption:function(e,t){return[e,t]},renderGroup:function(e){return e}})]})}},ni={"modules/components/ComponentLinkHeader.js":na.Z};function ns(){return(0,e9.jsx)(er.Z,(0,en.Z)({},et))}},747892:function(e,t,n){"use strict";n.d(t,{Z:function(){return w}});var a,o,r,l,i,s=n(667294),y=n(514950),c=n(695093),h=n(34915),d=n.n(h),p=n(602688),u=n(941615),b=n(785893),m=(0,u.Z)((0,b.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,b.jsx)("path",{fill:"#FDB300",d:"M5.24 2.7L12 2l6.76.7L24 9.48 12 23 0 9.49z"}),(0,b.jsx)("path",{fill:"#EA6C00",d:"M4.85 9l7.13 14L0 9zM19.1 9l-7.12 14L23.95 9z"}),(0,b.jsx)("path",{fill:"#FDAD00",d:"M4.85 9H19.1l-7.12 14z"}),(0,b.jsxs)("g",{children:[(0,b.jsx)("path",{fill:"#FDD231",d:"M11.98 2l-6.75.65-.38 6.34zM11.98 2l6.75.65.37 6.34z"}),(0,b.jsx)("path",{fill:"#FDAD00",d:"M23.95 9l-5.22-6.35.37 6.34zM0 9l5.23-6.35-.38 6.34z"}),(0,b.jsx)("path",{fill:"#FEEEB7",d:"M11.98 2L4.85 9H19.1z"})]})]}),"Sketch"),f=(0,u.Z)((0,b.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,b.jsx)("path",{d:"M8 24a4 4 0 004-4v-4H8a4 4 0 000 8z",fill:"#0ACF83"}),(0,b.jsx)("path",{d:"M4 12a4 4 0 014-4h4v8H8a4 4 0 01-4-4z",fill:"#A259FF"}),(0,b.jsx)("path",{d:"M4 4a4 4 0 014-4h4v8H8a4 4 0 01-4-4z",fill:"#F24E1E"}),(0,b.jsx)("path",{d:"M12 0h4a4 4 0 010 8h-4V0z",fill:"#FF7262"}),(0,b.jsx)("path",{d:"M20 12a4 4 0 11-8 0 4 4 0 018 0z",fill:"#1ABCFE"})]}),"Figma"),g=(0,u.Z)((0,b.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,b.jsx)("path",{d:"M5.54 2h12.92C20.42 2 22 3.6 22 5.58v12.55a3.56 3.56 0 01-3.54 3.58H5.54A3.56 3.56 0 012 18.13V5.58A3.56 3.56 0 015.54 2z",fill:"#470137"}),(0,b.jsx)("path",{d:"M12.52 7.28L10 11.45l2.68 4.41c.01.04.02.07.01.1 0 .04-.04.01-.09.02H10.7c-.13 0-.22 0-.28-.1l-.54-1.04c-.17-.35-.36-.7-.57-1.06l-.6-1.1h-.02c-.17.36-.36.73-.56 1.09l-.57 1.07-.57 1.06c-.04.09-.1.1-.2.1H4.94c-.03 0-.06.01-.06-.03 0-.03 0-.07.02-.1l2.6-4.28-2.53-4.31c-.03-.04-.04-.07-.02-.09.02-.02.05-.03.09-.03h1.9a.5.5 0 01.11.01c.04.02.06.05.09.08.16.36.34.72.53 1.09l.6 1.06c.2.36.39.71.57 1.07h.01c.18-.37.36-.73.55-1.08.18-.36.37-.71.57-1.06l.56-1.06c0-.04.02-.07.05-.09.03-.01.06-.02.1-.01h1.77c.04-.01.09.01.1.06 0 0-.01.04-.03.05zM16.39 16.16c-.62 0-1.24-.12-1.8-.38a2.92 2.92 0 01-1.27-1.15 3.65 3.65 0 01-.46-1.91 3.46 3.46 0 011.8-3.08 4.27 4.27 0 012.29-.48c.07 0 .16 0 .26.02V6.52c0-.06.02-.1.08-.1H19c.04 0 .08.03.08.07v8.01l.02.51.03.49c0 .06-.02.11-.08.13a6.37 6.37 0 01-2.65.53zm.82-1.69v-3.7a2.11 2.11 0 00-1.45.16c-.29.15-.53.36-.71.63-.19.27-.28.63-.28 1.06 0 .3.04.6.14.87a1.44 1.44 0 00.95.93c.23.08.46.11.7.11a4.49 4.49 0 00.65-.06z",fill:"#FF61F6"})]}),"AdobeXD"),v=(0,u.Z)((0,b.jsxs)("g",{fill:"currentColor",fillRule:"nonzero",children:[(0,b.jsx)("path",{d:"M5.84 3c-.52 0-1 .25-1.3.67l-1.4 2.05c-.06.09-.1.19-.14.28h8V3H5.84zM20.86 5.72l-1.4-2.05c-.3-.42-.81-.67-1.33-.67H13v3h8c-.05-.1-.08-.2-.14-.28z",fillOpacity:".79"}),(0,b.jsx)("path",{d:"M20.98 7H3.02L3 7.11V19.4c0 .89.71 1.61 1.58 1.61h14.84A1.6 1.6 0 0021 19.4V7.1L20.98 7zm-6.87 5.36H9.89a1.6 1.6 0 01-1.58-1.61c0-.89.7-1.6 1.58-1.6h4.22c.87 0 1.58.71 1.58 1.6 0 .89-.7 1.6-1.58 1.6z",fillOpacity:".87"})]}),"BundleSize"),T=(0,u.Z)((0,b.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,b.jsx)("path",{d:"M6.92 6.1l2.33 7.99 2.32-8h6.3v.8l-2.37 4.14c.83.27 1.46.76 1.89 1.47.43.71.64 1.55.64 2.51 0 1.2-.31 2.2-.94 3a2.93 2.93 0 01-2.42 1.22 2.9 2.9 0 01-1.96-.72 4.25 4.25 0 01-1.23-1.96l1.31-.55c.2.5.45.9.76 1.18.32.28.69.43 1.12.43.44 0 .82-.26 1.13-.76.31-.51.47-1.12.47-1.84 0-.79-.17-1.4-.5-1.83-.38-.5-.99-.76-1.81-.76h-.64v-.78l2.24-3.92h-2.7l-.16.26-3.3 11.25h-.15l-2.4-8.14-2.41 8.14h-.16L.43 6.1H2.1l2.33 7.99L6 8.71 5.24 6.1h1.68z",fill:"#005A9C"}),(0,b.jsx)("g",{fill:"currentColor",children:(0,b.jsx)("path",{d:"M23.52 6.25l.28 1.62-.98 1.8s-.38-.76-1.01-1.19c-.53-.35-.87-.43-1.41-.33-.7.14-1.48.93-1.82 1.9-.41 1.18-.42 1.74-.43 2.26a4.9 4.9 0 00.11 1.33s-.6-1.06-.59-2.61c0-1.1.19-2.11.72-3.1.47-.87 1.17-1.4 1.8-1.45.63-.07 1.14.23 1.53.55.42.33.83 1.07.83 1.07l.97-1.85zM23.64 15.4s-.43.75-.7 1.04c-.27.28-.76.79-1.36 1.04-.6.25-.91.3-1.5.25a3.03 3.03 0 01-1.34-.52 5.08 5.08 0 01-1.67-2.04s.24.75.39 1.07c.09.18.36.74.74 1.23a3.5 3.5 0 002.1 1.42c1.04.18 1.76-.27 1.94-.38a5.32 5.32 0 001.4-1.43c.1-.14.25-.43.25-.43l-.25-1.25z"})})]}),"W3C"),S=(0,u.Z)((0,b.jsxs)("g",{fill:"none",fillRule:"evenodd",children:[(0,b.jsx)("circle",{fill:"#737373",cx:"12",cy:"12",r:"12"}),(0,b.jsx)("path",{fill:"#BDBDBD",d:"M4 4h16v16H4z"}),(0,b.jsx)("path",{fill:"#FFF",d:"M12 20l8-16H4z"})]}),"MaterialDesign"),x=n(692124),k=(0,p.ZP)("ul")({margin:0,padding:0,listStyle:"none",display:"flex",flexWrap:"wrap",gap:8,"& .MuiChip-root .MuiChip-iconSmall":{marginLeft:4}}),L={"material-ui":"@mui/material","joy-ui":"@mui/joy","base-ui":"@mui/base",system:"@mui/system"};function w(e){var t,n,h=e.markdown.headers,p=e.design,u=(0,x.useTranslate)(),w=null!==(t=null!==(n=h.packageName)&&void 0!==n?n:L[h.productId])&&void 0!==t?t:"@mui/material";return(0,b.jsxs)(k,{children:[h.githubLabel?(0,b.jsx)("li",{children:(0,b.jsx)(y.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"".concat("https://github.com/mui/material-ui","/labels/").concat(encodeURIComponent(h.githubLabel)),icon:a||(a=(0,b.jsx)(d(),{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":u("githubLabel"),"data-ga-event-split":"0.1",label:u("githubLabel")})}):null,(0,b.jsx)("li",{children:(0,b.jsx)(c.Z,{title:u("bundleSizeTooltip"),children:(0,b.jsx)(y.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://bundlephobia.com/package/".concat(w,"@latest"),icon:o||(o=(0,b.jsx)(v,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":u("bundleSize"),"data-ga-event-split":"0.1",label:u("bundleSize")})})}),h.waiAria?(0,b.jsx)("li",{children:(0,b.jsx)(y.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:h.waiAria,icon:r||(r=(0,b.jsx)(T,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"WAI-ARIA","data-ga-event-split":"0.1",label:"WAI-ARIA"})}):null,h.materialDesign?(0,b.jsx)("li",{children:(0,b.jsx)(y.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:h.materialDesign,icon:l||(l=(0,b.jsx)(S,{})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Material Design","data-ga-event-split":"0.1",label:"Material Design"})}):null,!1!==p?i||(i=(0,b.jsxs)(s.Fragment,{children:[(0,b.jsx)("li",{children:(0,b.jsx)(y.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/figma-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,b.jsx)(f,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Figma","data-ga-event-split":"0.1",label:"Figma"})}),(0,b.jsx)("li",{children:(0,b.jsx)(y.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/adobe-xd-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,b.jsx)(g,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Adobe XD","data-ga-event-split":"0.1",label:"Adobe"})}),(0,b.jsx)("li",{children:(0,b.jsx)(y.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/sketch-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,b.jsx)(m,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Sketch","data-ga-event-split":"0.1",label:"Sketch"})})]})):null]})}},484826:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return j}});var a,o,r,l=n(163804),i=n(777193),s=n(648611),y=n(726243),c=n.n(y),h=n(508450),d=n.n(h),p=n(378149),u=n.n(p),b=n(667294),m=n(360191),f=n(907313),g=n(661649),v=n(586903),T=n(746822),S=n(964928),x=n(291350),k=n(561445),L=n(272879),w=n(681314),C=n(537881),A=n(721445),F=n(319606),I=n.n(F),R=n(544913),D=n.n(R),P=n(468504),M=n(261589),B=n(785893);function O(e){return c()(e).length?"\n  sx={".concat(d()(e,null,4),"}").replace("}}","  }}\n"):""}function Z(e){var t=e.slot,n=e.data,a=e.renderField,o=e.defaultOpen,r=b.useState(void 0!==o&&o),l=(0,s.Z)(r,2),i=l[0],y=l[1];return(0,B.jsxs)(b.Fragment,{children:[(0,B.jsx)(g.Z,{id:"accordion-".concat(t),"aria-expanded":i?"true":"false","aria-controls":"section-".concat(t),component:"button",underline:"none",fontSize:"sm",fontWeight:"lg",endDecorator:(0,B.jsx)(D(),{sx:{transition:"0.2s",transform:i?"rotate(-180deg)":void 0}}),onClick:function(){return y(!i)},sx:{pb:1,justifyContent:"space-between",color:i?"text.primary":"text.tertiary"},children:t}),i&&(0,B.jsx)(m.Z,{hidden:i,role:"region","aria-labelledby":"accordion-".concat(t),id:"section-".concat(t),sx:{display:"flex",flexDirection:"column",flexWrap:"wrap",gap:1},children:n.map(function(e){return a(e)})})]})}function j(e){var t=e.componentName,n=e.data,y=e.childrenAccepted,h=void 0!==y&&y,d=e.renderCode,p=b.useState({}),g=(0,s.Z)(p,2),F=g[0],R=g[1];return(0,B.jsxs)(m.Z,{sx:{flexGrow:1,maxWidth:"100%",display:"flex",flexDirection:{xs:"column",md:"row"},"& .markdown-body pre":{margin:0,borderRadius:"md"}},children:[(0,B.jsxs)(m.Z,{sx:function(e){return(0,i.Z)({display:"flex",flexDirection:"column",flexGrow:999,minWidth:0,p:3,gap:3,bgcolor:"#FFF"},e.getColorSchemeSelector("dark"),{backgroundColor:e.palette.neutral[900]})},children:[(0,B.jsx)(m.Z,{sx:{flexGrow:1,m:"auto",display:"flex",alignItems:"center"},children:e.renderDemo(F)}),(0,B.jsx)(M.default,{mode:"dark",children:(0,B.jsx)(P.default,{code:d?d(O(F)):"<".concat(t," ").concat(O(F)).concat(h?">":"/>"),language:"jsx",sx:{display:{xs:"none",md:"block"}}})})]}),(0,B.jsx)(x.Z,{sx:function(e){return{flexShrink:0,gap:2,borderLeft:"1px solid",borderColor:"rgba(".concat(e.vars.palette.neutral.mainChannel," / 0.1)"),background:"rgba(".concat(e.vars.palette.primary.mainChannel," / 0.02)"),backdropFilter:"blur(8px)",minWidth:"280px"}},children:(0,B.jsxs)(v.Z,{component:"div",children:[(0,B.jsxs)(m.Z,{sx:{px:3,pt:1,pb:2,display:"flex",justifyContent:"space-between",alignItems:"center"},children:[(0,B.jsx)(S.ZP,{fontWeight:"lg",sx:{fontFamily:"General Sans"},children:"CSS variables"}),(0,B.jsx)(T.ZP,{"aria-label":"Reset all",variant:"outlined",color:"primary",size:"sm",onClick:function(){return R({})},sx:{visibility:c()(F).length>1?"visible":"hidden","--IconButton-size":"30px"},children:a||(a=(0,B.jsx)(I(),{}))})]}),(0,B.jsx)(f.Z,{sx:{opacity:.5}}),(0,B.jsx)(m.Z,{sx:{p:3,display:"flex",flexDirection:"column",gap:1},children:(void 0===n?[]:n).map(function(e){function t(e){var t,n,a=F[e.var]||e.defaultValue,s=e.inputAttributes||{};return(0,B.jsxs)(k.Z,{children:[(0,B.jsx)(L.Z,{sx:{fontFamily:"Menlo, Consolas","--FormLabel-fontSize":"0.75rem"},children:e.var}),(0,B.jsx)(C.ZP,{size:"sm",variant:"outlined",value:Number(null===(t="".concat(a))||void 0===t?void 0:t.replace("px",""))||"",slotProps:{input:(0,l.Z)({},s)},endDecorator:(0,B.jsxs)(b.Fragment,{children:["string"==typeof a&&(o||(o=(0,B.jsx)(S.ZP,{level:"body-xs",mr:.5,children:"px"}))),(0,B.jsx)(T.ZP,{tabIndex:-1,variant:"plain",color:"neutral",size:"sm",disabled:!F[e.var]&&F[e.var]!==e.defaultValue,onClick:function(){return R(function(t){var n=(0,l.Z)({},t);return delete n[e.var],n})},children:r||(r=(0,B.jsx)(I(),{fontSize:"sm"}))})]}),type:"number",onKeyDown:function(t){(t.ctrlKey||t.metaKey)&&"z"===t.key.toLowerCase()&&R(function(t){var n=(0,l.Z)({},t);return delete n[e.var],n})},onChange:function(t){var n=t.target.value;R(function(t){if(!n){var o=(0,l.Z)({},t);return delete o[e.var],o}return(0,l.Z)((0,l.Z)({},t),{},(0,i.Z)({},e.var,"number"==typeof a?Number(n):"".concat(n,"px")))})},sx:(n={minWidth:0,flexGrow:1},(0,i.Z)(n,"& .".concat(A.Z.root),{"--Input-paddingInline":"0.5rem"}),(0,i.Z)(n,"& .".concat(A.Z.endDecorator),{alignItems:"center"}),n)}),(0,B.jsx)(w.Z,{sx:{mb:1,"--FormHelperText-fontSize":"0.75rem"},children:e.helperText})]},e.var)}if(u()(e)){var n=(0,s.Z)(e,3),a=n[0],y=n[1],c=n[2];return[(0,B.jsx)(Z,(0,l.Z)({slot:a,data:y,renderField:t},c),"variables")]}return t(e)})})]})})]})}},165492:function(e,t,n){"use strict";n.d(t,{Z:function(){return T}});var a,o=n(163804),r=n(667294),l=n(45697),i=n.n(l),s=n(811163),y=n(721923),c=n(875795),h=n(608144),d=n(772184),p=n(400438),u=n(692124),b=n(261589),m=n(703391),f=n(662208),g=n(785893);function v(e){var t=e.mode,n=(0,c.tv)().setMode;return r.useEffect(function(){n(t)},[t,n]),null}function T(e){var t=(0,y.Z)(),n=(0,s.useRouter)(),l=(0,d.ln)(n.asPath).canonicalAs,i=e.disableAd,T=void 0!==i&&i,S=e.disableToc,x=e.disableCssVarsProvider,k=e.demos,L=void 0===k?{}:k,w=e.docs,C=e.demoComponents,A=e.srcComponents,F=w[(0,u.useUserLanguage)()]||w.en,I=l.startsWith("/joy-ui/")&&!(void 0!==x&&x),R=I?c.lL:r.Fragment,D=I?b.default:r.Fragment,P=(0,o.Z)({},I&&{mode:t.palette.mode});return(0,g.jsxs)(p.Z,{description:F.description,disableAd:T,disableToc:void 0!==S&&S,location:F.location,title:F.title,toc:F.toc,children:[T?null:a||(a=(0,g.jsx)(b.default,{children:(0,g.jsx)(f.Z,{children:(0,g.jsx)(m.ZP,{})})})),(0,g.jsxs)(R,{children:[I&&(0,g.jsx)(v,{mode:t.palette.mode}),F.rendered.map(function(e,n){return(0,g.jsx)(h.Z,{demoComponents:C,demos:L,disableAd:T,localizedDoc:F,renderedMarkdownOrDemo:e,srcComponents:A,theme:t,WrapperComponent:D,wrapperProps:P},"demos-section-".concat(n))})]})]})}v.propTypes={mode:i().oneOf(["light","dark"])}},477863:function(e,t,n){"use strict";var a=n(526771),o=n(564836);a(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(391641)),l=n(785893),i=(0,r.default)((0,l.jsx)("path",{d:"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"}),"Add");t.default=i},34915:function(e,t,n){"use strict";var a=n(526771),o=n(564836);a(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(391641)),l=n(785893),i=(0,r.default)((0,l.jsx)("path",{d:"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM7 9h10c.55 0 1 .45 1 1s-.45 1-1 1H7c-.55 0-1-.45-1-1s.45-1 1-1zm6 5H7c-.55 0-1-.45-1-1s.45-1 1-1h6c.55 0 1 .45 1 1s-.45 1-1 1zm4-6H7c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1z"}),"ChatRounded");t.default=i},163024:function(e,t,n){"use strict";var a=n(526771),o=n(564836);a(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(391641)),l=n(785893),i=(0,r.default)((0,l.jsx)("path",{d:"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"}),"Done");t.default=i},544913:function(e,t,n){"use strict";var a=n(526771),o=n(564836);a(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(391641)),l=n(785893),i=(0,r.default)((0,l.jsx)("path",{d:"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"}),"KeyboardArrowDown");t.default=i},819212:function(e,t,n){"use strict";var a=n(526771),o=n(564836);a(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(391641)),l=n(785893),i=(0,r.default)((0,l.jsx)("path",{d:"M21 6h-7.59l3.29-3.29L16 2l-4 4-4-4-.71.71L10.59 6H3c-1.1 0-2 .89-2 2v12c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.11-.9-2-2-2zm0 14H3V8h18v12zM9 10v8l7-4z"}),"LiveTv");t.default=i},319606:function(e,t,n){"use strict";var a=n(526771),o=n(564836);a(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(391641)),l=n(785893),i=(0,r.default)((0,l.jsx)("path",{d:"M12 5V2.21c0-.45-.54-.67-.85-.35l-3.8 3.79c-.2.2-.2.51 0 .71l3.79 3.79c.32.31.86.09.86-.36V7c3.73 0 6.68 3.42 5.86 7.29-.47 2.27-2.31 4.1-4.57 4.57-3.57.75-6.75-1.7-7.23-5.01-.07-.48-.49-.85-.98-.85-.6 0-1.08.53-1 1.13.62 4.39 4.8 7.64 9.53 6.72 3.12-.61 5.63-3.12 6.24-6.24C20.84 9.48 16.94 5 12 5z"}),"ReplayRounded");t.default=i},436587:function(e,t,n){"use strict";var a=n(526771),o=n(564836);a(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(391641)),l=n(785893),i=(0,r.default)((0,l.jsx)("path",{d:"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z"}),"Settings");t.default=i},804506:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/joy-ui/react-autocomplete",function(){return n(481593)}])}},function(e){e.O(0,[52996,8365,82961,61532,41159,1314,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43765,95965,44749,67461,33335,23670,25355,24250,52817,66653,44832,52306,47624,63498,90014,49774,92888,40179],function(){return e(e.s=804506)}),_N_E=e.O()}]);