(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[54878],{858044:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return d}}),o(667294);var n=o(543285),i=o(59626),s=JSON.parse('{"props":{"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"component":{"type":{"name":"elementType"}},"disableGutters":{"type":{"name":"bool"}},"fixed":{"type":{"name":"bool"}},"maxWidth":{"type":{"name":"union","description":"\'xs\'<br>&#124;&nbsp;\'sm\'<br>&#124;&nbsp;\'md\'<br>&#124;&nbsp;\'lg\'<br>&#124;&nbsp;\'xl\'<br>&#124;&nbsp;false<br>&#124;&nbsp;string"}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}}},"name":"Container","imports":["import Container from \'@mui/system/Container\';","import { Container } from \'@mui/system\';"],"styles":{"classes":["root","disableGutters","fixed","maxWidthXs","maxWidthSm","maxWidthMd","maxWidthLg","maxWidthXl"],"globalClasses":{},"name":"MuiContainer"},"spread":true,"themeDefaultProps":true,"muiName":"MuiContainer","forwardsRefTo":"HTMLElement","filename":"/packages/mui-system/src/Container/Container.tsx","inheritance":null,"demos":"<ul><li><a href=\\"/material-ui/react-container/\\">Container (Material UI)</a></li>\\n<li><a href=\\"/system/react-container/\\">Container (MUI System)</a></li></ul>","cssComponent":false}'),r=o(785893);function d(e){var t=e.descriptions,o=e.pageContent;return(0,r.jsx)(n.Z,{descriptions:t,pageContent:o})}d.getInitialProps=function(){var e=o(900121);return{descriptions:(0,i.Z)(e),pageContent:s}}},806411:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/system/api/container",function(){return o(858044)}])},900121:function(e,t,o){var n={"./container.json":457781,"translations/api-docs/container/container.json":457781};function i(e){return o(s(e))}function s(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=s,e.exports=i,i.id=900121},457781:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"classes":{"description":"Override or extend the styles applied to the component."},"component":{"description":"The component used for the root node. Either a string to use a HTML element or a component."},"disableGutters":{"description":"If <code>true</code>, the left and right padding is removed."},"fixed":{"description":"Set the max-width to match the min-width of the current breakpoint. This is useful if you&#39;d prefer to design for a fixed set of sizes instead of trying to accommodate a fully fluid viewport. It&#39;s fluid by default."},"maxWidth":{"description":"Determine the max-width of the container. The container width grows with the size of the screen. Set to <code>false</code> to disable <code>maxWidth</code>."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."}},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"disableGutters":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disableGutters={true}</code>"},"fixed":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>fixed={true}</code>"},"maxWidthXs":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>maxWidth=\\"xs\\"</code>"},"maxWidthSm":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>maxWidth=\\"sm\\"</code>"},"maxWidthMd":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>maxWidth=\\"md\\"</code>"},"maxWidthLg":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>maxWidth=\\"lg\\"</code>"},"maxWidthXl":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>maxWidth=\\"xl\\"</code>"}}}')}},function(e){e.O(0,[52996,8365,30970,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43285,89307,49774,92888,40179],function(){return e(e.s=806411)}),_N_E=e.O()}]);