(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[49004],{980615:function(n,e,t){"use strict";t.d(e,{Z:function(){return p}}),t(667294);var s,a=t(679626),o=t(826077),r=t(785893);function p(n){var e=n.injectFirst,t=n.children;return e&&s?(0,r.jsx)(a.C,{value:s,children:t}):t}"object"==typeof document&&(s=(0,o.default)({key:"css",prepend:!0}))},682332:function(n,e,t){"use strict";var s=(0,t(220884).Z)();e.Z=s},172852:function(n,e,t){"use strict";var s=(0,t(818075).Z)();e.Z=s},872100:function(n,e,t){"use strict";var s=(0,t(76153).Z)();e.Z=s},239351:function(n,e,t){"use strict";t.r(e),t.d(e,{createStack:function(){return a.Z},default:function(){return s.Z},getStackUtilityClass:function(){return r},stackClasses:function(){return p}});var s=t(872100),a=t(76153),o=t(899933);function r(n){return(0,o.Z)("MuiStack",n)}var p=(0,t(173729).Z)("MuiStack",["root"])},760340:function(n,e,t){"use strict";var s=(0,t(853373).Z)();e.Z=s},553094:function(n,e,t){"use strict";t.r(e),t.d(e,{createGrid:function(){return a.Z},default:function(){return s.Z},getGridUtilityClass:function(){return c},gridClasses:function(){return l},unstable_traverseBreakpoints:function(){return u.t}});var s=t(760340),a=t(853373),o=t(849088),r=t(899933),p=t(173729);function c(n){return(0,r.Z)("MuiGrid",n)}var i=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12],l=(0,p.Z)("MuiGrid",["root","container","item"].concat((0,o.Z)([0,1,2,3,4,5,6,7,8,9,10].map(function(n){return"spacing-xs-".concat(n)})),(0,o.Z)(["column-reverse","column","row-reverse","row"].map(function(n){return"direction-xs-".concat(n)})),(0,o.Z)(["nowrap","wrap-reverse","wrap"].map(function(n){return"wrap-xs-".concat(n)})),(0,o.Z)(i.map(function(n){return"grid-xs-".concat(n)})),(0,o.Z)(i.map(function(n){return"grid-sm-".concat(n)})),(0,o.Z)(i.map(function(n){return"grid-md-".concat(n)})),(0,o.Z)(i.map(function(n){return"grid-lg-".concat(n)})),(0,o.Z)(i.map(function(n){return"grid-xl-".concat(n)})))),u=t(116581)},419443:function(n,e,t){"use strict";t.r(e),t.d(e,{Box:function(){return nl.Z},Container:function(){return n_.Z},GlobalStyles:function(){return r.Z},Stack:function(){return nW.Z},StyledEngineProvider:function(){return o.Z},ThemeProvider:function(){return nw.Z},Unstable_Grid:function(){return nz.Z},alignContent:function(){return w},alignItems:function(){return x},alignSelf:function(){return M},alpha:function(){return nx.Fq},backgroundColor:function(){return D.Cz},bgcolor:function(){return D.n9},border:function(){return p.Cg},borderBottom:function(){return p.h$},borderBottomColor:function(){return p.vS},borderColor:function(){return p.tv},borderLeft:function(){return p.sc},borderLeftColor:function(){return p.Vv},borderRadius:function(){return p.E0},borderRight:function(){return p.vQ},borderRightColor:function(){return p.XY},borderTop:function(){return p.j1},borderTopColor:function(){return p.SK},borderTransform:function(){return p.NL},borders:function(){return p.ZP},bottom:function(){return z},boxSizing:function(){return G.ix},breakpoints:function(){return c.ZP},color:function(){return D.$_},colorChannel:function(){return nx.n8},columnGap:function(){return R.e$},compose:function(){return i.Z},containerClasses:function(){return nH},createBox:function(){return nu.Z},createBreakpoints:function(){return nk.Z},createContainer:function(){return nD.Z},createGrid:function(){return nF.createGrid},createSpacing:function(){return nf.Z},createStack:function(){return nU.createStack},createStyled:function(){return nd.ZP},createTheme:function(){return nh.Z},createUnarySpacing:function(){return K.hB},createUnaryUnit:function(){return K.eI},css:function(){return a.css},darken:function(){return nx._j},decomposeColor:function(){return nx.tB},display:function(){return g},emphasize:function(){return nx._4},experimental_sx:function(){return nG},flex:function(){return P},flexBasis:function(){return y},flexDirection:function(){return v},flexGrow:function(){return Z},flexShrink:function(){return V},flexWrap:function(){return C},flexbox:function(){return I},fontFamily:function(){return L},fontSize:function(){return E},fontStyle:function(){return N},fontWeight:function(){return O},gap:function(){return R.SG},getContainerUtilityClass:function(){return nB},getContrastRatio:function(){return nx.mi},getGridUtilityClass:function(){return nF.getGridUtilityClass},getLuminance:function(){return nx.H3},getPath:function(){return l.DW},getStackUtilityClass:function(){return nU.getStackUtilityClass},getStyleFromPropValue:function(){return K.zO},getStyleValue:function(){return l.Jq},getThemeProps:function(){return nv.Z},getValue:function(){return K.NA},grid:function(){return R.ZP},gridArea:function(){return R.fD},gridAutoColumns:function(){return R.aN},gridAutoFlow:function(){return R.B},gridAutoRows:function(){return R.FW},gridClasses:function(){return nF.gridClasses},gridColumn:function(){return R.t4},gridRow:function(){return R.oI},gridTemplateAreas:function(){return R.zI},gridTemplateColumns:function(){return R.K$},gridTemplateRows:function(){return R.RG},handleBreakpoints:function(){return c.k9},height:function(){return G.Cb},hexToRgb:function(){return nx.oo},hslToRgb:function(){return nx.ve},justifyContent:function(){return b},justifyItems:function(){return T},justifySelf:function(){return j},keyframes:function(){return a.keyframes},left:function(){return F},letterSpacing:function(){return $},lighten:function(){return nx.$n},lineHeight:function(){return q},margin:function(){return K.e6},marginKeys:function(){return K.hU},maxHeight:function(){return G.kC},maxWidth:function(){return G.kk},mergeBreakpointsInOrder:function(){return c.dt},minHeight:function(){return G.jw},minWidth:function(){return G.ih},order:function(){return S},padding:function(){return K.o3},paddingKeys:function(){return K.Jj},palette:function(){return D.ZP},paletteTransform:function(){return D.Sh},position:function(){return _},positions:function(){return W},private_safeAlpha:function(){return nx.zp},private_safeColorChannel:function(){return nx.LR},private_safeDarken:function(){return nx.q8},private_safeEmphasize:function(){return nx.fk},private_safeLighten:function(){return nx.ux},recomposeColor:function(){return nx.wy},responsivePropType:function(){return nR},rgbToHex:function(){return nx.vq},right:function(){return H},rowGap:function(){return R.s2},shadows:function(){return U},shape:function(){return ng.Z},shouldForwardProp:function(){return nd.x9},sizeHeight:function(){return G.Vs},sizeWidth:function(){return G.lO},sizing:function(){return G.ZP},sizingTransform:function(){return G.EB},spacing:function(){return K.ZP},stackClasses:function(){return nU.stackClasses},style:function(){return l.ZP},styled:function(){return nm.default},systemDefaultTheme:function(){return nd.P_},textAlign:function(){return X},textTransform:function(){return J},top:function(){return B},typography:function(){return Q},typographyVariant:function(){return Y},unstable_createCssVarsProvider:function(){return nS.Z},unstable_createCssVarsTheme:function(){return nI},unstable_createGetCssVar:function(){return nP.Z},unstable_createStyleFunctionSx:function(){return nn.n},unstable_cssVarsParser:function(){return nZ.ZP},unstable_defaultSxConfig:function(){return nt.Z},unstable_extendSxProp:function(){return ne.Z},unstable_getThemeValue:function(){return ni},unstable_prepareCssVars:function(){return nV.Z},unstable_resolveBreakpointValues:function(){return c.P$},unstable_styleFunctionSx:function(){return nn.Z},unstable_traverseBreakpoints:function(){return nF.unstable_traverseBreakpoints},useTheme:function(){return nC.Z},useThemeProps:function(){return ny.Z},useThemeWithoutDefault:function(){return nb.Z},width:function(){return G.bf},zIndex:function(){return A}});var s=t(242268),a=t(370917),o=t(980615),r=t(588483),p=t(524660),c=t(921766),i=t(487489),l=t(830139),u=(0,l.ZP)({prop:"displayPrint",cssProperty:!1,transform:function(n){return{"@media print":{display:n}}}}),d=(0,l.ZP)({prop:"display"}),m=(0,l.ZP)({prop:"overflow"}),h=(0,l.ZP)({prop:"textOverflow"}),k=(0,l.ZP)({prop:"visibility"}),f=(0,l.ZP)({prop:"whiteSpace"}),g=(0,i.Z)(u,d,m,h,k,f),y=(0,l.ZP)({prop:"flexBasis"}),v=(0,l.ZP)({prop:"flexDirection"}),C=(0,l.ZP)({prop:"flexWrap"}),b=(0,l.ZP)({prop:"justifyContent"}),x=(0,l.ZP)({prop:"alignItems"}),w=(0,l.ZP)({prop:"alignContent"}),S=(0,l.ZP)({prop:"order"}),P=(0,l.ZP)({prop:"flex"}),Z=(0,l.ZP)({prop:"flexGrow"}),V=(0,l.ZP)({prop:"flexShrink"}),M=(0,l.ZP)({prop:"alignSelf"}),T=(0,l.ZP)({prop:"justifyItems"}),j=(0,l.ZP)({prop:"justifySelf"}),I=(0,i.Z)(y,v,C,b,x,w,S,P,Z,V,M,T,j),R=t(216657),D=t(91716),_=(0,l.ZP)({prop:"position"}),A=(0,l.ZP)({prop:"zIndex",themeKey:"zIndex"}),B=(0,l.ZP)({prop:"top"}),H=(0,l.ZP)({prop:"right"}),z=(0,l.ZP)({prop:"bottom"}),F=(0,l.ZP)({prop:"left"}),W=(0,i.Z)(_,A,B,H,z,F),U=(0,l.ZP)({prop:"boxShadow",themeKey:"shadows"}),G=t(505775),K=t(171413),L=(0,l.ZP)({prop:"fontFamily",themeKey:"typography"}),E=(0,l.ZP)({prop:"fontSize",themeKey:"typography"}),N=(0,l.ZP)({prop:"fontStyle",themeKey:"typography"}),O=(0,l.ZP)({prop:"fontWeight",themeKey:"typography"}),$=(0,l.ZP)({prop:"letterSpacing"}),J=(0,l.ZP)({prop:"textTransform"}),q=(0,l.ZP)({prop:"lineHeight"}),X=(0,l.ZP)({prop:"textAlign"}),Y=(0,l.ZP)({prop:"typography",cssProperty:!1,themeKey:"typography"}),Q=(0,i.Z)(Y,L,E,N,O,$,q,X,J),nn=t(328723),ne=t(381322),nt=t(185128),ns=t(777193),na=t(726243),no=t.n(na),nr={borders:p.ZP.filterProps,display:g.filterProps,flexbox:I.filterProps,grid:R.ZP.filterProps,positions:W.filterProps,palette:D.ZP.filterProps,shadows:U.filterProps,sizing:G.ZP.filterProps,spacing:K.ZP.filterProps,typography:Q.filterProps},np={borders:p.ZP,display:g,flexbox:I,grid:R.ZP,positions:W,palette:D.ZP,shadows:U,sizing:G.ZP,spacing:K.ZP,typography:Q},nc=no()(nr).reduce(function(n,e){return nr[e].forEach(function(t){n[t]=np[e]}),n},{}),ni=function(n,e,t){var s,a=(s={},(0,ns.Z)(s,n,e),(0,ns.Z)(s,"theme",t),s),o=nc[n];return o?o(a):(0,ns.Z)({},n,e)},nl=t(682332),nu=t(220884),nd=t(674994),nm=t(811546),nh=t(290037),nk=t(820928),nf=t(366537),ng=t(128999),ny=t(126613),nv=t(637778),nC=t(721923),nb=t(145027),nx=t(992443),nw=t(602754),nS=t(878769),nP=t(61567),nZ=t(296227),nV=t(953749),nM=t(163804),nT=t(80117),nj=["cssVarPrefix","shouldSkipGeneratingVar"],nI=function(n){var e=n.cssVarPrefix,t=n.shouldSkipGeneratingVar,s=(0,nT.Z)(n,nj);return(0,nM.Z)((0,nM.Z)({},n),(0,nV.Z)(s,{prefix:e,shouldSkipGeneratingVar:t}))},nR={},nD=t(818075),n_=t(172852),nA=t(899933);function nB(n){return(0,nA.Z)("MuiContainer",n)}var nH=(0,t(173729).Z)("MuiContainer",["root","disableGutters","fixed","maxWidthXs","maxWidthSm","maxWidthMd","maxWidthLg","maxWidthXl"]),nz=t(760340),nF=t(553094),nW=t(872100),nU=t(239351);function nG(){throw Error((0,s.Z)(20))}},18459:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return M}});var s,a={};t.r(a),t.d(a,{demoComponents:function(){return Z},demos:function(){return P},docs:function(){return S},srcComponents:function(){return V}});var o=t(163804),r=t(667294),p=t.t(r,2),c=t(165492),i=t(419443),l=t(648611),u=t(953749),d=t(878769),m=t(811546),h=t(785893),k={palette:{mode:"light",primary:{default:"#3990FF",dark:"#02367D"},text:{default:"#111111"}}},f={palette:{mode:"dark",primary:{default:"#265D97",dark:"#132F4C",main:"#5090D3"},text:{default:"#ffffff"}}},g=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.cssVarPrefix,t=(0,u.Z)({colorSchemes:{light:k,dark:f}},{prefix:void 0===e?"system-demo":e}),s=t.vars,a=t.generateCssVars;return{colorSchemes:{light:k,dark:f},vars:s,generateCssVars:a,palette:(0,o.Z)((0,o.Z)({},k.palette),{},{colorScheme:"light"})}}(),y=(0,d.Z)({theme:g,modeStorageKey:"system-demo-mode",attribute:"data-system-demo-color-scheme",defaultColorScheme:{light:"light",dark:"dark"}}),v=y.CssVarsProvider,C=y.useColorScheme,b=(0,m.default)("button")(function(n){var e=n.theme;return{backgroundColor:e.vars.palette.primary.default,border:"1px solid ".concat(e.vars.palette.primary.dark),color:e.vars.palette.text.default,padding:10,borderRadius:5,fontWeight:"bold"}}),x=(0,m.default)("div")(function(n){var e=n.theme;return{width:"100%",minHeight:100,padding:20,color:e.vars.palette.text.default,backgroundColor:"dark"===e.palette.mode?"#111":"#fff"}});function w(){var n=r.useState(!1),e=(0,l.Z)(n,2),t=e[0],s=e[1],a=C(),o=a.setMode,p=a.mode;return(r.useEffect(function(){s(!0)},[]),t)?(0,h.jsx)(x,{className:"App",children:(0,h.jsxs)("div",{className:"card",children:[(0,h.jsxs)("h2",{children:["Current mode: ",p]}),(0,h.jsx)(b,{type:"button",onClick:function(){o("dark"===p?"light":"dark")},children:"Toggle Mode"})]})}):null}var S={en:{description:"An overview of adopting CSS theme variables in Material UI or Joy UI.",location:"/brickmmo-docs-v2/data/system/experimental-api/css-theme-variables/css-theme-variables.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<h1>CSS theme variables</h1><p class="description">An overview of adopting CSS theme variables in Material UI or Joy UI.</p>\n\n<p><a href="https://www.w3.org/TR/css-variables-1/" target="_blank" rel="noopener nofollow">CSS variables</a> are a modern cross-browser feature that let you declare variables in CSS and reuse them in other properties.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>If this is your first time encountering CSS variables, you should check out <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties">the MDN Web Docs on CSS custom properties</a> before continuing here.</p>\n\n</div></aside><h2 id="introduction">Introduction<a aria-labelledby="introduction" class="anchor-link" href="#introduction" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="introduction"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>CSS theme variable support is a new feature in MUI System added in <a href="https://github.com/mui/material-ui/releases/tag/v5.0.5"><code>v5.0.5</code></a> as an experimental export. It tells the underlying Material UI, Joy UI or even custom UI library components to use the generated CSS theme variables instead of raw values. This provides significant improvements in developer experience related to theming and customization.\nWith these variables, you can inject a theme into your app&#39;s stylesheet <em>at build time</em> to apply the user&#39;s selected settings before the whole app is rendered.\nYou can checkout the <a href="https://mui.com/material-ui/experimental-api/css-theme-variables/overview/#advantages">advantages</a> and <a href="https://mui.com/material-ui/experimental-api/css-theme-variables/overview/#trade-offs">trade-offs</a> of using CSS theme variables before using them.</p>\n<h3 id="advantages">Advantages<a aria-labelledby="advantages" class="anchor-link" href="#advantages" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="advantages"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><ul>\n<li>It lets you prevent <a href="https://github.com/mui/material-ui/issues/27651">dark-mode SSR flickering</a>.</li>\n<li>You can create unlimited color schemes beyond <code>light</code> and <code>dark</code>.</li>\n<li>It offers a better debugging experience not only for developers but also designers on your team.</li>\n<li>The color scheme of your website is automatically synced between browser tabs.</li>\n<li>It simplifies integration with third-party tools because CSS theme variables are available globally.</li>\n<li>It reduces the need for a nested theme when you want to apply dark styles to a specific part of your application.</li>\n</ul>\n<h2 id="trade-offs">Trade-offs<a aria-labelledby="trade-offs" class="anchor-link" href="#trade-offs" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="trade-offs"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>For server-side applications, there are some trade-offs to consider:</p>\n<table>\n<thead>\n<tr>\n<th align="left"></th>\n<th align="left">Compare to the default method</th>\n<th align="left">Reason</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">HTML size</td>\n<td align="left">Bigger</td>\n<td align="left">CSS variables are generated for both light and dark mode at build time.</td>\n</tr>\n<tr>\n<td align="left"><a href="https://web.dev/articles/fcp">First Contentful Paint (FCP)</a></td>\n<td align="left">Longer</td>\n<td align="left">Since the HTML size is bigger, the time to download the HTML before showing the content is bit longer.</td>\n</tr>\n<tr>\n<td align="left"><a href="https://web.dev/articles/tti">Time to Interactive (TTI)</a></td>\n<td align="left">Shorter (for dark mode)</td>\n<td align="left">Stylesheets are not regenerated between light and dark mode, a lot less time is spent running JavaScript code.</td>\n</tr>\n</tbody></table>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The comparison described in the table above may not be applicable to large and complex applications since there are so many factors that can impact performance metrics.</p>\n\n</div></aside><h2 id="usage">Usage<a aria-labelledby="usage" class="anchor-link" href="#usage" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="usage"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The CSS variables API usage is exposed as a higher order function called <code>unstable_createCssVarsProvider</code> which can be called to create a theme provider and other utilities to share the theme config throughout your app. This is a very low-level function and has a lot of moving parts. If you are already using <a href="https://mui.com/material-ui/experimental-api/css-theme-variables/overview/">Material UI</a> or <a href="https://mui.com/joy-ui/customization/using-css-variables/">Joy UI</a>, they already expose their own <code>CssVarsProvider</code> component that you can use directly without needing to configure your theme. Now that&#39;s out of the way, we can continue with how this util can be used.</p>\n<p>We&#39;ll first define a minimal theme palette for light and dark modes.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// extendTheme.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  unstable_createGetCssVar <span class="token keyword">as</span> systemCreateGetCssVar<span class="token punctuation">,</span>\n  unstable_prepareCssVars <span class="token keyword">as</span> prepareCssVars<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/system\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> lightColorScheme <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">\'#3990FF\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token string">\'#02367D\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">\'#111111\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// ... other colors</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> darkColorScheme <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">\'dark\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">\'#265D97\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token string">\'#132F4C\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">main</span><span class="token operator">:</span> <span class="token string">\'#5090D3\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">\'#ffffff\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// ... other colors</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> createGetCssVar <span class="token operator">=</span> <span class="token punctuation">(</span>cssVarPrefix <span class="token operator">=</span> <span class="token string">\'my-app\'</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n  <span class="token function">systemCreateGetCssVar</span><span class="token punctuation">(</span>cssVarPrefix<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span> cssVarPrefix <span class="token operator">=</span> <span class="token string">\'my-app\'</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> getCssVar <span class="token operator">=</span> <span class="token function">createGetCssVar</span><span class="token punctuation">(</span>cssVarPrefix<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colorSchemes</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">light</span><span class="token operator">:</span> lightColorScheme<span class="token punctuation">,</span>\n      <span class="token literal-property property">dark</span><span class="token operator">:</span> darkColorScheme<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// ... any other objects independent of color-scheme,</span>\n    <span class="token comment">// like fontSizes, spacing tokens, etc</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">vars</span><span class="token operator">:</span> themeVars<span class="token punctuation">,</span> generateCssVars <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">prepareCssVars</span><span class="token punctuation">(</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">colorSchemes</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>colorSchemes <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">prefix</span><span class="token operator">:</span> cssVarPrefix<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  theme<span class="token punctuation">.</span>vars <span class="token operator">=</span> themeVars<span class="token punctuation">;</span>\n  theme<span class="token punctuation">.</span>generateCssVars <span class="token operator">=</span> generateCssVars<span class="token punctuation">;</span>\n  theme<span class="token punctuation">.</span>palette <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>theme<span class="token punctuation">.</span>colorSchemes<span class="token punctuation">.</span>light<span class="token punctuation">.</span>palette<span class="token punctuation">,</span>\n    <span class="token literal-property property">colorScheme</span><span class="token operator">:</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> theme<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> myCustomDefaultTheme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> myCustomDefaultTheme<span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Here, the returned <code>theme</code> object needs to follow a certain structure to be used correctly by the final <code>CssVarsProvider</code>. It should have a <code>colorSchemes</code> key with the light and dark (and any other) palette. <code>prepareCssVars</code> import from <code>@mui/system</code> is used to create CSS variable names which can then be easily accessed using the returned <code>vars</code>. This is also added to the <code>theme</code> object. Finally, <code>myCustomDefaultTheme</code> theme object is created that can now be passed to the <code>createCssVarsProvider</code> to get a <code>CssVarsProvider</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// CssVarsProvider.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> unstable_createCssVarsProvider <span class="token keyword">as</span> createCssVarsProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/system\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> CssVarsProvider<span class="token punctuation">,</span> useColorScheme <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createCssVarsProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">defaultColorScheme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token string">\'dark\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> myCustomDefaultTheme<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span> CssVarsProvider<span class="token punctuation">,</span> useColorScheme <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Now wrap your top level app component with this <code>CssVarsProvider</code> component and then you can access the passed theme value to any of the components rendered inside the provider.</p>\n<p>Example of a component using the CSS variable -</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// Button.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/system\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Button <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>default<span class="token punctuation">,</span>\n  <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">1px solid </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>dark<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>text<span class="token punctuation">.</span>default<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Button<span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The hook, <code>useColorScheme</code> can be used to get the current <code>mode</code> (light or dark) and can also update the mode like:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// App.js</span>\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> setMode<span class="token punctuation">,</span> mode <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useColorScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">toggleMode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setMode</span><span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">\'dark\'</span> <span class="token operator">?</span> <span class="token string">\'light\'</span> <span class="token operator">:</span> <span class="token string">\'dark\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Current Mode<span class="token operator">:</span> <span class="token punctuation">{</span>mode<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>toggleMode<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Toggle Mode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// main.js</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> ReactDOM <span class="token keyword">from</span> <span class="token string">\'react-dom/client\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CssVarsProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./CssVarsProvider\'</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'root\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Now, the Button&#39;s <code>backgroundColor</code>, <code>borderColor</code> and text <code>color</code> values will correctly use the colors based on the selected <code>mode</code>.</p>\n<h3 id="demo">Demo<a aria-labelledby="demo" class="anchor-link" href="#demo" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="demo"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3>',{demo:"CreateCssVarsProvider.js"},'<p>For framework or language specific setup, see <a href="https://mui.com/material-ui/experimental-api/css-theme-variables/usage/#server-side-rendering">this</a></p>\n<p>See the complete usage of <code>createVssVarsProvider</code> in <a href="https://github.com/mui/material-ui/blob/master/packages/mui-material/src/styles/CssVarsProvider.tsx">Material UI</a> and <a href="https://github.com/mui/material-ui/blob/master/packages/mui-joy/src/styles/CssVarsProvider.tsx">Joy UI</a>.</p>\n<h2 id="api">API<a aria-labelledby="api" class="anchor-link" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="createcssvarsprovider-options"><code>createCssVarsProvider</code> options<a aria-labelledby="createcssvarsprovider-options" class="anchor-link" href="#createcssvarsprovider-options" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="createcssvarsprovider-options"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><ul>\n<li><code>attribute?</code>: DOM attribute for applying color scheme (<code>data-color-scheme</code> by default)</li>\n<li><code>modeStorageKey?</code>: localStorage key used to store application <code>mode</code> (<code>mode</code> by default)</li>\n<li><code>colorSchemeStorageKey?</code>: localStorage key used to store <code>colorScheme</code></li>\n<li><code>defaultColorScheme</code>: Design system default color scheme (string or object depending on if the design system has 1 or more themes, can be <code>light</code> or <code>dark</code>)</li>\n<li><code>defaultMode?</code>: Design system default mode (<code>light</code> by default)</li>\n<li><code>disableTransitionOnChange?</code>: Disable CSS transitions when switching between modes or color schemes (<code>false</code> by default)</li>\n<li><code>themeId?</code>: The design system&#39;s unique id for getting the corresponded theme when there are multiple design systems.</li>\n<li><code>theme</code>: Design system default theme. It&#39;s structure, besides the minimum requirements by <code>createCssVarsProvider</code>, is upto the design system to implement.</li>\n<li><code>resolveTheme(theme: Theme) =&gt; Theme</code>: A function to be called after the CSS variables are attached. The result of this function will be the final theme pass to <code>ThemeProvider</code>.</li>\n</ul>\n<p><code>createCssVarsProvider</code> returns 3 items.</p>\n<h3 id="cssvarsprovider-gt-props"><code>&lt;CssVarsProvider&gt;</code> props<a aria-labelledby="cssvarsprovider-gt-props" class="anchor-link" href="#cssvarsprovider-gt-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="cssvarsprovider-gt-props"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><ul>\n<li><code>defaultMode?: &#39;light&#39; | &#39;dark&#39; | &#39;system&#39;</code> - Application&#39;s default mode (<code>light</code> by default)</li>\n<li><code>disableTransitionOnChange : boolean</code> - Disable CSS transitions when switching between modes</li>\n<li><code>theme: ThemeInput</code> - the theme provided to React&#39;s context</li>\n<li><code>modeStorageKey?: string</code> - localStorage key used to store application <code>mode</code></li>\n<li><code>attribute?: string</code> - DOM attribute for applying color scheme</li>\n</ul>\n<h3 id="usecolorscheme-colorschemecontextvalue"><code>useColorScheme: () =&gt; ColorSchemeContextValue</code><a aria-labelledby="usecolorscheme-colorschemecontextvalue" class="anchor-link" href="#usecolorscheme-colorschemecontextvalue" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="usecolorscheme-colorschemecontextvalue"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><ul>\n<li><code>mode: string</code> - The user&#39;s selected mode</li>\n<li><code>setMode: mode =&gt; {…}</code> - Function for setting the <code>mode</code>. The <code>mode</code> is saved to internal state and local storage; if <code>mode</code> is null, it will be reset to the default mode</li>\n</ul>\n<h3 id="getinitcolorschemescript-options-react-reactelement"><code>getInitColorSchemeScript: (options) =&gt; React.ReactElement</code><a aria-labelledby="getinitcolorschemescript-options-react-reactelement" class="anchor-link" href="#getinitcolorschemescript-options-react-reactelement" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="getinitcolorschemescript-options-react-reactelement"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p><strong>options</strong></p>\n<ul>\n<li><code>defaultMode?: &#39;light&#39; | &#39;dark&#39; | &#39;system&#39;</code>: - Application&#39;s default mode before React renders the tree (<code>light</code> by default)</li>\n<li><code>modeStorageKey?: string</code>: - localStorage key used to store application <code>mode</code></li>\n<li><code>attribute?: string</code> - DOM attribute for applying color scheme</li>\n</ul>\n'],toc:[{text:"Introduction",level:2,hash:"introduction",children:[{text:"Advantages",level:3,hash:"advantages"}]},{text:"Trade-offs",level:2,hash:"trade-offs",children:[]},{text:"Usage",level:2,hash:"usage",children:[{text:"Demo",level:3,hash:"demo"}]},{text:"API",level:2,hash:"api",children:[{text:"createCssVarsProvider options",level:3,hash:"createcssvarsprovider-options"},{text:"&lt;CssVarsProvider&gt; props",level:3,hash:"cssvarsprovider-gt-props"},{text:"useColorScheme: () =&gt; ColorSchemeContextValue",level:3,hash:"usecolorscheme-colorschemecontextvalue"},{text:"getInitColorSchemeScript: (options) =&gt; React.ReactElement",level:3,hash:"getinitcolorschemescript-options-react-reactelement"}]}],title:"CSS theme variables",headers:{components:[]}}},P={"CreateCssVarsProvider.js":{module:"./CreateCssVarsProvider.js",raw:"import * as React from 'react';\nimport {\n  unstable_createCssVarsProvider as createCssVarsProvider,\n  unstable_prepareCssVars as prepareCssVars,\n  styled,\n} from '@mui/system';\n\nconst lightColorScheme = {\n  palette: {\n    mode: 'light',\n    primary: {\n      default: '#3990FF',\n      dark: '#02367D',\n    },\n    text: {\n      default: '#111111',\n    },\n    // ... other colors\n  },\n};\n\nconst darkColorScheme = {\n  palette: {\n    mode: 'dark',\n    primary: {\n      default: '#265D97',\n      dark: '#132F4C',\n      main: '#5090D3',\n    },\n    text: {\n      default: '#ffffff',\n    },\n    // ... other colors\n  },\n};\n\nfunction extendTheme({ cssVarPrefix = 'system-demo' } = {}) {\n  const { vars: themeVars, generateCssVars } = prepareCssVars(\n    {\n      colorSchemes: {\n        light: lightColorScheme,\n        dark: darkColorScheme,\n      },\n    },\n    {\n      prefix: cssVarPrefix,\n    },\n  );\n  const theme = {\n    colorSchemes: {\n      light: lightColorScheme,\n      dark: darkColorScheme,\n    },\n    // ... any other objects independent of color-scheme,\n    // like fontSizes, spacing etc\n    vars: themeVars,\n    generateCssVars,\n    palette: {\n      ...lightColorScheme.palette,\n      colorScheme: 'light',\n    },\n  };\n\n  return theme;\n}\n\nconst myCustomDefaultTheme = extendTheme();\n\nconst { CssVarsProvider, useColorScheme } = createCssVarsProvider({\n  theme: myCustomDefaultTheme,\n  modeStorageKey: 'system-demo-mode',\n  attribute: 'data-system-demo-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark',\n  },\n});\n\nconst Button = styled('button')(({ theme }) => ({\n  backgroundColor: theme.vars.palette.primary.default,\n  border: `1px solid ${theme.vars.palette.primary.dark}`,\n  color: theme.vars.palette.text.default,\n  padding: 10,\n  borderRadius: 5,\n  fontWeight: 'bold',\n}));\n\nconst WrapperDiv = styled('div')(({ theme }) => ({\n  width: '100%',\n  minHeight: 100,\n  padding: 20,\n  color: theme.vars.palette.text.default,\n  backgroundColor: theme.palette.mode === 'dark' ? '#111' : '#fff',\n}));\n\nfunction App() {\n  // changes specific to this demo.\n  const [shouldRender, setShouldRender] = React.useState(false);\n  const { setMode, mode } = useColorScheme();\n  const toggleMode = () => {\n    setMode(mode === 'dark' ? 'light' : 'dark');\n  };\n\n  // to avoid hydration error in demo. unrelated to the actual implementation\n  React.useEffect(() => {\n    setShouldRender(true);\n  }, []);\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  return (\n    <WrapperDiv className=\"App\">\n      <div className=\"card\">\n        <h2>Current mode: {mode}</h2>\n        <Button type=\"button\" onClick={toggleMode}>\n          Toggle Mode\n        </Button>\n      </div>\n    </WrapperDiv>\n  );\n}\n\nexport default function CreateCssVarsProvider() {\n  return (\n    <CssVarsProvider>\n      <App />\n    </CssVarsProvider>\n  );\n}\n",jsxPreview:"<CssVarsProvider>\n  <App />\n</CssVarsProvider>",moduleTS:"./CreateCssVarsProvider.js",rawTS:"import * as React from 'react';\nimport {\n  unstable_createCssVarsProvider as createCssVarsProvider,\n  unstable_prepareCssVars as prepareCssVars,\n  styled,\n} from '@mui/system';\n\ntype Theme = {\n  colorSchemes: {\n    light: typeof lightColorScheme;\n    dark: typeof lightColorScheme;\n  };\n  palette: {\n    colorScheme: 'light' | 'dark';\n  } & (typeof lightColorScheme)['palette'];\n  vars: ReturnType<typeof prepareCssVars>['vars'];\n  generateCssVars: ReturnType<typeof prepareCssVars>['generateCssVars'];\n};\n\nconst lightColorScheme = {\n  palette: {\n    mode: 'light',\n    primary: {\n      default: '#3990FF',\n      dark: '#02367D',\n    },\n    text: {\n      default: '#111111',\n    },\n    // ... other colors\n  },\n};\n\nconst darkColorScheme = {\n  palette: {\n    mode: 'dark',\n    primary: {\n      default: '#265D97',\n      dark: '#132F4C',\n      main: '#5090D3',\n    },\n    text: {\n      default: '#ffffff',\n    },\n    // ... other colors\n  },\n};\n\nfunction extendTheme({ cssVarPrefix = 'system-demo' } = {}) {\n  const { vars: themeVars, generateCssVars } = prepareCssVars(\n    {\n      colorSchemes: {\n        light: lightColorScheme,\n        dark: darkColorScheme,\n      },\n    },\n    {\n      prefix: cssVarPrefix,\n    },\n  );\n  const theme: Theme = {\n    colorSchemes: {\n      light: lightColorScheme,\n      dark: darkColorScheme,\n    },\n    // ... any other objects independent of color-scheme,\n    // like fontSizes, spacing etc\n    vars: themeVars,\n    generateCssVars,\n    palette: {\n      ...lightColorScheme.palette,\n      colorScheme: 'light',\n    },\n  };\n\n  return theme;\n}\n\nconst myCustomDefaultTheme = extendTheme();\n\nconst { CssVarsProvider, useColorScheme } = createCssVarsProvider({\n  theme: myCustomDefaultTheme,\n  modeStorageKey: 'system-demo-mode',\n  attribute: 'data-system-demo-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark',\n  },\n});\n\nconst Button = styled('button')<{ theme?: Theme }>(({ theme }) => ({\n  backgroundColor: theme.vars.palette.primary.default,\n  border: `1px solid ${theme.vars.palette.primary.dark}`,\n  color: theme.vars.palette.text.default,\n  padding: 10,\n  borderRadius: 5,\n  fontWeight: 'bold',\n}));\n\nconst WrapperDiv = styled('div')<{ theme?: Theme }>(({ theme }) => ({\n  width: '100%',\n  minHeight: 100,\n  padding: 20,\n  color: theme.vars.palette.text.default,\n  backgroundColor: theme.palette.mode === 'dark' ? '#111' : '#fff',\n}));\n\nfunction App() {\n  // changes specific to this demo.\n  const [shouldRender, setShouldRender] = React.useState(false);\n  const { setMode, mode } = useColorScheme();\n  const toggleMode = () => {\n    setMode(mode === 'dark' ? 'light' : 'dark');\n  };\n\n  // to avoid hydration error in demo. unrelated to the actual implementation\n  React.useEffect(() => {\n    setShouldRender(true);\n  }, []);\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  return (\n    <WrapperDiv className=\"App\">\n      <div className=\"card\">\n        <h2>Current mode: {mode}</h2>\n        <Button type=\"button\" onClick={toggleMode}>\n          Toggle Mode\n        </Button>\n      </div>\n    </WrapperDiv>\n  );\n}\n\nexport default function CreateCssVarsProvider() {\n  return (\n    <CssVarsProvider>\n      <App />\n    </CssVarsProvider>\n  );\n}\n"}};P.scope={process:{},import:{react:p,"@mui/system":i}};var Z={"./CreateCssVarsProvider.js":function(){return s||(s=(0,h.jsx)(v,{children:(0,h.jsx)(w,{})}))}},V={};function M(){return(0,h.jsx)(c.Z,(0,o.Z)({},a))}},165492:function(n,e,t){"use strict";t.d(e,{Z:function(){return C}});var s,a=t(163804),o=t(667294),r=t(45697),p=t.n(r),c=t(811163),i=t(721923),l=t(875795),u=t(608144),d=t(772184),m=t(400438),h=t(692124),k=t(261589),f=t(703391),g=t(662208),y=t(785893);function v(n){var e=n.mode,t=(0,l.tv)().setMode;return o.useEffect(function(){t(e)},[e,t]),null}function C(n){var e=(0,i.Z)(),t=(0,c.useRouter)(),r=(0,d.ln)(t.asPath).canonicalAs,p=n.disableAd,C=void 0!==p&&p,b=n.disableToc,x=n.disableCssVarsProvider,w=n.demos,S=void 0===w?{}:w,P=n.docs,Z=n.demoComponents,V=n.srcComponents,M=P[(0,h.useUserLanguage)()]||P.en,T=r.startsWith("/joy-ui/")&&!(void 0!==x&&x),j=T?l.lL:o.Fragment,I=T?k.default:o.Fragment,R=(0,a.Z)({},T&&{mode:e.palette.mode});return(0,y.jsxs)(m.Z,{description:M.description,disableAd:C,disableToc:void 0!==b&&b,location:M.location,title:M.title,toc:M.toc,children:[C?null:s||(s=(0,y.jsx)(k.default,{children:(0,y.jsx)(g.Z,{children:(0,y.jsx)(f.ZP,{})})})),(0,y.jsxs)(j,{children:[T&&(0,y.jsx)(v,{mode:e.palette.mode}),M.rendered.map(function(n,t){return(0,y.jsx)(u.Z,{demoComponents:Z,demos:S,disableAd:C,localizedDoc:M,renderedMarkdownOrDemo:n,srcComponents:V,theme:e,WrapperComponent:I,wrapperProps:R},"demos-section-".concat(t))})]})]})}v.propTypes={mode:p().oneOf(["light","dark"])}},590673:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/system/experimental-api/css-theme-variables",function(){return t(18459)}])}},function(n){n.O(0,[52996,8365,82961,61532,41159,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43765,95965,44749,67461,33335,53373,49774,92888,40179],function(){return n(n.s=590673)}),_N_E=n.O()}]);