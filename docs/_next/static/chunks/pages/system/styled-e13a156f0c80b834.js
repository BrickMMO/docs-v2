(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7954],{980615:function(n,e,s){"use strict";s.d(e,{Z:function(){return c}}),s(667294);var t,a=s(679626),o=s(826077),p=s(785893);function c(n){var e=n.injectFirst,s=n.children;return e&&t?(0,p.jsx)(a.C,{value:t,children:s}):s}"object"==typeof document&&(t=(0,o.default)({key:"css",prepend:!0}))},682332:function(n,e,s){"use strict";var t=(0,s(220884).Z)();e.Z=t},172852:function(n,e,s){"use strict";var t=(0,s(818075).Z)();e.Z=t},872100:function(n,e,s){"use strict";var t=(0,s(76153).Z)();e.Z=t},239351:function(n,e,s){"use strict";s.r(e),s.d(e,{createStack:function(){return a.Z},default:function(){return t.Z},getStackUtilityClass:function(){return p},stackClasses:function(){return c}});var t=s(872100),a=s(76153),o=s(899933);function p(n){return(0,o.Z)("MuiStack",n)}var c=(0,s(173729).Z)("MuiStack",["root"])},760340:function(n,e,s){"use strict";var t=(0,s(853373).Z)();e.Z=t},553094:function(n,e,s){"use strict";s.r(e),s.d(e,{createGrid:function(){return a.Z},default:function(){return t.Z},getGridUtilityClass:function(){return r},gridClasses:function(){return l},unstable_traverseBreakpoints:function(){return u.t}});var t=s(760340),a=s(853373),o=s(849088),p=s(899933),c=s(173729);function r(n){return(0,p.Z)("MuiGrid",n)}var i=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12],l=(0,c.Z)("MuiGrid",["root","container","item"].concat((0,o.Z)([0,1,2,3,4,5,6,7,8,9,10].map(function(n){return"spacing-xs-".concat(n)})),(0,o.Z)(["column-reverse","column","row-reverse","row"].map(function(n){return"direction-xs-".concat(n)})),(0,o.Z)(["nowrap","wrap-reverse","wrap"].map(function(n){return"wrap-xs-".concat(n)})),(0,o.Z)(i.map(function(n){return"grid-xs-".concat(n)})),(0,o.Z)(i.map(function(n){return"grid-sm-".concat(n)})),(0,o.Z)(i.map(function(n){return"grid-md-".concat(n)})),(0,o.Z)(i.map(function(n){return"grid-lg-".concat(n)})),(0,o.Z)(i.map(function(n){return"grid-xl-".concat(n)})))),u=s(116581)},419443:function(n,e,s){"use strict";s.r(e),s.d(e,{Box:function(){return nl.Z},Container:function(){return n_.Z},GlobalStyles:function(){return p.Z},Stack:function(){return nV.Z},StyledEngineProvider:function(){return o.Z},ThemeProvider:function(){return nw.Z},Unstable_Grid:function(){return nH.Z},alignContent:function(){return w},alignItems:function(){return C},alignSelf:function(){return S},alpha:function(){return nC.Fq},backgroundColor:function(){return U.Cz},bgcolor:function(){return U.n9},border:function(){return c.Cg},borderBottom:function(){return c.h$},borderBottomColor:function(){return c.vS},borderColor:function(){return c.tv},borderLeft:function(){return c.sc},borderLeftColor:function(){return c.Vv},borderRadius:function(){return c.E0},borderRight:function(){return c.vQ},borderRightColor:function(){return c.XY},borderTop:function(){return c.j1},borderTopColor:function(){return c.SK},borderTransform:function(){return c.NL},borders:function(){return c.ZP},bottom:function(){return H},boxSizing:function(){return G.ix},breakpoints:function(){return r.ZP},color:function(){return U.$_},colorChannel:function(){return nC.n8},columnGap:function(){return I.e$},compose:function(){return i.Z},containerClasses:function(){return nO},createBox:function(){return nu.Z},createBreakpoints:function(){return nk.Z},createContainer:function(){return nU.Z},createGrid:function(){return nz.createGrid},createSpacing:function(){return ny.Z},createStack:function(){return nK.createStack},createStyled:function(){return nd.ZP},createTheme:function(){return nh.Z},createUnarySpacing:function(){return F.hB},createUnaryUnit:function(){return F.eI},css:function(){return a.css},darken:function(){return nC._j},decomposeColor:function(){return nC.tB},display:function(){return f},emphasize:function(){return nC._4},experimental_sx:function(){return nG},flex:function(){return P},flexBasis:function(){return g},flexDirection:function(){return v},flexGrow:function(){return M},flexShrink:function(){return Z},flexWrap:function(){return b},flexbox:function(){return R},fontFamily:function(){return $},fontSize:function(){return D},fontStyle:function(){return L},fontWeight:function(){return E},gap:function(){return I.SG},getContainerUtilityClass:function(){return nA},getContrastRatio:function(){return nC.mi},getGridUtilityClass:function(){return nz.getGridUtilityClass},getLuminance:function(){return nC.H3},getPath:function(){return l.DW},getStackUtilityClass:function(){return nK.getStackUtilityClass},getStyleFromPropValue:function(){return F.zO},getStyleValue:function(){return l.Jq},getThemeProps:function(){return nv.Z},getValue:function(){return F.NA},grid:function(){return I.ZP},gridArea:function(){return I.fD},gridAutoColumns:function(){return I.aN},gridAutoFlow:function(){return I.B},gridAutoRows:function(){return I.FW},gridClasses:function(){return nz.gridClasses},gridColumn:function(){return I.t4},gridRow:function(){return I.oI},gridTemplateAreas:function(){return I.zI},gridTemplateColumns:function(){return I.K$},gridTemplateRows:function(){return I.RG},handleBreakpoints:function(){return r.k9},height:function(){return G.Cb},hexToRgb:function(){return nC.oo},hslToRgb:function(){return nC.ve},justifyContent:function(){return x},justifyItems:function(){return j},justifySelf:function(){return B},keyframes:function(){return a.keyframes},left:function(){return z},letterSpacing:function(){return N},lighten:function(){return nC.$n},lineHeight:function(){return X},margin:function(){return F.e6},marginKeys:function(){return F.hU},maxHeight:function(){return G.kC},maxWidth:function(){return G.kk},mergeBreakpointsInOrder:function(){return r.dt},minHeight:function(){return G.jw},minWidth:function(){return G.ih},order:function(){return T},padding:function(){return F.o3},paddingKeys:function(){return F.Jj},palette:function(){return U.ZP},paletteTransform:function(){return U.Sh},position:function(){return _},positions:function(){return V},private_safeAlpha:function(){return nC.zp},private_safeColorChannel:function(){return nC.LR},private_safeDarken:function(){return nC.q8},private_safeEmphasize:function(){return nC.fk},private_safeLighten:function(){return nC.ux},recomposeColor:function(){return nC.wy},responsivePropType:function(){return nI},rgbToHex:function(){return nC.vq},right:function(){return O},rowGap:function(){return I.s2},shadows:function(){return K},shape:function(){return nf.Z},shouldForwardProp:function(){return nd.x9},sizeHeight:function(){return G.Vs},sizeWidth:function(){return G.lO},sizing:function(){return G.ZP},sizingTransform:function(){return G.EB},spacing:function(){return F.ZP},stackClasses:function(){return nK.stackClasses},style:function(){return l.ZP},styled:function(){return nm.default},systemDefaultTheme:function(){return nd.P_},textAlign:function(){return Y},textTransform:function(){return q},top:function(){return A},typography:function(){return Q},typographyVariant:function(){return J},unstable_createCssVarsProvider:function(){return nT.Z},unstable_createCssVarsTheme:function(){return nR},unstable_createGetCssVar:function(){return nP.Z},unstable_createStyleFunctionSx:function(){return nn.n},unstable_cssVarsParser:function(){return nM.ZP},unstable_defaultSxConfig:function(){return ns.Z},unstable_extendSxProp:function(){return ne.Z},unstable_getThemeValue:function(){return ni},unstable_prepareCssVars:function(){return nZ.Z},unstable_resolveBreakpointValues:function(){return r.P$},unstable_styleFunctionSx:function(){return nn.Z},unstable_traverseBreakpoints:function(){return nz.unstable_traverseBreakpoints},useTheme:function(){return nb.Z},useThemeProps:function(){return ng.Z},useThemeWithoutDefault:function(){return nx.Z},width:function(){return G.bf},zIndex:function(){return W}});var t=s(242268),a=s(370917),o=s(980615),p=s(588483),c=s(524660),r=s(921766),i=s(487489),l=s(830139),u=(0,l.ZP)({prop:"displayPrint",cssProperty:!1,transform:function(n){return{"@media print":{display:n}}}}),d=(0,l.ZP)({prop:"display"}),m=(0,l.ZP)({prop:"overflow"}),h=(0,l.ZP)({prop:"textOverflow"}),k=(0,l.ZP)({prop:"visibility"}),y=(0,l.ZP)({prop:"whiteSpace"}),f=(0,i.Z)(u,d,m,h,k,y),g=(0,l.ZP)({prop:"flexBasis"}),v=(0,l.ZP)({prop:"flexDirection"}),b=(0,l.ZP)({prop:"flexWrap"}),x=(0,l.ZP)({prop:"justifyContent"}),C=(0,l.ZP)({prop:"alignItems"}),w=(0,l.ZP)({prop:"alignContent"}),T=(0,l.ZP)({prop:"order"}),P=(0,l.ZP)({prop:"flex"}),M=(0,l.ZP)({prop:"flexGrow"}),Z=(0,l.ZP)({prop:"flexShrink"}),S=(0,l.ZP)({prop:"alignSelf"}),j=(0,l.ZP)({prop:"justifyItems"}),B=(0,l.ZP)({prop:"justifySelf"}),R=(0,i.Z)(g,v,b,x,C,w,T,P,M,Z,S,j,B),I=s(216657),U=s(91716),_=(0,l.ZP)({prop:"position"}),W=(0,l.ZP)({prop:"zIndex",themeKey:"zIndex"}),A=(0,l.ZP)({prop:"top"}),O=(0,l.ZP)({prop:"right"}),H=(0,l.ZP)({prop:"bottom"}),z=(0,l.ZP)({prop:"left"}),V=(0,i.Z)(_,W,A,O,H,z),K=(0,l.ZP)({prop:"boxShadow",themeKey:"shadows"}),G=s(505775),F=s(171413),$=(0,l.ZP)({prop:"fontFamily",themeKey:"typography"}),D=(0,l.ZP)({prop:"fontSize",themeKey:"typography"}),L=(0,l.ZP)({prop:"fontStyle",themeKey:"typography"}),E=(0,l.ZP)({prop:"fontWeight",themeKey:"typography"}),N=(0,l.ZP)({prop:"letterSpacing"}),q=(0,l.ZP)({prop:"textTransform"}),X=(0,l.ZP)({prop:"lineHeight"}),Y=(0,l.ZP)({prop:"textAlign"}),J=(0,l.ZP)({prop:"typography",cssProperty:!1,themeKey:"typography"}),Q=(0,i.Z)(J,$,D,L,E,N,X,Y,q),nn=s(328723),ne=s(381322),ns=s(185128),nt=s(777193),na=s(726243),no=s.n(na),np={borders:c.ZP.filterProps,display:f.filterProps,flexbox:R.filterProps,grid:I.ZP.filterProps,positions:V.filterProps,palette:U.ZP.filterProps,shadows:K.filterProps,sizing:G.ZP.filterProps,spacing:F.ZP.filterProps,typography:Q.filterProps},nc={borders:c.ZP,display:f,flexbox:R,grid:I.ZP,positions:V,palette:U.ZP,shadows:K,sizing:G.ZP,spacing:F.ZP,typography:Q},nr=no()(np).reduce(function(n,e){return np[e].forEach(function(s){n[s]=nc[e]}),n},{}),ni=function(n,e,s){var t,a=(t={},(0,nt.Z)(t,n,e),(0,nt.Z)(t,"theme",s),t),o=nr[n];return o?o(a):(0,nt.Z)({},n,e)},nl=s(682332),nu=s(220884),nd=s(674994),nm=s(811546),nh=s(290037),nk=s(820928),ny=s(366537),nf=s(128999),ng=s(126613),nv=s(637778),nb=s(721923),nx=s(145027),nC=s(992443),nw=s(602754),nT=s(878769),nP=s(61567),nM=s(296227),nZ=s(953749),nS=s(163804),nj=s(80117),nB=["cssVarPrefix","shouldSkipGeneratingVar"],nR=function(n){var e=n.cssVarPrefix,s=n.shouldSkipGeneratingVar,t=(0,nj.Z)(n,nB);return(0,nS.Z)((0,nS.Z)({},n),(0,nZ.Z)(t,{prefix:e,shouldSkipGeneratingVar:s}))},nI={},nU=s(818075),n_=s(172852),nW=s(899933);function nA(n){return(0,nW.Z)("MuiContainer",n)}var nO=(0,s(173729).Z)("MuiContainer",["root","disableGutters","fixed","maxWidthXs","maxWidthSm","maxWidthMd","maxWidthLg","maxWidthXl"]),nH=s(760340),nz=s(553094),nV=s(872100),nK=s(239351);function nG(){throw Error((0,t.Z)(20))}},924869:function(n,e,s){"use strict";s.r(e),s.d(e,{default:function(){return Z}});var t,a,o,p={};s.r(p),s.d(p,{demoComponents:function(){return P},demos:function(){return T},docs:function(){return w},srcComponents:function(){return M}});var c=s(163804),r=s(667294),i=s.t(r,2),l=s(165492),u=s(419443),d=s(811546),m=s(785893),h=(0,d.default)("div")({color:"darkslategray",backgroundColor:"aliceblue",padding:8,borderRadius:4}),k=s(290037),y=s(602754),f=(0,k.Z)({palette:{primary:{main:"#1976d2",contrastText:"white"}}}),g=(0,d.default)("div")(function(n){var e=n.theme;return{color:e.palette.primary.contrastText,backgroundColor:e.palette.primary.main,padding:e.spacing(1),borderRadius:e.shape.borderRadius}}),v=(0,k.Z)({components:{MyThemeComponent:{styleOverrides:{root:{color:"darkslategray"},primary:{color:"darkblue"},secondary:{color:"darkred",backgroundColor:"pink"}},variants:[{props:{variant:"dashed",color:"primary"},style:{border:"1px dashed darkblue"}},{props:{variant:"dashed",color:"secondary"},style:{border:"1px dashed darkred"}}]}}}),b=(0,d.default)("div",{shouldForwardProp:function(n){return"color"!==n&&"variant"!==n&&"sx"!==n},name:"MyThemeComponent",slot:"Root",overridesResolver:function(n,e){return[e.root,"primary"===n.color&&e.primary,"secondary"===n.color&&e.secondary]}})(function(n){return{backgroundColor:"aliceblue",padding:n.theme.spacing(1)}}),x=(0,k.Z)({palette:{primary:{main:"#1976d2",contrastText:"white"}}}),C=(0,d.default)("div")(function(n){return n.theme.unstable_sx({color:"primary.contrastText",backgroundColor:"primary.main",padding:1,borderRadius:1})}),w={en:{description:"Utility for creating styled components.",location:"/brickmmo-docs-v2/data/system/styled/styled.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<h1><code>styled()</code></h1><p class="description">Utility for creating styled components.</p>\n\n<h2 id="introduction">Introduction<a aria-labelledby="introduction" class="anchor-link" href="#introduction" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="introduction"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>All MUI components are styled with the <code>styled()</code> utility.\nThis utility is built on top of the <code>styled()</code> module of <code>@mui/styled-engine</code>and provides additional features.</p>\n<h3 id="import-path">Import path<a aria-labelledby="import-path" class="anchor-link" href="#import-path" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="import-path"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>You can use the utility coming from the <code>@mui/system</code> package, or if you are using <code>@mui/material</code>, you can import it from <code>@mui/material/styles</code>.\nThe difference is in the default <code>theme</code> that is used (if no theme is available in the React context).</p>\n<h3 id="what-problems-does-it-solve">What problems does it solve?<a aria-labelledby="what-problems-does-it-solve" class="anchor-link" href="#what-problems-does-it-solve" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="what-problems-does-it-solve"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The utility can be used as a replacement for emotion&#39;s or styled-components&#39; styled() utility.\nIt aims to solve the same problem, but also provides the following benefits:</p>\n<ol>\n<li>It uses MUI&#39;s default <code>theme</code> if no theme is available in React context.</li>\n<li>It supports the theme&#39;s <a href="/material-ui/customization/theme-components/#theme-style-overrides"><code>styleOverrides</code></a> and <a href="/material-ui/customization/theme-components/#creating-new-component-variants"><code>variants</code></a> to be applied, based on the <code>name</code> applied in the options (can be skipped).</li>\n<li>It adds support for the <a href="/system/getting-started/the-sx-prop/">the <code>sx</code> prop</a> (can be skipped).</li>\n<li>It adds by default the <code>shouldForwardProp</code> option (that can be overridden), taking into account all props used internally in the MUI components: <code>ownerState</code>, <code>theme</code>, <code>sx</code>, and <code>as</code>.</li>\n</ol>\n<h2 id="api">API<a aria-labelledby="api" class="anchor-link" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="styled-component-options-styles-component"><code>styled(Component, [options])(styles) =&gt; Component</code><a aria-labelledby="styled-component-options-styles-component" class="anchor-link" href="#styled-component-options-styles-component" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="styled-component-options-styles-component"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><h4>Arguments</h4><ol>\n<li><p><code>Component</code>: The component that will be wrapped.</p>\n</li>\n<li><p><code>options</code> (<em>object</em> [optional]):</p>\n<ul>\n<li><code>options.shouldForwardProp</code> (<em><code>(prop: string) =&gt; bool</code></em> [optional]): Indicates whether the <code>prop</code> should be forwarded to the <code>Component</code>.</li>\n<li><code>options.label</code> (<em>string</em> [optional]): The suffix of the style sheet. Useful for debugging.</li>\n<li><code>options.name</code> (<em>string</em> [optional]): The key used under <code>theme.components</code> for specifying <code>styleOverrides</code> and <code>variants</code>. Also used for generating the <code>label</code>.</li>\n<li><code>options.slot</code> (<em>string</em> [optional]): If <code>Root</code>, it automatically applies the theme&#39;s <code>variants</code>.</li>\n<li><code>options.overridesResolver</code> (<em>(props: object, styles: Record&lt;string, styles&gt;) =&gt; styles</em> [optional]): Function that returns styles based on the props and the <code>theme.components[name].styleOverrides</code> object.</li>\n<li><code>options.skipVariantsResolver</code> (<em>bool</em>): Disables the automatic resolver for the <code>theme.components[name].variants</code>.</li>\n<li><code>options.skipSx</code> (<em>bool</em> [optional]): Disables the <code>sx</code> prop on the component.</li>\n<li>The other keys are forwarded to the <code>options</code> argument of emotion&#39;s <a href="https://emotion.sh/docs/styled"><code>styled([Component], [options])</code></a>.</li>\n</ul>\n</li>\n<li><p><code>styles</code> (<em>object | <code>({ ...props, theme }) =&gt; object</code></em> [optional]): A styles object or a function returning a styles object.\nThe function receives the theme and component&#39;s props in an object which is its single argument.</p>\n</li>\n</ol>\n<h4>Returns</h4><p><code>Component</code>: The new component created.</p>\n<h2 id="basic-usage">Basic usage<a aria-labelledby="basic-usage" class="anchor-link" href="#basic-usage" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="basic-usage"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2>',{demo:"BasicUsage.js",defaultCodeOpen:!0},'<h2 id="using-the-theme">Using the theme<a aria-labelledby="using-the-theme" class="anchor-link" href="#using-the-theme" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="using-the-theme"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2>',{demo:"ThemeUsage.js",defaultCodeOpen:!0},'<h2 id="custom-components">Custom components<a aria-labelledby="custom-components" class="anchor-link" href="#custom-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="custom-components"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>This example demonstrates how you can use the <code>styled</code> API to create custom components, with the same capabilities as the core components:</p>\n',{demo:"UsingOptions.js",defaultCodeOpen:!0},'<p>If you inspect this element with the browser DevTools in development mode, you will notice that the class of the component now ends with the <code>MyThemeComponent-root</code>, which comes from the <code>name</code> and <code>slot</code> options that were provided.</p>\n<img src="/static/images/system/styled-options.png" alt="browser DevTools showing the rendered component" width="654" height="258" style="width: 327px" />\n\n<p>In addition to this, the <code>color</code>, <code>sx</code>, and <code>variant</code> props are not propagated to the generated <code>div</code> element.</p>\n<h2 id="removing-features">Removing features<a aria-labelledby="removing-features" class="anchor-link" href="#removing-features" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="removing-features"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>If you would like to remove some of the MUI specific features, you can do it like this:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const StyledComponent = styled(\'div\', {}, {\n</span><span class="token prefix unchanged"> </span><span class="token line">  name: \'MuiStyled\',\n</span><span class="token prefix unchanged"> </span><span class="token line">  slot: \'Root\',\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  overridesResolver: (props, styles) => styles.root, // disables theme.components[name].styleOverrides\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  skipVariantsResolver: true, // disables theme.components[name].variants\n</span><span class="token prefix inserted">+</span><span class="token line">  skipSx: true, // disables the sx prop\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="create-custom-styled-utility">Create custom <code>styled()</code> utility<a aria-labelledby="create-custom-styled-utility" class="anchor-link" href="#create-custom-styled-utility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="create-custom-styled-utility"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>If you want to have a different default theme for the <code>styled()</code> utility, you can create your own version of it, using the <code>createStyled()</code> utility.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> createStyled<span class="token punctuation">,</span> createTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/system\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> defaultTheme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// your custom theme values</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> styled <span class="token operator">=</span> <span class="token function">createStyled</span><span class="token punctuation">(</span><span class="token punctuation">{</span> defaultTheme <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> styled<span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="difference-with-the-sx-prop">Difference with the <code>sx</code> prop<a aria-labelledby="difference-with-the-sx-prop" class="anchor-link" href="#difference-with-the-sx-prop" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="difference-with-the-sx-prop"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The <code>styled</code> function is an extension of the <code>styled</code> utility provided by the underlying style library used – either Emotion or styled-components.\nIt is guaranteed that it will produce the same output as the <code>styled</code> function coming from the style library for the same input.</p>\n<p>The <a href="/system/getting-started/the-sx-prop/"><code>sx</code></a> prop, on the other hand, is a new way of styling your components, focused on fast customization. <code>styled</code> is a function, while <code>sx</code> is a prop of the MUI components.</p>\n<p>Therefore, you will notice the following differences:</p>\n<h3 id="sx-provides-more-shortcuts-than-styled"><code>sx</code> provides more shortcuts than <code>styled</code><a aria-labelledby="sx-provides-more-shortcuts-than-styled" class="anchor-link" href="#sx-provides-more-shortcuts-than-styled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="sx-provides-more-shortcuts-than-styled"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>With <code>styled</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> MyStyledButton <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">mx</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// ❌ don\'t use this! This shortcut is only provided by the `sx` prop</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>With <code>sx</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@mui/material/Button\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">MyStyledButton</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n    <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">mx</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// ✔️ this shortcut is specific to the `sx` prop,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">></span></span>\n    <span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="the-style-definition-varies-slightly">The style definition varies slightly<a aria-labelledby="the-style-definition-varies-slightly" class="anchor-link" href="#the-style-definition-varies-slightly" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="the-style-definition-varies-slightly"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>With <code>styled</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> MyStyledButton <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// means "1px", NOT "theme.spacing(1)"</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>With <code>sx</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@mui/material/Button\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">MyStyledButton</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n    <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// means "theme.spacing(1)", NOT "1px"</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">></span></span>\n    <span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="patterns-for-how-to-use-props-differ">Patterns for how to use props differ<a aria-labelledby="patterns-for-how-to-use-props-differ" class="anchor-link" href="#patterns-for-how-to-use-props-differ" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="patterns-for-how-to-use-props-differ"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>With <code>styled</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> MyStyledButton <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> props<span class="token punctuation">.</span>myBackgroundColor<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>With <code>sx</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@mui/material/Button\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">MyStyledButton</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> props<span class="token punctuation">.</span>myCustomColor <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="parameter-when-using-function-are-different-for-each-field">Parameter when using function are different for each field<a aria-labelledby="parameter-when-using-function-are-different-for-each-field" class="anchor-link" href="#parameter-when-using-function-are-different-for-each-field" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="parameter-when-using-function-are-different-for-each-field"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>With <code>styled</code> (not recommended):</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// You may find this syntax in the wild, but for code readability</span>\n<span class="token comment">// we recommend using only one top-level function</span>\n<span class="token keyword">const</span> MyStyledButtonPropsPerField <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">backgroundColor</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> props<span class="token punctuation">.</span>myBackgroundColor<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>With <code>sx</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@mui/material/Button\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> lighten <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'polished\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">MyStyledButton</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n    <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function-variable function">backgroundColor</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">theme</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">lighten</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">,</span> theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">></span></span>\n    <span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// Note: for direct theme access without modification, you can also use a shortcut by providing the key as a string</span>\n<span class="token keyword">const</span> <span class="token function-variable function">MyStyledButton</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">\'primary.main\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="how-can-i-use-the-sx-syntax-with-the-styled-utility">How can I use the <code>sx</code> syntax with the <code>styled()</code> utility?<a aria-labelledby="how-can-i-use-the-sx-syntax-with-the-styled-utility" class="anchor-link" href="#how-can-i-use-the-sx-syntax-with-the-styled-utility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="how-can-i-use-the-sx-syntax-with-the-styled-utility"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>If you prefer the <code>sx</code> syntax and want to use it in both the <code>sx</code> prop and the <code>styled()</code> utility, you can use the <code>unstable_sx</code> utility from the <code>theme</code>:</p>\n',{demo:"UsingWithSx.js",defaultCodeOpen:!0},'<p>The overhead added by using the <code>unstable_sx</code> utility is the same as if you were to use the <code>sx</code> prop on the component.</p>\n<blockquote>\n<p>Note: You can use <code>unstable_sx</code> outside of the <code>styled()</code> utility, too; e.g., for defining <code>variants</code> in your custom theme.</p>\n</blockquote>\n<h2 id="how-to-use-components-selector-api">How to use components selector API<a aria-labelledby="how-to-use-components-selector-api" class="anchor-link" href="#how-to-use-components-selector-api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="how-to-use-components-selector-api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>If you&#39;ve ever used the <code>styled()</code> API of either <a href="https://emotion.sh/docs/styled#targeting-another-emotion-component"><code>emotion</code></a> or <a href="https://styled-components.com/docs/advanced#referring-to-other-components"><code>styled-components</code></a>, you should have been able to use components as selectors.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">\'@emotion/styled\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Child <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  color: red;\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Parent <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Child<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> {\n    color: green;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Parent</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span><span class="token punctuation">></span></span>Green because <span class="token constant">I</span> am inside a Parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Child</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Parent</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span><span class="token punctuation">></span></span>Red because <span class="token constant">I</span> am not inside a Parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Child</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>With MUI&#39;s <code>styled()</code> utility, you can use components as selectors, too. When using <code>@mui/styled-engine-sc</code> (<code>styled-components</code>), nothing needs to be done. When using <code>@mui/styled-engine</code> (<code>emotion</code>), the default engine, there are a few steps you should perform:</p>\n<p>First, you should install <a href="https://emotion.sh/docs/@emotion/babel-plugin"><code>@emotion/babel-plugin</code></a>.</p>\n<div class="MuiCode-root"><pre><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> @emotion/babel-plugin\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Then, configure the plugin to know about the MUI version of the <code>styled()</code> utility:</p>\n<p><strong>babel.config.js</strong></p>\n<div class="MuiCode-root"><pre><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">"@emotion"</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">importMap</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token string-property property">"@mui/system"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">styled</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token literal-property property">canonicalImport</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"@emotion/styled"</span><span class="token punctuation">,</span> <span class="token string">"default"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">styledBaseImport</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"@mui/system"</span><span class="token punctuation">,</span> <span class="token string">"styled"</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string-property property">"@mui/material/styles"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">styled</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token literal-property property">canonicalImport</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"@emotion/styled"</span><span class="token punctuation">,</span> <span class="token string">"default"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">styledBaseImport</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"@mui/material/styles"</span><span class="token punctuation">,</span> <span class="token string">"styled"</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Now you should be able to use components as your selectors!</p>\n'],toc:[{text:"Introduction",level:2,hash:"introduction",children:[{text:"Import path",level:3,hash:"import-path"},{text:"What problems does it solve?",level:3,hash:"what-problems-does-it-solve"}]},{text:"API",level:2,hash:"api",children:[{text:"styled(&#8203;Component, [options])(&#8203;styles) =&gt; Component",level:3,hash:"styled-component-options-styles-component"}]},{text:"Basic usage",level:2,hash:"basic-usage",children:[]},{text:"Using the theme",level:2,hash:"using-the-theme",children:[]},{text:"Custom components",level:2,hash:"custom-components",children:[]},{text:"Removing features",level:2,hash:"removing-features",children:[]},{text:"Create custom styled(&#8203;) utility",level:2,hash:"create-custom-styled-utility",children:[]},{text:"Difference with the sx prop",level:2,hash:"difference-with-the-sx-prop",children:[{text:"sx provides more shortcuts than styled",level:3,hash:"sx-provides-more-shortcuts-than-styled"},{text:"The style definition varies slightly",level:3,hash:"the-style-definition-varies-slightly"},{text:"Patterns for how to use props differ",level:3,hash:"patterns-for-how-to-use-props-differ"},{text:"Parameter when using function are different for each field",level:3,hash:"parameter-when-using-function-are-different-for-each-field"},{text:"How can I use the sx syntax with the styled(&#8203;) utility?",level:3,hash:"how-can-i-use-the-sx-syntax-with-the-styled-utility"}]},{text:"How to use components selector API",level:2,hash:"how-to-use-components-selector-api",children:[]}],title:"styled()",headers:{components:[]}}},T={"BasicUsage.js":{module:"./BasicUsage.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/system';\n\nconst MyComponent = styled('div')({\n  color: 'darkslategray',\n  backgroundColor: 'aliceblue',\n  padding: 8,\n  borderRadius: 4,\n});\n\nexport default function BasicUsage() {\n  return <MyComponent>Styled div</MyComponent>;\n}\n",jsxPreview:"<MyComponent>Styled div</MyComponent>",moduleTS:"./BasicUsage.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/system';\n\nconst MyComponent = styled('div')({\n  color: 'darkslategray',\n  backgroundColor: 'aliceblue',\n  padding: 8,\n  borderRadius: 4,\n});\n\nexport default function BasicUsage() {\n  return <MyComponent>Styled div</MyComponent>;\n}\n"},"ThemeUsage.js":{module:"./ThemeUsage.js",raw:"import * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/system';\n\nconst customTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n      contrastText: 'white',\n    },\n  },\n});\n\nconst MyThemeComponent = styled('div')(({ theme }) => ({\n  color: theme.palette.primary.contrastText,\n  backgroundColor: theme.palette.primary.main,\n  padding: theme.spacing(1),\n  borderRadius: theme.shape.borderRadius,\n}));\n\nexport default function ThemeUsage() {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <MyThemeComponent>Styled div with theme</MyThemeComponent>\n    </ThemeProvider>\n  );\n}\n",jsxPreview:"<ThemeProvider theme={customTheme}>\n  <MyThemeComponent>Styled div with theme</MyThemeComponent>\n</ThemeProvider>",moduleTS:"./ThemeUsage.js",rawTS:"import * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/system';\n\nconst customTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n      contrastText: 'white',\n    },\n  },\n});\n\nconst MyThemeComponent = styled('div')(({ theme }) => ({\n  color: theme.palette.primary.contrastText,\n  backgroundColor: theme.palette.primary.main,\n  padding: theme.spacing(1),\n  borderRadius: theme.shape.borderRadius,\n}));\n\nexport default function ThemeUsage() {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <MyThemeComponent>Styled div with theme</MyThemeComponent>\n    </ThemeProvider>\n  );\n}\n"},"UsingOptions.js":{module:"./UsingOptions.js",raw:"import * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/system';\n\nconst customTheme = createTheme({\n  components: {\n    MyThemeComponent: {\n      styleOverrides: {\n        root: {\n          color: 'darkslategray',\n        },\n        primary: {\n          color: 'darkblue',\n        },\n        secondary: {\n          color: 'darkred',\n          backgroundColor: 'pink',\n        },\n      },\n      variants: [\n        {\n          props: { variant: 'dashed', color: 'primary' },\n          style: {\n            border: '1px dashed darkblue',\n          },\n        },\n        {\n          props: { variant: 'dashed', color: 'secondary' },\n          style: {\n            border: '1px dashed darkred',\n          },\n        },\n      ],\n    },\n  },\n});\n\nconst MyThemeComponent = styled('div', {\n  // Configure which props should be forwarded on DOM\n  shouldForwardProp: (prop) =>\n    prop !== 'color' && prop !== 'variant' && prop !== 'sx',\n  name: 'MyThemeComponent',\n  slot: 'Root',\n  // We are specifying here how the styleOverrides are being applied based on props\n  overridesResolver: (props, styles) => [\n    styles.root,\n    props.color === 'primary' && styles.primary,\n    props.color === 'secondary' && styles.secondary,\n  ],\n})(({ theme }) => ({\n  backgroundColor: 'aliceblue',\n  padding: theme.spacing(1),\n}));\n\nexport default function UsingOptions() {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <MyThemeComponent sx={{ m: 1 }} color=\"primary\" variant=\"dashed\">\n        Primary\n      </MyThemeComponent>\n      <MyThemeComponent sx={{ m: 1 }} color=\"secondary\">\n        Secondary\n      </MyThemeComponent>\n    </ThemeProvider>\n  );\n}\n",jsxPreview:'<ThemeProvider theme={customTheme}>\n  <MyThemeComponent sx={{ m: 1 }} color="primary" variant="dashed">\n    Primary\n  </MyThemeComponent>\n  <MyThemeComponent sx={{ m: 1 }} color="secondary">\n    Secondary\n  </MyThemeComponent>\n</ThemeProvider>',moduleTS:"./UsingOptions.js",rawTS:"import * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/system';\n\ninterface MyThemeComponentProps {\n  color?: 'primary' | 'secondary';\n  variant?: 'normal' | 'dashed';\n}\n\nconst customTheme = createTheme({\n  components: {\n    MyThemeComponent: {\n      styleOverrides: {\n        root: {\n          color: 'darkslategray',\n        },\n        primary: {\n          color: 'darkblue',\n        },\n        secondary: {\n          color: 'darkred',\n          backgroundColor: 'pink',\n        },\n      },\n      variants: [\n        {\n          props: { variant: 'dashed', color: 'primary' },\n          style: {\n            border: '1px dashed darkblue',\n          },\n        },\n        {\n          props: { variant: 'dashed', color: 'secondary' },\n          style: {\n            border: '1px dashed darkred',\n          },\n        },\n      ],\n    },\n  },\n});\n\nconst MyThemeComponent = styled('div', {\n  // Configure which props should be forwarded on DOM\n  shouldForwardProp: (prop) =>\n    prop !== 'color' && prop !== 'variant' && prop !== 'sx',\n  name: 'MyThemeComponent',\n  slot: 'Root',\n  // We are specifying here how the styleOverrides are being applied based on props\n  overridesResolver: (props, styles) => [\n    styles.root,\n    props.color === 'primary' && styles.primary,\n    props.color === 'secondary' && styles.secondary,\n  ],\n})<MyThemeComponentProps>(({ theme }) => ({\n  backgroundColor: 'aliceblue',\n  padding: theme.spacing(1),\n}));\n\nexport default function UsingOptions() {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <MyThemeComponent sx={{ m: 1 }} color=\"primary\" variant=\"dashed\">\n        Primary\n      </MyThemeComponent>\n      <MyThemeComponent sx={{ m: 1 }} color=\"secondary\">\n        Secondary\n      </MyThemeComponent>\n    </ThemeProvider>\n  );\n}\n"},"UsingWithSx.js":{module:"./UsingWithSx.js",raw:"import * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/system';\n\nconst customTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n      contrastText: 'white',\n    },\n  },\n});\n\nconst MyThemeComponent = styled('div')(({ theme }) =>\n  theme.unstable_sx({\n    color: 'primary.contrastText',\n    backgroundColor: 'primary.main',\n    padding: 1,\n    borderRadius: 1,\n  }),\n);\n\nexport default function UsingWithSx() {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <MyThemeComponent>Styled div with theme</MyThemeComponent>\n    </ThemeProvider>\n  );\n}\n",jsxPreview:"<ThemeProvider theme={customTheme}>\n  <MyThemeComponent>Styled div with theme</MyThemeComponent>\n</ThemeProvider>",moduleTS:"./UsingWithSx.js",rawTS:"import * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/system';\n\nconst customTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n      contrastText: 'white',\n    },\n  },\n});\n\nconst MyThemeComponent = styled('div')(({ theme }) =>\n  theme.unstable_sx({\n    color: 'primary.contrastText',\n    backgroundColor: 'primary.main',\n    padding: 1,\n    borderRadius: 1,\n  }),\n);\n\nexport default function UsingWithSx() {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <MyThemeComponent>Styled div with theme</MyThemeComponent>\n    </ThemeProvider>\n  );\n}\n"}};T.scope={process:{},import:{react:i,"@mui/system":u}};var P={"./BasicUsage.js":function(){return t||(t=(0,m.jsx)(h,{children:"Styled div"}))},"./ThemeUsage.js":function(){return a||(a=(0,m.jsx)(y.Z,{theme:f,children:(0,m.jsx)(g,{children:"Styled div with theme"})}))},"./UsingOptions.js":function(){return(0,m.jsxs)(y.Z,{theme:v,children:[(0,m.jsx)(b,{sx:{m:1},color:"primary",variant:"dashed",children:"Primary"}),(0,m.jsx)(b,{sx:{m:1},color:"secondary",children:"Secondary"})]})},"./UsingWithSx.js":function(){return o||(o=(0,m.jsx)(y.Z,{theme:x,children:(0,m.jsx)(C,{children:"Styled div with theme"})}))}},M={};function Z(){return(0,m.jsx)(l.Z,(0,c.Z)({},p))}},165492:function(n,e,s){"use strict";s.d(e,{Z:function(){return b}});var t,a=s(163804),o=s(667294),p=s(45697),c=s.n(p),r=s(811163),i=s(721923),l=s(875795),u=s(608144),d=s(772184),m=s(400438),h=s(692124),k=s(261589),y=s(703391),f=s(662208),g=s(785893);function v(n){var e=n.mode,s=(0,l.tv)().setMode;return o.useEffect(function(){s(e)},[e,s]),null}function b(n){var e=(0,i.Z)(),s=(0,r.useRouter)(),p=(0,d.ln)(s.asPath).canonicalAs,c=n.disableAd,b=void 0!==c&&c,x=n.disableToc,C=n.disableCssVarsProvider,w=n.demos,T=void 0===w?{}:w,P=n.docs,M=n.demoComponents,Z=n.srcComponents,S=P[(0,h.useUserLanguage)()]||P.en,j=p.startsWith("/joy-ui/")&&!(void 0!==C&&C),B=j?l.lL:o.Fragment,R=j?k.default:o.Fragment,I=(0,a.Z)({},j&&{mode:e.palette.mode});return(0,g.jsxs)(m.Z,{description:S.description,disableAd:b,disableToc:void 0!==x&&x,location:S.location,title:S.title,toc:S.toc,children:[b?null:t||(t=(0,g.jsx)(k.default,{children:(0,g.jsx)(f.Z,{children:(0,g.jsx)(y.ZP,{})})})),(0,g.jsxs)(B,{children:[j&&(0,g.jsx)(v,{mode:e.palette.mode}),S.rendered.map(function(n,s){return(0,g.jsx)(u.Z,{demoComponents:M,demos:T,disableAd:b,localizedDoc:S,renderedMarkdownOrDemo:n,srcComponents:Z,theme:e,WrapperComponent:R,wrapperProps:I},"demos-section-".concat(s))})]})]})}v.propTypes={mode:c().oneOf(["light","dark"])}},679375:function(n,e,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/system/styled",function(){return s(924869)}])}},function(n){n.O(0,[52996,8365,82961,61532,41159,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43765,95965,44749,67461,33335,53373,49774,92888,40179],function(){return n(n.s=679375)}),_N_E=n.O()}]);