(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[80124],{908366:function(e,n,a){"use strict";var s=a(163804),t=a(80117),o=a(667294),i=a(490512),c=a(829624),l=a(602688),r=a(424633),p=a(179477),u=a(231505),d=a(785893),h=["className"],m=function(e){var n=e.classes;return(0,c.Z)({root:["root"]},u.E,n)},g=(0,l.ZP)(p.Z,{name:"MuiAlertTitle",slot:"Root",overridesResolver:function(e,n){return n.root}})(function(e){return{fontWeight:e.theme.typography.fontWeightMedium,marginTop:-2}}),y=o.forwardRef(function(e,n){var a=(0,r.Z)({props:e,name:"MuiAlertTitle"}),o=a.className,c=(0,t.Z)(a,h),l=m(a);return(0,d.jsx)(g,(0,s.Z)({gutterBottom:!0,component:"div",ownerState:a,ref:n,className:(0,i.default)(l.root,o)},c))});n.Z=y},231505:function(e,n,a){"use strict";a.d(n,{E:function(){return o}});var s=a(173729),t=a(899933);function o(e){return(0,t.Z)("MuiAlertTitle",e)}var i=(0,s.Z)("MuiAlertTitle",["root"]);n.Z=i},556559:function(e,n,a){"use strict";a.r(n),a.d(n,{default:function(){return c}}),a(667294);var s,t=a(276435),o={en:{description:"The Base UI component library gives you complete control over the look and feel of your app.",location:"/brickmmo-docs-v2/pages/blog/introducing-base-ui.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<p><a href="https://mui.com/base-ui/"><img src="/static/blog/introducing-base-ui/hero-image.png" style="width: 692px; aspect-ratio: 132/61; margin-bottom: 24px;" alt="Demo components built with Base UI, a newly introduced library of unstyled components and hooks" /></a></p>\n<p>While Material UI is excellent for building sleek user interfaces that adhere closely to Material Design, it can become unwieldy when your design system diverges significantly from the defaults.\nWe get it.\nWe&#39;ve all been there.</p>\n<p>That&#39;s why we&#39;re building an entirely new library of headless React UI components and hooks called <strong>Base UI</strong>—to give you complete control over the look and feel of your user interface, with no defaults to override.</p>\n<p>Base UI is easy to pick up if you&#39;re already familiar with Material UI, as the APIs are very similar—indeed, they were designed to be complementary to one another.\nStart from scratch with Base UI, or use Material UI for rapid prototyping, and then switch to Base UI when you need more customization options.</p>\n<h2 id="why-base-ui">Why Base UI?<a aria-labelledby="why-base-ui" class="anchor-link" href="#why-base-ui" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="why-base-ui"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Base UI was created to serve a different set of needs than those addressed by Material UI.\nMaterial UI shines at providing you with the means to quickly create user interfaces that look close to the Material Design specification.\nBase UI, on the other hand, prioritizes customizability over the speed of development.\nThis makes it better suited for public-facing projects where pixel-perfect implementation is crucial.</p>\n<p>So, why not use any of the headless libraries already present on the market instead?\nThere are other alternatives like Headless UI, Radix UI, and React Aria, to name a few.\nBase UI&#39;s significant advantage is that it takes the best parts from Material UI, which is a complete, mature library.\nIt is free from many of the issues that have been reported and fixed in Material UI.\nAlso, many of the improvements to Material UI proposed by the community over the years are included in Base UI.</p>\n<p>While they were created for different use cases, these two libraries share many common features and design patterns, and are intended to be complementary to one another within the MUI ecosystem.\nBase UI&#39;s API will be familiar to you if you&#39;ve used Material UI before, making it easy to migrate a project—or just a part of it—from one library to the other if needed.\nWe aim to create <a href="https://github.com/mui/material-ui/issues/27170">unstyled versions of all Material UI components</a> (that make sense to do so).</p>\n<h2 id="components-and-hooks">Components and hooks<a aria-labelledby="components-and-hooks" class="anchor-link" href="#components-and-hooks" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="components-and-hooks"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Base UI offers two kinds of building blocks: unstyled components and hooks.</p>\n<p>Components are more straightforward to use of the two.\nPlace a component on a page, add your own styles, and it&#39;s ready to go!\nIt&#39;s important to note that you are not limited to the styling options available in Material UI.\nYou can, of course, still use <a href="https://mui.com/system/getting-started/">MUI System</a>, but if you prefer Emotion, Tailwind CSS, plain CSS, or any other styling engine, they are available too!\nCheck out the <a href="/base-ui/guides/working-with-tailwind-css/">Working with Tailwind CSS guide</a> for an example of using this library.</p>\n<p>In contrast to Material UI, Base UI&#39;s components do not have any default styles.\nThey provide functionality and structure, while designers and developers are responsible for the visuals.</p>\n<p>Each unstyled component lets you modify or override its <em>slots</em>—smaller subcomponents representing the interior elements that comprise the component&#39;s DOM structure.\nFor example, a <code>SwitchUnstyled</code> contains the root, thumb, input, and track slots.\nYou can control props passed to each of these slots (including <code>className</code>) based on the component&#39;s state, and even replace the default slot components with your own.</p>\n<img src="/static/blog/introducing-base-ui/switch-slots.png" style="width: 692px; aspect-ratio: 173/80; margin-bottom: 24px;" loading="lazy" alt="Depiction of SwitchUnstyled components\' slots" />\n\n<p>See how it works on the live demo:</p>\n<iframe src="https://codesandbox.io/embed/mui-base-switch-overview-frsm5f?fontsize=12&hidenavigation=1&module=%2Fsrc%2FMySwitch.tsx&theme=dark"\n  style="width:100%; height:350px; border:0; border-radius: 10px; overflow:hidden; margin-bottom: 24px"\n  title="Base UI Switch overview"\n  sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"\n></iframe>\n\n<p>Hooks take this one step further by extracting the logic from the structure entirely, so you can build from scratch using any DOM elements you need.\nThis requires more work to implement but gives you the most freedom to customize.</p>\n<p>Upon calling, a hook returns an object describing the component&#39;s state (i.e., whether the switch is turned on), along with methods that apply accessibility props and event handlers.\nYou should spread these props on the components you&#39;ve defined, as shown below:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token keyword">function</span> <span class="token function">MySwitch</span><span class="token punctuation">(</span>props<span class="token operator">:</span> UseSwitchParameters<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> getInputProps<span class="token punctuation">,</span> checked<span class="token punctuation">,</span> disabled <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSwitch</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">clsx</span><span class="token punctuation">(</span><span class="token string">\'root\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> checked<span class="token punctuation">,</span> disabled <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>thumb<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">getInputProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="whats-included">What&#39;s included<a aria-labelledby="whats-included" class="anchor-link" href="#whats-included" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="whats-included"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The initial version of the library contains 17 components.\nCheck out the <a href="/base-ui/getting-started/">Base UI documentation</a> for details.</p>\n<p>You can track our progress in adding new components—and comment to influence our priorities—in <a href="https://github.com/mui/material-ui/issues/27170">this dedicated GitHub issue</a>.</p>\n<p>The @mui/base package is released as an alpha.\nThis means the component APIs are subject to change—especially as we receive feedback from the community about room for improvement.\nHowever, we believe the library is solid enough at this point to start building design systems with it.\nIn fact, we&#39;re using Base UI to create <a href="/blog/first-look-at-joy/">Joy UI</a>—the next product we&#39;ll be launching in our line of Core component libraries that also includes Material UI.\nIn the future, Base UI will also be used as the foundation for Material UI components to provide a consistent developer experience across our entire suite of products.</p>\n<h2 id="feedback-needed">Feedback needed<a aria-labelledby="feedback-needed" class="anchor-link" href="#feedback-needed" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="feedback-needed"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Give Base UI a try today by installing the package via npm:</p>\n<div class="MuiCode-root"><pre><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> @mui/base\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>or yarn:</p>\n<div class="MuiCode-root"><pre><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> @mui/base\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Check out <a href="/base-ui/getting-started/">the docs</a>, play with the components, and be sure to let us know what you think!</p>\n<p>If you find any bugs or want to share ideas for improvements, please don&#39;t hesitate to open an issue in the <a href="https://github.com/mui/material-ui/issues/new/choose">MUI Core repository on GitHub</a>.\nBe sure to include &quot;[base]&quot; in the issue title to help us keep things organized.</p>\n<p><strong>Happy creating!</strong></p>\n'],toc:[{text:"Why Base UI?",level:2,hash:"why-base-ui",children:[]},{text:"Components and hooks",level:2,hash:"components-and-hooks",children:[]},{text:"What&#39;s included",level:2,hash:"whats-included",children:[]},{text:"Feedback needed",level:2,hash:"feedback-needed",children:[]}],title:"Introducing Base UI: the headless alternative to Material UI",headers:{title:"Introducing Base UI: the headless alternative to Material UI",description:"The Base UI component library gives you complete control over the look and feel of your app.",date:"2022-09-07T00:00:00.000Z",authors:["michaldudak","samuelsycamore"],tags:["News","MUI Core"],card:"true",components:[],hooks:[]}}},i=a(785893);function c(){return s||(s=(0,i.jsx)(t.Z,{docs:o}))}},502196:function(e,n,a){"use strict";a.d(n,{Z:function(){return r}});var s=a(163804),t=a(777193);a(667294);var o=a(602688),i=a(858280),c=a(785893),l=(0,o.ZP)(i.Z)(function(e){var n=e.theme;return(0,t.Z)({paddingTop:"calc(var(--MuiDocs-header-height) + ".concat(n.spacing(4),")"),fontFamily:"Arial",maxWidth:"105ch"},n.breakpoints.up("lg"),{paddingLeft:n.spacing(8),paddingRight:n.spacing(8)})});function r(e){return(0,c.jsx)(l,(0,s.Z)({id:"main-content",maxWidth:!1},e))}},146546:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/introducing-base-ui",function(){return a(556559)}])}},function(e){e.O(0,[52996,8364,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,43765,98147,78189,76435,49774,92888,40179],function(){return e(e.s=146546)}),_N_E=e.O()}]);