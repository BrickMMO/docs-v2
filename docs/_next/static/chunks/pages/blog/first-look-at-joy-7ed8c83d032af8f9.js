(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[89212],{908366:function(a,n,s){"use strict";var e=s(163804),t=s(80117),o=s(667294),i=s(490512),l=s(829624),p=s(602688),c=s(424633),r=s(179477),u=s(231505),d=s(785893),m=["className"],h=function(a){var n=a.classes;return(0,l.Z)({root:["root"]},u.E,n)},k=(0,p.ZP)(r.Z,{name:"MuiAlertTitle",slot:"Root",overridesResolver:function(a,n){return n.root}})(function(a){return{fontWeight:a.theme.typography.fontWeightMedium,marginTop:-2}}),g=o.forwardRef(function(a,n){var s=(0,c.Z)({props:a,name:"MuiAlertTitle"}),o=s.className,l=(0,t.Z)(s,m),p=h(s);return(0,d.jsx)(k,(0,e.Z)({gutterBottom:!0,component:"div",ownerState:s,ref:n,className:(0,i.default)(p.root,o)},l))});n.Z=g},231505:function(a,n,s){"use strict";s.d(n,{E:function(){return o}});var e=s(173729),t=s(899933);function o(a){return(0,t.Z)("MuiAlertTitle",a)}var i=(0,e.Z)("MuiAlertTitle",["root"]);n.Z=i},748245:function(a,n,s){"use strict";s.r(n),s.d(n,{default:function(){return l}}),s(667294);var e,t=s(276435),o={en:{description:"A sneak peek at MUI's new starting point for your design system.",location:"/brickmmo-docs-v2/pages/blog/first-look-at-joy.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<p><a href="/joy-ui/getting-started/"><img src="/static/blog/first-look-at-joy/card.png" style="width: 692px; aspect-ratio: 2/1; margin-bottom: 24px;" alt="First look at Joy UI: a new starting point for your design system." /></a></p>\n<p>If you&#39;re a close follower of everything MUI, you might be aware that we&#39;ve been working on a new design system.\nIf not, then this post will give you a first look at <strong>Joy UI</strong>ÔºçMUI&#39;s new starting point for your design system!</p>\n<p>If you&#39;ve ever considered using Material UI because of the developer experience, reliability, and completeness, but hesitated because of the design, this is great news for you.\nJoy UI offers all of that, but with a modern look and feel, ease of customization, and lower overhead by not carrying unused Material Design specific code and styling.</p>\n<h2 id="how-does-joy-ui-relate-to-material-ui">How does Joy UI relate to Material UI?<a aria-labelledby="how-does-joy-ui-relate-to-material-ui" class="anchor-link" href="#how-does-joy-ui-relate-to-material-ui" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="how-does-joy-ui-relate-to-material-ui"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>You might naturally associate MUI with Material UI, which despite the similar names, are separate things.\nMaterial UI is MUI&#39;s React implementation of Google&#39;s Material Design.</p>\n<p>Over time Material UI has established itself as the go-to library for quickly breathing life into products, mostly thanks to its design, customizability, and documentation.\nHowever, the components do come by default with the 2018 Google look and feel that is no longer as popular as it once was.\nAnd as we&#39;ve confirmed with <a href="/blog/2021-developer-survey-results/#what-are-your-most-important-criteria-for-choosing-a-ui-library">our latest developer survey</a>, design quality is one of the most important elements that developers consider when choosing a UI library.</p>\n<h2 id="why-not-just-build-a-new-material-ui-theme">Why not just build a new Material UI theme?<a aria-labelledby="why-not-just-build-a-new-material-ui-theme" class="anchor-link" href="#why-not-just-build-a-new-material-ui-theme" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="why-not-just-build-a-new-material-ui-theme"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>One of the main objectives with this new product is to break away from Material Design.\nA different theme would still require you and your team to have at least some understanding of how Material Design is structured, and how that is expressed in Material UI.\nWith Joy, you&#39;re able to start with a fresh design by default.</p>\n<p>We also had many ideas for improving the experience of developing design systems, so a separate package is an opportunity to prototype and test some of these new features without running the risk of compromising the experience of the thousands of teams that use Material UI today.</p>\n<p>Material UI and Joy UI still share many of the same conventions and features.\nWe&#39;ve done this not only to decrease the learning curve for adopting Joy UI, but also because we believe that the conventions we&#39;ve established represent the ideal developer experience for working with design systems.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Any new DX feature introduced in Joy UI will eventually be reproduced in Material UI, and vice versa.</p>\n\n</div></aside><h2 id="what-new-features-does-joy-ui-offer">What new features does Joy UI offer?<a aria-labelledby="what-new-features-does-joy-ui-offer" class="anchor-link" href="#what-new-features-does-joy-ui-offer" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="what-new-features-does-joy-ui-offer"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Aside from a fresher look and feel for your upcoming project, here are a few features included in the alpha version of Joy UI:</p>\n<h3 id="global-variants">Global variants<a aria-labelledby="global-variants" class="anchor-link" href="#global-variants" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="global-variants"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Instead of defining variants at the component level, Joy UI defines them at the global level.\nThis sounds bold at first, but the more we experiment the more it starts to make sense.\n<a href="/joy-ui/main-features/global-variants/">Global variants</a> mostly affect three CSS properties: color, background, and border.</p>\n<p>What this means is that you&#39;re able to switch between the same set of variants in any component, more easily maintaining consistency across your app.\nThe four variants available in the components are <code>solid</code>, <code>soft</code>, <code>outlined</code>, and <code>plain</code>.</p>\n<p><a href="/joy-ui/react-button/#variants"><img src="/static/blog/first-look-at-joy/global-variants.png" style="width: 692px; margin-top: 16px; margin-bottom: 16px;" loading="lazy" alt="Screenshot of button component using all available variants." /></a></p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>solid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>soft<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>outlined<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>plain<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="automatic-adjustment">Automatic adjustment<a aria-labelledby="automatic-adjustment" class="anchor-link" href="#automatic-adjustment" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="automatic-adjustment"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>We meticulously constructed the CSS variables for each component so you can seamlessly compose them with little customization necessary.\nOne good example is the input component, where the border radius of the input&#39;s children automatically adapts to that of the input.\nThese small details mean the components adapt to different scenarios, which saves considerable time when customizing the components by avoiding manual adjustments.</p>\n<img src="/static/blog/first-look-at-joy/component-integration.png" style="width: 692px; margin-top: 16px;" alt="Screenshot of two text inputs, one being native from Joy UI and another with border-radius customized" />\n\n<p class="blog-description">When customizing the input\'s border radius, the icon button inside of it adapts automatically.</p>\n\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span>\n  <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>\n  <span class="token attr-name">endDecorator</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IconButton</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Visibility</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">IconButton</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span>\n  <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lg<span class="token punctuation">"</span></span>\n  <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>\n  <span class="token attr-name">endDecorator</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IconButton</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Visibility</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">IconButton</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token string-property property">\'--Input-radius\'</span><span class="token operator">:</span> <span class="token string">\'24px\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Joy UI doesn&#39;t sacrifice customization in order to have these automatic adjustments.\nYou&#39;re still able to override the style completely via the usual CSS overrides, or even adjust the predefined CSS variables with the <code>sx</code> prop.</p>\n<h3 id="perfect-dark-mode-for-server-side-rendering">Perfect dark mode, for server-side rendering<a aria-labelledby="perfect-dark-mode-for-server-side-rendering" class="anchor-link" href="#perfect-dark-mode-for-server-side-rendering" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="perfect-dark-mode-for-server-side-rendering"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Joy UI provides an effective way to prevent UI flicker when users refresh or re-enter a page with dark mode enabled.\nThe out-of-the-box CSS variables support allows every color scheme to be rendered at build time, inserting the selected color scheme and mode before the browser renders the DOM.</p>\n<p>What&#39;s more, it provides a function called <code>getInitColorSchemeScript()</code> that enables you to have perfect functioning dark mode in various React frameworks, such as Next.js, Gatsby, and Remix.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// A Next.js example</span>\n<span class="token keyword">import</span> Document<span class="token punctuation">,</span> <span class="token punctuation">{</span> Html<span class="token punctuation">,</span> Head<span class="token punctuation">,</span> Main<span class="token punctuation">,</span> NextScript <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'next/document\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> getInitColorSchemeScript <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/joy/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">MyDocument</span> <span class="token keyword">extends</span> <span class="token class-name">Document</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Html</span></span> <span class="token attr-name">data-color-scheme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Head</span></span><span class="token punctuation">></span></span><span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Head</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span><span class="token function">getInitColorSchemeScript</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Main</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NextScript</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Html</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="unlimited-color-schemes">Unlimited color schemes<a aria-labelledby="unlimited-color-schemes" class="anchor-link" href="#unlimited-color-schemes" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="unlimited-color-schemes"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Beyond light and dark mode toggling, Joy UI lets you provide your users with multiple color schemes.\nWithin each mode, you&#39;ll be able to have as many color schemes as you wantÔºçpowered by CSS variables.</p>\n<h2 id="when-will-joy-ui-be-ready-to-use">When will Joy UI be ready to use?<a aria-labelledby="when-will-joy-ui-be-ready-to-use" class="anchor-link" href="#when-will-joy-ui-be-ready-to-use" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="when-will-joy-ui-be-ready-to-use"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>A significant part of the core infrastructure for Joy UI has already been developed, and we&#39;ve been working for the last couple of months on adding more components.\nThe package is already <a href="https://www.npmjs.com/package/@mui/joy">available from npm</a> but until we get to a reasonable number of components, and with sufficient documentation, it remains an <em>initial</em> work in progress.</p>\n<p>It should be ready for more mature experimentation and testing in the second half of 2022.\nMeanwhile, we&#39;ve developed a couple of templates that showcase what Joy UI looks like out of the box, so you can explore it further.\nFollow the templates&#39; CodeSandbox or live demo links to experiment with Joy UI for yourself.</p>\n<aside class="MuiCallout-root MuiCallout-success">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#success-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>They are also available in the docs <a href="/joy-ui/getting-started/templates/">Templates page</a>.</p>\n\n</div></aside><h3 id="email">Email<a aria-labelledby="email" class="anchor-link" href="#email" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="email"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p><a href="/joy-ui/getting-started/templates/email/"><img src="/static/blog/first-look-at-joy/email.png" style="width: 692px; margin-top: 8px; margin-bottom: 16px;" loading="lazy" alt="Screenshot of an email application mockup built with Joy UI" /></a></p>\n<ul>\n<li><a href="/joy-ui/getting-started/templates/email/">Live demo</a></li>\n<li><a href="https://codesandbox.io/s/8gtttr?file=/App.tsx">CodeSandbox</a></li>\n</ul>\n<h3 id="file-management">File management<a aria-labelledby="file-management" class="anchor-link" href="#file-management" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="file-management"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p><a href="/joy-ui/getting-started/templates/files/"><img src="/static/blog/first-look-at-joy/files.png" style="width: 692px; margin-top: 8px; margin-bottom: 16px;" loading="lazy" alt="Screenshot of file management application mockup built with Joy UI" /></a></p>\n<ul>\n<li><a href="/joy-ui/getting-started/templates/files/">Live demo</a></li>\n<li><a href="https://codesandbox.io/s/ro2b1t?file=/App.tsx">CodeSandbox</a></li>\n</ul>\n<h3 id="team-management">Team management<a aria-labelledby="team-management" class="anchor-link" href="#team-management" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="team-management"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p><a href="/joy-ui/getting-started/templates/team/"><img src="/static/blog/first-look-at-joy/people.png" style="width: 692px; margin-top: 8px; margin-bottom: 16px;" loading="lazy" alt="Screenshot of a team management application mockup built with Joy UI" /></a></p>\n<ul>\n<li><a href="/joy-ui/getting-started/templates/team/">Live demo</a></li>\n<li><a href="https://codesandbox.io/s/dclgbp?file=/App.tsx">CodeSandbox</a></li>\n</ul>\n<p>Joy UI is just getting started and we hope you&#39;re as excited as we areÔºçstay tuned for more news in the near future!</p>\n<p>Happy developing! \uD83D\uDC69‚Äç\uD83D\uDCBB</p>\n'],toc:[{text:"How does Joy UI relate to Material UI?",level:2,hash:"how-does-joy-ui-relate-to-material-ui",children:[]},{text:"Why not just build a new Material UI theme?",level:2,hash:"why-not-just-build-a-new-material-ui-theme",children:[]},{text:"What new features does Joy UI offer?",level:2,hash:"what-new-features-does-joy-ui-offer",children:[{text:"Global variants",level:3,hash:"global-variants"},{text:"Automatic adjustment",level:3,hash:"automatic-adjustment"},{text:"Perfect dark mode, for server-side rendering",level:3,hash:"perfect-dark-mode-for-server-side-rendering"},{text:"Unlimited color schemes",level:3,hash:"unlimited-color-schemes"}]},{text:"When will Joy UI be ready to use?",level:2,hash:"when-will-joy-ui-be-ready-to-use",children:[{text:"Email",level:3,hash:"email"},{text:"File management",level:3,hash:"file-management"},{text:"Team management",level:3,hash:"team-management"}]}],title:"First look at Joy UI \uD83E\uDD73",headers:{title:"First look at Joy UI \uD83E\uDD73",description:"A sneak peek at MUI's new starting point for your design system.",date:"2022-06-08T00:00:00.000Z",authors:["danilo-leal","siriwatknp"],tags:["News","MUI Core"],card:"true",components:[],hooks:[]}}},i=s(785893);function l(){return e||(e=(0,i.jsx)(t.Z,{docs:o}))}},502196:function(a,n,s){"use strict";s.d(n,{Z:function(){return c}});var e=s(163804),t=s(777193);s(667294);var o=s(602688),i=s(858280),l=s(785893),p=(0,o.ZP)(i.Z)(function(a){var n=a.theme;return(0,t.Z)({paddingTop:"calc(var(--MuiDocs-header-height) + ".concat(n.spacing(4),")"),fontFamily:"Arial",maxWidth:"105ch"},n.breakpoints.up("lg"),{paddingLeft:n.spacing(8),paddingRight:n.spacing(8)})});function c(a){return(0,l.jsx)(p,(0,e.Z)({id:"main-content",maxWidth:!1},a))}},629545:function(a,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/first-look-at-joy",function(){return s(748245)}])}},function(a){a.O(0,[52996,8364,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,43765,98147,78189,76435,49774,92888,40179],function(){return a(a.s=629545)}),_N_E=a.O()}]);