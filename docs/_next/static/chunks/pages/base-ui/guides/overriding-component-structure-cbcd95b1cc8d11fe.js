(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[94553],{507524:function(e,n,t){"use strict";t.r(n),t.d(n,{Option:function(){return o.W},getOptionUtilityClass:function(){return s.e},optionClasses:function(){return s.p}});var o=t(941073),s=t(813258)},173747:function(e,n,t){"use strict";t.r(n),t.d(n,{Select:function(){return o.P},getSelectUtilityClass:function(){return s.x},selectClasses:function(){return s.e}});var o=t(75491),s=t(475108)},569418:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return k}});var o,s,a={};t.r(a),t.d(a,{demoComponents:function(){return f},demos:function(){return g},docs:function(){return v},srcComponents:function(){return b}});var i=t(163804),l=t(667294),c=t.t(l,2),r=t(165492),p=t(173747),d=t(507524),u=t(75491),h=t(941073),m=t(785893),v={en:{description:"Learn how to override the default DOM structure of Base UI components.",location:"/brickmmo-docs-v2/data/base/guides/overriding-component-structure/overriding-component-structure.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<h1>Overriding component structure</h1><p class="description">Learn how to override the default DOM structure of Base UI components.</p>\n\n<p>Base UI components are designed to suit the widest possible range of use cases, but you may occasionally need to change how a component&#39;s structure is rendered in the DOM.</p>\n<p>To understand how to do this, it helps to have an accurate mental model of MUI components.</p>\n<h2 id="the-mental-model">The mental model<a aria-labelledby="the-mental-model" class="anchor-link" href="#the-mental-model" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="the-mental-model"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>A component&#39;s structure is determined by the elements that fill that component&#39;s <strong>slots</strong>.\nSlots are most commonly filled by HTML tags, but may also be filled by React components.</p>\n<p>All components contain a root slot that defines their primary node in the DOM tree; more complex components also contain additional interior slots named after the elements they represent.</p>\n<p>All <em>non-utility</em> Base UI components accept <a href="#the-slots-prop">the <code>slots</code> prop</a> for overriding their rendered HTML structure.</p>\n<p>Additionally, you can pass custom props to <a href="#interior-slots">interior slots</a> using <code>slotProps</code>.</p>\n<h2 id="the-root-slot">The root slot<a aria-labelledby="the-root-slot" class="anchor-link" href="#the-root-slot" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="the-root-slot"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The root slot represents the component&#39;s outermost element.\nFor simpler components, the root slot is often filled by the native HTML element that the component is intended to replace.</p>\n<p>For example, the <a href="/base-ui/react-button/">Button&#39;s</a> root slot is a <code>&lt;button&gt;</code> element.\nThis component <em>only</em> has a root slot; more complex components may have additional interior slots.</p>\n<h2 id="interior-slots">Interior slots<a aria-labelledby="interior-slots" class="anchor-link" href="#interior-slots" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="interior-slots"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Complex components are composed of one or more interior slots in addition to the root.\nThese slots are often (but not necessarily) nested within the root.</p>\n<p>For example, the <a href="/base-ui/react-slider/">Slider</a> is composed of a root <code>&lt;span&gt;</code> that houses several interior slots named for the elements they represent: track, thumb, rail, and so on.</p>\n<h3 id="the-slots-prop">The slots prop<a aria-labelledby="the-slots-prop" class="anchor-link" href="#the-slots-prop" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="the-slots-prop"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Use the <code>slots</code> prop to replace the elements in a component&#39;s slots, including the root.\nThe example below shows how to override the listbox slot in the <a href="/base-ui/react-select/">Select</a> component—a <code>&lt;ul&gt;</code> by default—with an <code>&lt;ol&gt;</code>:</p>\n',{demo:"OverridingInternalSlot.js"},'<h3 id="the-slotprops-prop">The slotProps prop<a aria-labelledby="the-slotprops-prop" class="anchor-link" href="#the-slotprops-prop" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="the-slotprops-prop"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The <code>slotProps</code> prop is an object that contains the props for all slots within a component.\nYou can use it to define additional custom props to pass to a component&#39;s interior slots.</p>\n<p>For example, the code snippet below shows how to add a custom CSS class to the badge slot of the <a href="/base-ui/react-badge/">Badge</a> component:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Badge</span></span> <span class="token attr-name">slotProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">badge</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">\'my-badge\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>All additional props placed on the primary component are also propagated into the root slot (just as if they were placed in <code>slotProps.root</code>).\nThese two examples are equivalent:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Badge</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badge1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Badge</span></span> <span class="token attr-name">slotProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">\'badge1\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>If both <code>slotProps.root</code> and additional props have the same keys but different values, the <code>slotProps.root</code> props will take precedence.\nThis does not apply to classes or the <code>style</code> prop—they will be merged instead.</p>\n\n</div></aside><h2 id="best-practices">Best practices<a aria-labelledby="best-practices" class="anchor-link" href="#best-practices" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="best-practices"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Be mindful of your rendered DOM structure when overriding the slots of more complex components.\nYou can easily break the rules of semantic and accessible HTML if you deviate too far from the default structure—for instance, by unintentionally nesting block-level elements inside of inline elements.</p>\n'],toc:[{text:"The mental model",level:2,hash:"the-mental-model",children:[]},{text:"The root slot",level:2,hash:"the-root-slot",children:[]},{text:"Interior slots",level:2,hash:"interior-slots",children:[{text:"The slots prop",level:3,hash:"the-slots-prop"},{text:"The slotProps prop",level:3,hash:"the-slotprops-prop"}]},{text:"Best practices",level:2,hash:"best-practices",children:[]}],title:"Overriding component structure",headers:{components:[]}}},g={"OverridingInternalSlot.js":{module:"./OverridingInternalSlot.js",raw:"import * as React from 'react';\nimport { Select } from '@mui/base/Select';\nimport { Option } from '@mui/base/Option';\n\nexport default function OverridingInternalSlot() {\n  return (\n    <Select slots={{ listbox: 'ol' }} defaultValue=\"First option\">\n      <Option value=\"First option\">First option</Option>\n      <Option value=\"Second option\">Second option</Option>\n    </Select>\n  );\n}\n",jsxPreview:'<Select slots={{ listbox: \'ol\' }} defaultValue="First option">\n  <Option value="First option">First option</Option>\n  <Option value="Second option">Second option</Option>\n</Select>',moduleTS:"./OverridingInternalSlot.js",rawTS:"import * as React from 'react';\nimport { Select } from '@mui/base/Select';\nimport { Option } from '@mui/base/Option';\n\nexport default function OverridingInternalSlot() {\n  return (\n    <Select slots={{ listbox: 'ol' }} defaultValue=\"First option\">\n      <Option value=\"First option\">First option</Option>\n      <Option value=\"Second option\">Second option</Option>\n    </Select>\n  );\n}\n"}};g.scope={process:{},import:{react:c,"@mui/base/Select":p,"@mui/base/Option":d}};var f={"./OverridingInternalSlot.js":function(){return(0,m.jsxs)(u.P,{slots:{listbox:"ol"},defaultValue:"First option",children:[o||(o=(0,m.jsx)(h.W,{value:"First option",children:"First option"})),s||(s=(0,m.jsx)(h.W,{value:"Second option",children:"Second option"}))]})}},b={};function k(){return(0,m.jsx)(r.Z,(0,i.Z)({},a))}},165492:function(e,n,t){"use strict";t.d(n,{Z:function(){return y}});var o,s=t(163804),a=t(667294),i=t(45697),l=t.n(i),c=t(811163),r=t(721923),p=t(875795),d=t(608144),u=t(772184),h=t(400438),m=t(692124),v=t(261589),g=t(703391),f=t(662208),b=t(785893);function k(e){var n=e.mode,t=(0,p.tv)().setMode;return a.useEffect(function(){t(n)},[n,t]),null}function y(e){var n=(0,r.Z)(),t=(0,c.useRouter)(),i=(0,u.ln)(t.asPath).canonicalAs,l=e.disableAd,y=void 0!==l&&l,x=e.disableToc,w=e.disableCssVarsProvider,C=e.demos,M=void 0===C?{}:C,O=e.docs,S=e.demoComponents,T=e.srcComponents,j=O[(0,m.useUserLanguage)()]||O.en,Z=i.startsWith("/joy-ui/")&&!(void 0!==w&&w),B=Z?p.lL:a.Fragment,H=Z?v.default:a.Fragment,P=(0,s.Z)({},Z&&{mode:n.palette.mode});return(0,b.jsxs)(h.Z,{description:j.description,disableAd:y,disableToc:void 0!==x&&x,location:j.location,title:j.title,toc:j.toc,children:[y?null:o||(o=(0,b.jsx)(v.default,{children:(0,b.jsx)(f.Z,{children:(0,b.jsx)(g.ZP,{})})})),(0,b.jsxs)(B,{children:[Z&&(0,b.jsx)(k,{mode:n.palette.mode}),j.rendered.map(function(e,t){return(0,b.jsx)(d.Z,{demoComponents:S,demos:M,disableAd:y,localizedDoc:j,renderedMarkdownOrDemo:e,srcComponents:T,theme:n,WrapperComponent:H,wrapperProps:P},"demos-section-".concat(t))})]})]})}k.propTypes={mode:l().oneOf(["light","dark"])}},83304:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/base-ui/guides/overriding-component-structure",function(){return t(569418)}])}},function(e){e.O(0,[52996,8365,82961,61532,41159,41512,82700,27830,7565,36195,17007,43374,48956,98826,16577,94665,21011,43765,95965,44749,67461,33335,39392,49774,92888,40179],function(){return e(e.s=83304)}),_N_E=e.O()}]);